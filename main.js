(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>i});var o=t(537),r=t.n(o),a=t(645),d=t.n(a)()(r());d.push([n.id,"body {\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 250px 1fr;\n    grid-template-rows: 120px 1fr 50px;\n    height: 100vh;\n    position:relative;\n\n}\n\nh2, h3 {\n    padding: 0;\n    margin: 0;\n}\n\nul {\n    list-style-type: none;\n    padding: 0;\n}\n\nli {\n    padding: 0;\n    margin: 0;\n}\n\nheader {\n    /* height: 120px; */\n    background-color: #323639;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    grid-column-start: 1;\n    grid-column-end: 3;\n  \n    \n}\n\n\nheader h1 {\n    margin-left: 3rem;\n    color: white;\n}\n\n\n.taskBar {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    background-color: #d1cfcf;\n    \n}\n\n\n.taskBarTop {\n    display: flex;\n    flex-direction: column;\n    border: 2px solid black;\n    \n}\n\n\n\n.taskBarContents {\n    display: flex;\n    border: 2px solid black;\n    padding: 0.3rem;\n    gap: 0.5rem;\n    margin: 0.5rem;\n   \n\n}\n\n.taskBarContents:hover{\n    background-color: pink;\n}\n\n\n.activeProject {\n    background-color:pink;\n}\n\n\n\n.projects {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    border: 2px solid black;\n\n\n    \n}\n\n.projectsContent {\n    display: flex;\n    border: 2px solid black;\n    padding: 0.3rem;\n    gap: 0.5rem;\n    margin: 0.5rem;\n   \n\n}\n\n.projects h2 {\n    margin: 1rem;\n    /* border: 1px solid red; */\n\n\n}\n\n.taskView {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    background-color: #f2f0f0;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    padding-top: 1rem;\n    padding-left: 2rem;\n}\n\n.tasks {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n\n}\n\n.task {\n    display: grid;\n    grid-template-columns: 50px 3fr 1fr;\n    grid-template-rows: 50px 1fr;\n    border-bottom: grey solid 1px;\n}\n\n.task:hover {\n    background-color: pink;\n\n}\n\n.checkMarkImgPNG {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 1;\n    grid-row-end: 2;\n}\n\n.taskTitle {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 1;\n    grid-row-end: 2;\n\n}\n\n.taskDueDate {\n    grid-column-start: 3;\n    grid-column-end: 4;\n    grid-row-start: 1;\n    grid-row-end: 2;\n\n}\n\n.taskDescription {\n    grid-column-start: 1;\n    grid-column-end: 4;\n    grid-row-start: 2;\n    grid-row-end: 3;\n}\n\n\n.addTask {\n    height: 2rem;\n    display: flex;\n    align-items: center;\n\n}\n\n.addTask:hover {\n    background-color:#696868 ;\n\n}\n\n\n\n\n#addProjectForm {\n    display: none;\n    height:300px;\n    width:300px;\n    position:absolute;\n    top: 20%;\n    left: 50%;\n    margin-left: -150px;\n    background-color: #c9c8c7;\n\n}\n\n.addProjectFormUser {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addProjectFormUserHeading h2 {\n\n\n}\n\n\n.addProjectFormUserHeading {\n    background-color:#696868;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 3rem;\n    \n}\n\n.addProjectFormUserBody {\n    display: flex;\n    flex-direction: column;\n}\n\n.addProjectFormUserLiTitle {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addProjectFormUserButtons {\n    margin-top: 100px;\n    align-self: flex-end;\n}\n\n#addTaskForm {\n    display: none;\n    height:500px;\n    width:500px;\n    position:absolute;\n    top: 20%;\n    left: 50%;\n    margin-left: -250px;\n    background-color: #c9c8c7;\n\n}\n\n.addTaskFormUser {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addTaskFormUserHeading {\n    background-color:#696868;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 3rem;\n    \n}\n\n.addTaskFormUserBody {\n    display: flex;\n    flex-direction: column;\n}\n\n.addTaskFormUserLi {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addTaskFormUserUl input {\n    background-color: white;\n    border: none;\n    \n}\n\n.addTaskFormUserButtons {\n    \n\n}\n\n\n.flagImgPNG1 {\n    background-color: red;\n}\n.flagImgPNG2 {\n    background-color: orange;\n}\n\n.flagImgPNG3 {\n    background-color: skyblue;\n}\n\n.activePriority {\n    width: 2.5rem;\n    height: 2.5rem;\n\n}\n\n/* .addProjectFormUserHeadingHTwo {\n    text-align: center;\n} */\n\nfooter {\n    background-color: red;\n    grid-row-start: 3;\n    grid-row-end: 4;\n    grid-column-start: 1;\n    grid-column-end: 3;\n}\n\n\n/*\nbackground-color: #ebe7e4;\n*/\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["body {\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 250px 1fr;\n    grid-template-rows: 120px 1fr 50px;\n    height: 100vh;\n    position:relative;\n\n}\n\nh2, h3 {\n    padding: 0;\n    margin: 0;\n}\n\nul {\n    list-style-type: none;\n    padding: 0;\n}\n\nli {\n    padding: 0;\n    margin: 0;\n}\n\nheader {\n    /* height: 120px; */\n    background-color: #323639;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    grid-column-start: 1;\n    grid-column-end: 3;\n  \n    \n}\n\n\nheader h1 {\n    margin-left: 3rem;\n    color: white;\n}\n\n\n.taskBar {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    background-color: #d1cfcf;\n    \n}\n\n\n.taskBarTop {\n    display: flex;\n    flex-direction: column;\n    border: 2px solid black;\n    \n}\n\n\n\n.taskBarContents {\n    display: flex;\n    border: 2px solid black;\n    padding: 0.3rem;\n    gap: 0.5rem;\n    margin: 0.5rem;\n   \n\n}\n\n.taskBarContents:hover{\n    background-color: pink;\n}\n\n\n.activeProject {\n    background-color:pink;\n}\n\n\n\n.projects {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    border: 2px solid black;\n\n\n    \n}\n\n.projectsContent {\n    display: flex;\n    border: 2px solid black;\n    padding: 0.3rem;\n    gap: 0.5rem;\n    margin: 0.5rem;\n   \n\n}\n\n.projects h2 {\n    margin: 1rem;\n    /* border: 1px solid red; */\n\n\n}\n\n.taskView {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    background-color: #f2f0f0;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    padding-top: 1rem;\n    padding-left: 2rem;\n}\n\n.tasks {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n\n}\n\n.task {\n    display: grid;\n    grid-template-columns: 50px 3fr 1fr;\n    grid-template-rows: 50px 1fr;\n    border-bottom: grey solid 1px;\n}\n\n.task:hover {\n    background-color: pink;\n\n}\n\n.checkMarkImgPNG {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 1;\n    grid-row-end: 2;\n}\n\n.taskTitle {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 1;\n    grid-row-end: 2;\n\n}\n\n.taskDueDate {\n    grid-column-start: 3;\n    grid-column-end: 4;\n    grid-row-start: 1;\n    grid-row-end: 2;\n\n}\n\n.taskDescription {\n    grid-column-start: 1;\n    grid-column-end: 4;\n    grid-row-start: 2;\n    grid-row-end: 3;\n}\n\n\n.addTask {\n    height: 2rem;\n    display: flex;\n    align-items: center;\n\n}\n\n.addTask:hover {\n    background-color:#696868 ;\n\n}\n\n\n\n\n#addProjectForm {\n    display: none;\n    height:300px;\n    width:300px;\n    position:absolute;\n    top: 20%;\n    left: 50%;\n    margin-left: -150px;\n    background-color: #c9c8c7;\n\n}\n\n.addProjectFormUser {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addProjectFormUserHeading h2 {\n\n\n}\n\n\n.addProjectFormUserHeading {\n    background-color:#696868;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 3rem;\n    \n}\n\n.addProjectFormUserBody {\n    display: flex;\n    flex-direction: column;\n}\n\n.addProjectFormUserLiTitle {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addProjectFormUserButtons {\n    margin-top: 100px;\n    align-self: flex-end;\n}\n\n#addTaskForm {\n    display: none;\n    height:500px;\n    width:500px;\n    position:absolute;\n    top: 20%;\n    left: 50%;\n    margin-left: -250px;\n    background-color: #c9c8c7;\n\n}\n\n.addTaskFormUser {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addTaskFormUserHeading {\n    background-color:#696868;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 3rem;\n    \n}\n\n.addTaskFormUserBody {\n    display: flex;\n    flex-direction: column;\n}\n\n.addTaskFormUserLi {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addTaskFormUserUl input {\n    background-color: white;\n    border: none;\n    \n}\n\n.addTaskFormUserButtons {\n    \n\n}\n\n\n.flagImgPNG1 {\n    background-color: red;\n}\n.flagImgPNG2 {\n    background-color: orange;\n}\n\n.flagImgPNG3 {\n    background-color: skyblue;\n}\n\n.activePriority {\n    width: 2.5rem;\n    height: 2.5rem;\n\n}\n\n/* .addProjectFormUserHeadingHTwo {\n    text-align: center;\n} */\n\nfooter {\n    background-color: red;\n    grid-row-start: 3;\n    grid-row-end: 4;\n    grid-column-start: 1;\n    grid-column-end: 3;\n}\n\n\n/*\nbackground-color: #ebe7e4;\n*/\n"],sourceRoot:""}]);const i=d},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var d={};if(o)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(d[c]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);o&&d[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),d=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(d).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},d=[],i=0;i<n.length;i++){var c=n[i],s=o.base?c[0]+o.base:c[0],l=a[s]||0,A="".concat(s," ").concat(l);a[s]=l+1;var p=t(A),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=r(u,o);o.byIndex=i,e.splice(i,0,{identifier:A,updater:m,references:1})}d.push(A)}return d}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var d=0;d<a.length;d++){var i=t(a[d]);e[i].references--}for(var c=o(n,r),s=0;s<a.length;s++){var l=t(a[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),a=t(569),d=t.n(a),i=t(565),c=t.n(i),s=t(216),l=t.n(s),A=t(589),p=t.n(A),u=t(426),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=d().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=l(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const g=t.p+"f8ac04aeb3ff24b48be9.png",C=t.p+"28d090802088aff05717.png",B=t.p+"c5874428bc8b8ddbf14a.png",k=t.p+"e9af1827778de11ad1d9.png",f=t.p+"fbfd272aede7d884df15.png",h=t.p+"2546d2ce9bf2dc800b40.png";function I(n,e){return{title:n,projectIndex:e,tasks:[]}}function y(n,e,t,o,r){return{title:e,dueDate:t,description:r,priority:o,taskIndex:n,getPriority:()=>o}}console.log("------------------"),function(){const n=function(){let n=function(){let n=[];return n.push(I("inbox",0)),n.push(I("today",1)),n.push(I("upcoming",2)),{getBoard:()=>n,addProject:(e,t)=>{n.push(I(e,t))},addTask:(e,t,...o)=>{console.log("taskInputs below"),console.log(...o);for(let r=0;r<n.length;r++)n[r].title===e&&n[r].tasks.push(y(t,...o));return n},getPriority:(e,t)=>{console.log(`getPriority function in Board is running w/ ${e}, ${t}`);for(let o=0;o<n.length;o++)if(n[o].title===e){console.log("found project");for(let e=0;e<n[o].tasks.length;e++)if(n[o].tasks[e].title===t)return console.log(n[o].tasks[e].getPriority()),n[o].tasks[e].getPriority()}console.log("this shouldn't be running")},editTask:(e,t,...o)=>{for(let r=0;r<n.length;r++)if(n[r].projectIndex===e)for(let e=0;n[r].tasks.length;e++)n[r].tasks[e].taskIndex===t&&n[r].tasks.splice(e,0,y(t,...o))}}}(),e=n.getBoard(),t=n.getBoard()[0];console.log("boardBoard below"),console.log(e);let o=3,r=2,a=()=>t.title,d=()=>t.tasks;n.addTask(a(),0,"asfed","06/05/25","p1","this is an example of task description"),n.addTask(a(),1,"a","b","p4","e");let i=t.tasks[0];console.log("activeTask below "),console.log(i);const c=()=>i.title;return n.getPriority(a(),c()),{addTask:(e,t,o,d)=>{n.addTask(a(),r,e,t,o,d),r++},getBoard:()=>e,getTaskIndex:()=>r,getActiveProject:()=>t,getActiveTask:()=>i,getActiveProjectTitle:a,getActiveProjectTasks:d,switchActiveProject:n=>{for(let o=0;o<e.length;o++)e[o].title===n&&(t=e[o])},addProject:e=>{n.addProject(e,o),o++},switchActiveTask:n=>{for(let e=0;e<d().length;e++)d()[e].title===n&&(i=d()[e],console.log("this is now activeTask = "),console.log(i))},getActiveTaskTitle:c,getActiveTaskPriority:()=>i.priority,getActiveTaskTaskIndex:()=>i.taskIndex}}();let e,t=n.getActiveTask();const o=document.querySelector("body"),r=()=>{o.innerHTML="";const t=n.getBoard();let r=n.getActiveProjectTitle();console.log(`this is activeProjectTitle: ${r}`);const m=document.createElement("header");o.appendChild(m);const I=document.createElement("h1");I.textContent="ToDoList",m.appendChild(I);const y=document.createElement("div");y.classList.add("taskBar"),o.appendChild(y);const b=document.createElement("nav");b.classList.add("taskBarTop"),y.appendChild(b);const v=document.createElement("div");v.classList.add("taskBarContents"),v.dataset.projectTitle="inbox",b.appendChild(v);const x=new Image;x.src=g,x.dataset.projectTitle="inbox",v.appendChild(x);const E=document.createElement("h3");E.textContent="Inbox",E.dataset.projectTitle="inbox",v.appendChild(E);const T=document.createElement("div");T.classList.add("taskBarContents"),T.dataset.projectTitle="today",b.appendChild(T);const j=new Image;j.src=C,j.classList.add("todayImgPNG"),T.appendChild(j);const w=document.createElement("h3");w.textContent="Today",T.appendChild(w);const P=document.createElement("div");P.classList.add("taskBarContents"),P.dataset.projectTitle="upcoming",b.appendChild(P);const L=new Image;L.src=B,L.classList.add("upcomingImgPNG"),P.appendChild(L);const F=document.createElement("h3");F.textContent="Upcoming",P.appendChild(F);const U=document.createElement("div");U.classList.add("projects"),y.appendChild(U);const S=document.createElement("h2");S.textContent="Projects",U.appendChild(S);const D=document.createElement("nav");U.appendChild(D);for(let n=3;n<t.length;n++){const e=document.createElement("div");e.classList.add("taskBarContents"),e.dataset.projectTitle=`${t[n].title}`,D.appendChild(e);const o=document.createElement("h3");o.textContent=`${t[n].title}`,e.appendChild(o)}const G=document.createElement("div");G.classList.add("projectsContent"),D.appendChild(G);const q=new Image;q.src=k,G.appendChild(q);const N=document.createElement("h3");N.textContent="Add Project",G.appendChild(N),G.addEventListener("click",d);const H=document.createElement("div");H.classList.add("taskView"),o.appendChild(H);const Y=document.createElement("h2");Y.classList.add("activeProjectHeading"),console.log(`this is activeProjectTitle: ${r}`),Y.textContent=r,H.appendChild(Y);const M=document.createElement("nav");M.classList.add("tasks"),H.appendChild(M),n.getActiveProjectTasks().forEach((n=>{const e=document.createElement("div");e.classList.add("task"),e.dataset.taskTitle=n.title,e.addEventListener("click",u),M.appendChild(e);const t=new Image;t.src=f,t.classList.add("checkMarkImgPNG"),e.appendChild(t);const o=document.createElement("h3");o.classList.add("taskTitle"),o.textContent=n.title,"p1"===n.getPriority()?o.style.backgroundColor="red":"p2"===n.getPriority()?o.style.backgroundColor="orange":"p3"===n.getPriority()?o.style.backgroundColor="skyblue":"p4"===n.getPriority()&&(o.style.backgroundColor="white"),e.appendChild(o);const r=document.createElement("div");r.classList.add("taskDueDate"),r.textContent=n.dueDate,e.appendChild(r),e.dataset.priority=n.priority;const a=document.createElement("p");a.classList.add("taskDescription"),a.textContent=n.description,e.appendChild(a)}));const $=document.createElement("div");$.classList.add("addTask"),$.textContent="+ Add Task",M.appendChild($),$.addEventListener("click",s);const W=document.createElement("footer");o.appendChild(W);const R=document.createElement("h3");R.textContent="this is a footer",W.appendChild(R);const Z=document.createElement("div");Z.id="addProjectForm",o.appendChild(Z);const V=document.createElement("form");V.classList.add("addProjectFormUser"),Z.appendChild(V);const O=document.createElement("div");O.classList.add("addProjectFormUserHeading"),V.appendChild(O);const X=document.createElement("h2");X.textContent="Add Project",O.appendChild(X);const z=document.createElement("div");z.classList.add("addProjectFormUserBody"),V.appendChild(z);const Q=document.createElement("ul");Q.classList.add("addProjectFormUserUl"),z.appendChild(Q);const J=document.createElement("li");J.classList.add("addProjectFormUserLiTitle"),Q.appendChild(J);const _=document.createElement("label");_.setAttribute("for","projectTitle"),_.textContent="Project Title ",J.appendChild(_);const K=document.createElement("input");K.classList.add("addProjectFormTitleInput"),K.setAttribute("type","text"),K.setAttribute("name","projectTitle"),J.appendChild(K);const nn=document.createElement("div");nn.classList.add("addProjectFormUserButtons"),Z.appendChild(nn);const en=document.createElement("button");en.textContent="Cancel",nn.appendChild(en),en.addEventListener("click",i);const tn=document.createElement("button");tn.textContent="Add",nn.appendChild(tn),tn.addEventListener("click",c);const on=document.createElement("div");on.id="addTaskForm",o.appendChild(on);const rn=document.createElement("form");rn.classList.add("addTaskFormUser"),on.appendChild(rn);const an=document.createElement("div");an.classList.add("addTaskFormUserHeading"),rn.appendChild(an);const dn=document.createElement("h2");dn.textContent="Task Info",an.appendChild(dn);const cn=document.createElement("div");cn.classList.add("addTaskFormUserBody"),rn.appendChild(cn);const sn=document.createElement("ul");sn.classList.add("addTaskFormUserUl"),cn.appendChild(sn);const ln=document.createElement("li");ln.classList.add("addTaskFormUserLi"),sn.appendChild(ln);const An=document.createElement("label");An.setAttribute("for","taskTitle"),An.textContent="Task Title ",ln.appendChild(An);const pn=document.createElement("input");pn.classList.add("addTaskFormInput"),pn.classList.add("addTaskFormTitleInput"),pn.setAttribute("type","text"),pn.setAttribute("id","taskTitle"),ln.appendChild(pn);const un=document.createElement("li");un.classList.add("addTaskFormUserLi"),sn.appendChild(un);const mn=document.createElement("label");mn.setAttribute("for","taskDescription"),mn.textContent="Task Description ",un.appendChild(mn);const gn=document.createElement("input");gn.classList.add("addTaskFormInput"),gn.classList.add("addTaskFormDescriptionInput"),gn.setAttribute("type","text"),gn.setAttribute("id","taskDescription"),un.appendChild(gn);const Cn=document.createElement("li");Cn.classList.add("addTaskFormUserLi"),sn.appendChild(Cn);const Bn=document.createElement("label");Bn.setAttribute("for","taskDueDate"),Bn.textContent="Task DueDate ",Cn.appendChild(Bn);const kn=document.createElement("input");kn.classList.add("addTaskFormInput"),kn.classList.add("addTaskFormDueDateInput"),kn.setAttribute("type","text"),kn.setAttribute("id","taskDueDate"),"today"===r&&(kn.value=new Date),Cn.appendChild(kn);const fn=document.createElement("div");fn.classList.add("addTaskFormUserButtons"),on.appendChild(fn);const hn=document.createElement("div");hn.classList.add("addTaskFormUserPriority"),fn.appendChild(hn);const In=document.createElement("div");hn.appendChild(In);const yn=document.createElement("label");yn.textContent="Priority",In.appendChild(yn);const bn=document.createElement("div");hn.appendChild(bn);for(let n=1;n<5;n++){const e=new Image;e.src=h,e.classList.add("flagImgPNG"),e.classList.add(`flagImgPNG${n}`),e.dataset.priority=`p${n}`,e.addEventListener("click",A),bn.appendChild(e)}e="p4";const vn=document.createElement("button");vn.textContent="Cancel",fn.appendChild(vn),vn.addEventListener("click",l);const xn=document.createElement("button");xn.textContent="Submit",fn.appendChild(xn),xn.addEventListener("click",p);const En=document.querySelectorAll(".taskBarContents");En.forEach((n=>{n.addEventListener("click",a)})),console.log("switchActiveProjectClick event has been added"),En.forEach((n=>{n.dataset.projectTitle===r&&n.classList.add("activeProject")}))};function a(e){console.log("below is switchActiveProject target"),console.log(e.target);const t=e.target.dataset.projectTitle;t&&(n.switchActiveProject(t),r())}const d=function(){document.querySelector("#addProjectForm").style.display="block"};function i(){document.querySelector(".addProjectFormTitleInput").value="",document.querySelector("#addProjectForm").style.display="none"}function c(){const e=document.querySelector(".addProjectFormTitleInput").value;n.addProject(e),r()}function s(){document.querySelector("#addTaskForm").style.display="block"}function l(){const e=document.querySelectorAll(".addTaskFormInput");for(let n of e)n.value="";document.querySelector("#addTaskForm").style.display="none",m(),t=n.getActiveProjectTasks()[0]}function A(n){const t=n.target.dataset.priority;console.log("selectPriorityClick running"),t&&(e=t,m(),n.target.classList.add("activePriority"))}function p(){n.getActiveTaskTaskIndex()!=n.getTaskIndex()&&console.log("buttbutt");const t=document.querySelector(".addTaskFormTitleInput").value,o=document.querySelector(".addTaskFormDescriptionInput").value,a=document.querySelector(".addTaskFormDueDateInput").value;console.log(`this is priority: ${e}`),n.addTask(t,a,e,o),l(),r()}function u(e){!function(e){console.log("switchActiveTaskClick has run");const t=e.target.dataset.taskTitle;console.log(`clicked ${e.target.dataset.taskTitle}`),t&&(n.switchActiveTask(t),console.log("this is now activeTask"),console.log(n.getActiveTask()))}(e),s(),document.querySelector("#taskTitle").value=n.getActiveTask().title,document.querySelector("#taskDescription").value=n.getActiveTask().description,document.querySelector("#taskDueDate").value=n.getActiveTask().dueDate,m(),document.querySelectorAll(".flagImgPNG").forEach((e=>{e.dataset.priority===n.getActiveTaskPriority()&&e.classList.add("activePriority")}))}function m(){document.querySelectorAll(".flagImgPNG").forEach((n=>{n.classList.remove("activePriority")}))}r()}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,