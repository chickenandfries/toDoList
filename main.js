(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),r=t.n(o),a=t(645),d=t.n(a)()(r());d.push([n.id,"body {\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 250px 1fr;\n    grid-template-rows: 120px 1fr 50px;\n    height: 100vh;\n    position:relative;\n\n}\n\nh2, h3 {\n    padding: 0;\n    margin: 0;\n}\n\nul {\n    list-style-type: none;\n    padding: 0;\n}\n\nli {\n    padding: 0;\n    margin: 0;\n}\n\nheader {\n    /* height: 120px; */\n    background-color: #323639;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    grid-column-start: 1;\n    grid-column-end: 3;\n  \n    \n}\n\n\nheader h1 {\n    margin-left: 3rem;\n    color: white;\n}\n\n\n.taskBar {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    background-color: #d1cfcf;\n    \n}\n\n\n.taskBarTop {\n    display: flex;\n    flex-direction: column;\n    border: 2px solid black;\n    \n}\n\n\n\n.taskBarContents {\n    display: flex;\n    /* border: 2px solid black; */\n    padding: 0.3rem;\n    gap: 0.5rem;\n    margin: 0.5rem;\n}\n\n.taskBarContents > * {\n    pointer-events: none;\n    \n}\n\n.taskBarContents:hover{\n    background-color: pink;\n}\n\n\n.activeProject {\n    background-color:pink;\n}\n\n\n\n.projects {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    border: 2px solid black;\n\n\n    \n}\n\n.projectsNavProject {\n    display: grid;\n    grid-template-columns: 215px 1fr;\n}\n\n.projectsNavProject:hover {\n    background-color: pink;\n}\n\n.projectsNavProjectContent {\n    grid-column-start: 1;\n    grid-column-end: 2;\n}\n\n.projectsNavProjectEdit {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    align-self: center;\n \n}\n\n.projectsContent {\n    display: flex;\n    border: 2px solid black;\n    padding: 0.3rem;\n    gap: 0.5rem;\n    margin: 0.5rem;   \n\n}\n.projectsContent > * {\n    pointer-events: none;\n}\n\n.projects h2 {\n    margin: 1rem;\n    /* border: 1px solid red; */\n\n\n}\n\n.taskView {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    background-color: #f2f0f0;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    padding-top: 1rem;\n    padding-left: 2rem;\n}\n\n.tasks {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n\n}\n\n.task {\n    display: grid;\n    grid-template-columns: 50px 1fr;\n    border: 2px solid black;\n}\n\n\n.taskComplete {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 1;\n    grid-row-end: 2;\n    background-color: yellow;\n    border: 2px solid red;\n}\n\n.taskContent {\n    grid-column-start: 2;\n    grid-column-end: 3;\n\n    display: grid;\n    grid-template-columns:  3fr 1fr;\n    grid-template-rows: 50px 1fr;\n    border-bottom: grey solid 1px;\n}\n\n\n\n.task:hover {\n    background-color: pink;\n\n}\n\n\n\n.taskTitle {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 1;\n    grid-row-end: 2;\n    pointer-events: none;\n\n}\n\n.taskDueDate {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 1;\n    grid-row-end: 2;\n    pointer-events: none;\n\n}\n\n.taskDescription {\n    grid-column-start: 1;\n    grid-column-end: 3;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    pointer-events: none;\n}\n\n\n.addTask {\n    height: 2rem;\n    display: flex;\n    align-items: center;\n\n}\n\n.addTask:hover {\n    background-color:#696868 ;\n\n}\n\n\n\n\n#addProjectForm {\n    display: none;\n    height:300px;\n    width:300px;\n    position:absolute;\n    top: 20%;\n    left: 50%;\n    margin-left: -150px;\n    background-color: #c9c8c7;\n\n}\n\n.addProjectFormUser {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addProjectFormUserHeading h2 {\n\n\n}\n\n\n.addProjectFormUserHeading {\n    background-color:#696868;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 3rem;\n    \n}\n\n.addProjectFormUserBody {\n    display: flex;\n    flex-direction: column;\n}\n\n.addProjectFormUserLiTitle {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addProjectFormUserButtons {\n    margin-top: 100px;\n    align-self: flex-end;\n}\n\n#addTaskForm {\n    display: none;\n    height:500px;\n    width:500px;\n    position:absolute;\n    top: 20%;\n    left: 50%;\n    margin-left: -250px;\n    background-color: #c9c8c7;\n\n}\n\n.addTaskFormUser {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addTaskFormUserHeading {\n    background-color:#696868;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 3rem;\n    \n}\n\n.addTaskFormUserBody {\n    display: flex;\n    flex-direction: column;\n}\n\n.addTaskFormUserLi {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addTaskFormUserUl input {\n    background-color: white;\n    border: none;\n    \n}\n\n.addTaskFormUserButtons {\n    \n\n}\n\n\n.flagImgPNG1 {\n    background-color: red;\n}\n.flagImgPNG2 {\n    background-color: orange;\n}\n\n.flagImgPNG3 {\n    background-color: skyblue;\n}\n\n.activePriority {\n    width: 2.5rem;\n    height: 2.5rem;\n\n}\n\n/* .addProjectFormUserHeadingHTwo {\n    text-align: center;\n} */\n\nfooter {\n    background-color: red;\n    grid-row-start: 3;\n    grid-row-end: 4;\n    grid-column-start: 1;\n    grid-column-end: 3;\n}\n\n\n/*\nbackground-color: #ebe7e4;\n*/\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["body {\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 250px 1fr;\n    grid-template-rows: 120px 1fr 50px;\n    height: 100vh;\n    position:relative;\n\n}\n\nh2, h3 {\n    padding: 0;\n    margin: 0;\n}\n\nul {\n    list-style-type: none;\n    padding: 0;\n}\n\nli {\n    padding: 0;\n    margin: 0;\n}\n\nheader {\n    /* height: 120px; */\n    background-color: #323639;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    grid-column-start: 1;\n    grid-column-end: 3;\n  \n    \n}\n\n\nheader h1 {\n    margin-left: 3rem;\n    color: white;\n}\n\n\n.taskBar {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    background-color: #d1cfcf;\n    \n}\n\n\n.taskBarTop {\n    display: flex;\n    flex-direction: column;\n    border: 2px solid black;\n    \n}\n\n\n\n.taskBarContents {\n    display: flex;\n    /* border: 2px solid black; */\n    padding: 0.3rem;\n    gap: 0.5rem;\n    margin: 0.5rem;\n}\n\n.taskBarContents > * {\n    pointer-events: none;\n    \n}\n\n.taskBarContents:hover{\n    background-color: pink;\n}\n\n\n.activeProject {\n    background-color:pink;\n}\n\n\n\n.projects {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    border: 2px solid black;\n\n\n    \n}\n\n.projectsNavProject {\n    display: grid;\n    grid-template-columns: 215px 1fr;\n}\n\n.projectsNavProject:hover {\n    background-color: pink;\n}\n\n.projectsNavProjectContent {\n    grid-column-start: 1;\n    grid-column-end: 2;\n}\n\n.projectsNavProjectEdit {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    align-self: center;\n \n}\n\n.projectsContent {\n    display: flex;\n    border: 2px solid black;\n    padding: 0.3rem;\n    gap: 0.5rem;\n    margin: 0.5rem;   \n\n}\n.projectsContent > * {\n    pointer-events: none;\n}\n\n.projects h2 {\n    margin: 1rem;\n    /* border: 1px solid red; */\n\n\n}\n\n.taskView {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    background-color: #f2f0f0;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    padding-top: 1rem;\n    padding-left: 2rem;\n}\n\n.tasks {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n\n}\n\n.task {\n    display: grid;\n    grid-template-columns: 50px 1fr;\n    border: 2px solid black;\n}\n\n\n.taskComplete {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 1;\n    grid-row-end: 2;\n    background-color: yellow;\n    border: 2px solid red;\n}\n\n.taskContent {\n    grid-column-start: 2;\n    grid-column-end: 3;\n\n    display: grid;\n    grid-template-columns:  3fr 1fr;\n    grid-template-rows: 50px 1fr;\n    border-bottom: grey solid 1px;\n}\n\n\n\n.task:hover {\n    background-color: pink;\n\n}\n\n\n\n.taskTitle {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 1;\n    grid-row-end: 2;\n    pointer-events: none;\n\n}\n\n.taskDueDate {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 1;\n    grid-row-end: 2;\n    pointer-events: none;\n\n}\n\n.taskDescription {\n    grid-column-start: 1;\n    grid-column-end: 3;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    pointer-events: none;\n}\n\n\n.addTask {\n    height: 2rem;\n    display: flex;\n    align-items: center;\n\n}\n\n.addTask:hover {\n    background-color:#696868 ;\n\n}\n\n\n\n\n#addProjectForm {\n    display: none;\n    height:300px;\n    width:300px;\n    position:absolute;\n    top: 20%;\n    left: 50%;\n    margin-left: -150px;\n    background-color: #c9c8c7;\n\n}\n\n.addProjectFormUser {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addProjectFormUserHeading h2 {\n\n\n}\n\n\n.addProjectFormUserHeading {\n    background-color:#696868;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 3rem;\n    \n}\n\n.addProjectFormUserBody {\n    display: flex;\n    flex-direction: column;\n}\n\n.addProjectFormUserLiTitle {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addProjectFormUserButtons {\n    margin-top: 100px;\n    align-self: flex-end;\n}\n\n#addTaskForm {\n    display: none;\n    height:500px;\n    width:500px;\n    position:absolute;\n    top: 20%;\n    left: 50%;\n    margin-left: -250px;\n    background-color: #c9c8c7;\n\n}\n\n.addTaskFormUser {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addTaskFormUserHeading {\n    background-color:#696868;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 3rem;\n    \n}\n\n.addTaskFormUserBody {\n    display: flex;\n    flex-direction: column;\n}\n\n.addTaskFormUserLi {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addTaskFormUserUl input {\n    background-color: white;\n    border: none;\n    \n}\n\n.addTaskFormUserButtons {\n    \n\n}\n\n\n.flagImgPNG1 {\n    background-color: red;\n}\n.flagImgPNG2 {\n    background-color: orange;\n}\n\n.flagImgPNG3 {\n    background-color: skyblue;\n}\n\n.activePriority {\n    width: 2.5rem;\n    height: 2.5rem;\n\n}\n\n/* .addProjectFormUserHeadingHTwo {\n    text-align: center;\n} */\n\nfooter {\n    background-color: red;\n    grid-row-start: 3;\n    grid-row-end: 4;\n    grid-column-start: 1;\n    grid-column-end: 3;\n}\n\n\n/*\nbackground-color: #ebe7e4;\n*/\n"],sourceRoot:""}]);const c=d},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var d={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(d[s]=!0)}for(var i=0;i<n.length;i++){var l=[].concat(n[i]);o&&d[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),d=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(d).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},d=[],c=0;c<n.length;c++){var s=n[c],i=o.base?s[0]+o.base:s[0],l=a[i]||0,A="".concat(i," ").concat(l);a[i]=l+1;var p=t(A),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=r(u,o);o.byIndex=c,e.splice(c,0,{identifier:A,updater:m,references:1})}d.push(A)}return d}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var d=0;d<a.length;d++){var c=t(a[d]);e[c].references--}for(var s=o(n,r),i=0;i<a.length;i++){var l=t(a[i]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),a=t(569),d=t.n(a),c=t(565),s=t.n(c),i=t(216),l=t.n(i),A=t(589),p=t.n(A),u=t(426),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=d().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=l(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const g=t.p+"f8ac04aeb3ff24b48be9.png",C=t.p+"28d090802088aff05717.png",B=t.p+"c5874428bc8b8ddbf14a.png",I=t.p+"e9af1827778de11ad1d9.png",k=t.p+"fbfd272aede7d884df15.png",f=t.p+"2546d2ce9bf2dc800b40.png",h=t.p+"157b93f371f462c821d7.png";function v(n,e){return{title:n,projectIndex:e,tasks:[]}}function b(n,e,t,o,r){return{title:e,dueDate:t,description:r,priority:o,taskIndex:n,getPriority:()=>o}}console.log("------------------"),function(){const n=function(){let n=function(){let n=[];n.push(v("inbox",0)),n.push(v("today",1)),n.push(v("upcoming",2));let e=[];return{getBoard:()=>n,addProject:(e,t)=>{n.push(v(e,t))},addTask:(e,t,...o)=>{console.log("taskInputs below"),console.log(...o);for(let r=0;r<n.length;r++)n[r].projectIndex===e&&n[r].tasks.push(b(t,...o));return n},editTaskInputs:(e,t,...o)=>{for(let r=0;r<n.length;r++)if(n[r].projectIndex===e){console.log("found matching project");for(let e=0;e<n[r].tasks.length;e++)if(console.log(n[r].tasks[e]),console.log(n[r].tasks[e].taskIndex),n[r].tasks[e].taskIndex===t)return console.log("found matching task!!"),void n[r].tasks.splice(e,1,b(t,...o))}},deleteProject:t=>{for(let o=0;o<n.length;o++)n[o].projectIndex===t&&e.push(n.splice(o,1));console.log("board"),console.log(n),console.log("this is now projectTrash"),console.log(e)},editProjectInputs:(e,t)=>{for(let o=0;o<n.length;o++)if(n[o].projectIndex===e)return console.log("found matching project"),void n.splice(o,1,v(e,t))}}}(),e=n.getBoard(),t=n.getBoard()[0];console.log("boardBoard below"),console.log(e);let o=3,r=2,a=()=>t.tasks,d=()=>t.projectIndex;console.log(d()),n.addTask(d(),0,"asfed","06/05/25","p1","This is a task in your inbox. you can "),n.addTask(d(),1,"a","b","p4","e");let c="";console.log("activeTask below "),console.log(c);const s=()=>c.taskIndex;return{addTask:(e,t,o,a)=>{n.addTask(d(),r,e,t,o,a),r++},getBoard:()=>e,getTaskIndex:()=>r,getActiveProject:()=>t,getActiveTask:()=>c,getActiveProjectTitle:()=>t.title,getActiveProjectTasks:a,getActiveProjectIndex:d,switchActiveProject:n=>{console.log("switchActiveProject is running");for(let o=0;o<e.length;o++)e[o].projectIndex===n&&(console.log("found project"),t=e[o],console.log(t))},addProject:e=>{n.addProject(e,o),o++},switchActiveTask:n=>{for(let e=0;e<a().length;e++)a()[e].taskIndex===n&&(c=a()[e],console.log("this is now activeTask = "),console.log(c))},getActiveTaskTitle:()=>c.title,getActiveTaskPriority:()=>c.priority,getActiveTaskTaskIndex:s,editTaskInputs:(e,t,o,r)=>{console.log("editTaskInputs is now running"),n.editTaskInputs(d(),s(),e,t,o,r),console.log("this is active Task now"),console.log(c),c=""},deleteProject:()=>{n.deleteProject(d())},editProjectInputs:e=>{console.log("editProjectInputs now running"),n.editProjectInputs(d(),e)}}}();let e,t=n.getActiveTask();const o=document.querySelector("body"),r=()=>{o.innerHTML="";const t=n.getBoard();let r=n.getActiveProjectTitle();console.log(`this is activeProjectTitle: ${r}`);let v=n.getActiveProjectIndex();const b=document.createElement("header");o.appendChild(b);const x=document.createElement("h1");x.textContent="ToDoList",b.appendChild(x);const y=document.createElement("div");y.classList.add("taskBar"),o.appendChild(y);const E=document.createElement("nav");E.classList.add("taskBarTop"),y.appendChild(E);const j=document.createElement("div");j.classList.add("taskBarContents"),j.dataset.projectTitle="inbox",j.dataset.projectIndex=0,E.appendChild(j);const T=new Image;T.src=g,T.dataset.projectTitle="inbox",j.appendChild(T);const P=document.createElement("h3");P.textContent="Inbox",P.dataset.projectTitle="inbox",j.appendChild(P);const w=document.createElement("div");w.classList.add("taskBarContents"),w.dataset.projectTitle="today",w.dataset.projectIndex=1,E.appendChild(w);const L=new Image;L.src=C,L.classList.add("todayImgPNG"),w.appendChild(L);const F=document.createElement("h3");F.textContent="Today",w.appendChild(F);const U=document.createElement("div");U.classList.add("taskBarContents"),U.dataset.projectTitle="upcoming",U.dataset.projectIndex=2,E.appendChild(U);const S=new Image;S.src=B,S.classList.add("upcomingImgPNG"),U.appendChild(S);const D=document.createElement("h3");D.textContent="Upcoming",U.appendChild(D);const N=document.createElement("div");N.classList.add("projects"),y.appendChild(N);const q=document.createElement("h2");q.textContent="Projects",N.appendChild(q);const G=document.createElement("nav");N.appendChild(G);for(let n=3;n<t.length;n++){const e=document.createElement("div");e.classList.add("projectsNavProject"),G.appendChild(e);const o=document.createElement("div");o.classList.add("taskBarContents"),o.dataset.projectTitle=`${t[n].title}`,o.dataset.projectIndex=n,console.log("right before openEditProjectForm"),o.addEventListener("click",m),o.addEventListener("click",console.log("project has been clicked!!")),e.appendChild(o);const r=document.createElement("h3");r.textContent=`${t[n].title}`,o.appendChild(r);const a=document.createElement("div");a.classList.add("projectsNavProjectEdit"),e.appendChild(a);const d=new Image;d.src=h,a.appendChild(d)}const H=document.createElement("div");H.classList.add("projectsContent"),G.appendChild(H);const Y=new Image;Y.src=I,H.appendChild(Y);const $=document.createElement("h3");$.textContent="Add Project",H.appendChild($),H.addEventListener("click",d);const M=document.createElement("div");M.classList.add("taskView"),o.appendChild(M);const W=document.createElement("h2");W.classList.add("activeProjectHeading"),console.log(`this is activeProjectTitle: ${r}`),W.textContent=r,M.appendChild(W);const R=document.createElement("nav");R.classList.add("tasks"),M.appendChild(R),n.getActiveProjectTasks().forEach((n=>{const e=document.createElement("div");e.classList.add("task"),R.appendChild(e);const t=document.createElement("div");t.classList.add("taskComplete"),e.appendChild(t);const o=new Image;o.src=k,o.classList.add("checkMarkImgPNG"),t.appendChild(o);const r=document.createElement("div");r.classList.add("taskContent"),r.dataset.taskIndex=n.taskIndex,r.addEventListener("click",u),e.appendChild(r);const a=document.createElement("h3");a.classList.add("taskTitle"),a.textContent=n.title,"p1"===n.getPriority()?a.style.backgroundColor="red":"p2"===n.getPriority()?a.style.backgroundColor="orange":"p3"===n.getPriority()?a.style.backgroundColor="skyblue":"p4"===n.getPriority()&&(a.style.backgroundColor="white"),r.appendChild(a);const d=document.createElement("div");d.classList.add("taskDueDate"),d.textContent=n.dueDate,r.appendChild(d),r.dataset.priority=n.priority;const c=document.createElement("p");c.classList.add("taskDescription"),c.textContent=n.description,r.appendChild(c)}));const Z=document.createElement("div");Z.classList.add("addTask"),Z.textContent="+ Add Task",R.appendChild(Z),Z.addEventListener("click",i);const V=document.createElement("footer");o.appendChild(V);const z=document.createElement("h3");z.textContent="this is a footer",V.appendChild(z);const O=document.createElement("div");O.id="addProjectForm",o.appendChild(O);const X=document.createElement("form");X.classList.add("addProjectFormUser"),O.appendChild(X);const Q=document.createElement("div");Q.classList.add("addProjectFormUserHeading"),X.appendChild(Q);const J=document.createElement("h2");J.textContent="Add Project",Q.appendChild(J);const _=document.createElement("div");_.classList.add("addProjectFormUserBody"),X.appendChild(_);const K=document.createElement("ul");K.classList.add("addProjectFormUserUl"),_.appendChild(K);const nn=document.createElement("li");nn.classList.add("addProjectFormUserLiTitle"),K.appendChild(nn);const en=document.createElement("label");en.setAttribute("for","projectTitle"),en.textContent="Project Title ",nn.appendChild(en);const tn=document.createElement("input");tn.classList.add("addProjectFormTitleInput"),tn.setAttribute("type","text"),tn.setAttribute("id","projectTitle"),nn.appendChild(tn);const on=document.createElement("div");on.classList.add("addProjectFormUserButtons"),O.appendChild(on);const rn=document.createElement("button");rn.textContent="Cancel",on.appendChild(rn),rn.addEventListener("click",c);const an=document.createElement("button");an.textContent="Add",on.appendChild(an),an.addEventListener("click",s);const dn=document.createElement("div");dn.id="addTaskForm",o.appendChild(dn);const cn=document.createElement("form");cn.classList.add("addTaskFormUser"),dn.appendChild(cn);const sn=document.createElement("div");sn.classList.add("addTaskFormUserHeading"),cn.appendChild(sn);const ln=document.createElement("h2");ln.textContent="Task Info",sn.appendChild(ln);const An=document.createElement("div");An.classList.add("addTaskFormUserBody"),cn.appendChild(An);const pn=document.createElement("ul");pn.classList.add("addTaskFormUserUl"),An.appendChild(pn);const un=document.createElement("li");un.classList.add("addTaskFormUserLi"),pn.appendChild(un);const mn=document.createElement("label");mn.setAttribute("for","taskTitle"),mn.textContent="Task Title ",un.appendChild(mn);const gn=document.createElement("input");gn.classList.add("addTaskFormInput"),gn.classList.add("addTaskFormTitleInput"),gn.setAttribute("type","text"),gn.setAttribute("id","taskTitle"),un.appendChild(gn);const Cn=document.createElement("li");Cn.classList.add("addTaskFormUserLi"),pn.appendChild(Cn);const Bn=document.createElement("label");Bn.setAttribute("for","taskDescription"),Bn.textContent="Task Description ",Cn.appendChild(Bn);const In=document.createElement("input");In.classList.add("addTaskFormInput"),In.classList.add("addTaskFormDescriptionInput"),In.setAttribute("type","text"),In.setAttribute("id","taskDescription"),Cn.appendChild(In);const kn=document.createElement("li");kn.classList.add("addTaskFormUserLi"),pn.appendChild(kn);const fn=document.createElement("label");fn.setAttribute("for","taskDueDate"),fn.textContent="Task DueDate ",kn.appendChild(fn);const hn=document.createElement("input");hn.classList.add("addTaskFormInput"),hn.classList.add("addTaskFormDueDateInput"),hn.setAttribute("type","text"),hn.setAttribute("id","taskDueDate"),"today"===r&&(hn.value=new Date),kn.appendChild(hn);const vn=document.createElement("div");vn.classList.add("addTaskFormUserButtons"),dn.appendChild(vn);const bn=document.createElement("div");bn.classList.add("addTaskFormUserPriority"),vn.appendChild(bn);const xn=document.createElement("div");bn.appendChild(xn);const yn=document.createElement("label");yn.textContent="Priority",xn.appendChild(yn);const En=document.createElement("div");bn.appendChild(En);for(let n=1;n<5;n++){const e=new Image;e.src=f,e.classList.add("flagImgPNG"),e.classList.add(`flagImgPNG${n}`),e.dataset.priority=`p${n}`,e.addEventListener("click",A),En.appendChild(e)}e="p4";const jn=document.createElement("button");jn.textContent="Cancel",vn.appendChild(jn),jn.addEventListener("click",l);const Tn=document.createElement("button");Tn.textContent="Submit",vn.appendChild(Tn),Tn.addEventListener("click",p);const Pn=document.querySelectorAll(".taskBarContents");Pn.forEach((n=>{n.addEventListener("click",a)})),console.log("switchActiveProjectClick event has been added"),Pn.forEach((n=>{Number(n.dataset.projectIndex)===v&&n.classList.add("activeProject")}))};function a(e){console.log("below is switchActiveProject target"),console.log(e.target);const t=e.target.dataset.projectIndex;console.log(`this is selectedProjectIndex:${t} `),t&&(n.switchActiveProject(Number(t)),r())}const d=function(){document.querySelector("#addProjectForm").style.display="block",console.log("openProjectForm succesfully run ")};function c(){document.querySelector(".addProjectFormTitleInput").value="",document.querySelector("#addProjectForm").style.display="none"}function s(){const e=document.querySelector("#projectTitle").value;console.log("projectTitle below for form submission"),console.log(e),n.addProject(e),r()}function i(){document.querySelector("#addTaskForm").style.display="block",console.log("active Task task index below"),console.log(n.getActiveTaskTaskIndex()),console.log(!n.getActiveTask())}function l(){const n=document.querySelectorAll(".addTaskFormInput");for(let e of n)e.value="";document.querySelector("#addTaskForm").style.display="none",x(),t=""}function A(n){const t=n.target.dataset.priority;console.log("selectPriorityClick running"),t&&(e=t,x(),n.target.classList.add("activePriority"))}function p(){let t=document.querySelector(".addTaskFormTitleInput").value,o=document.querySelector(".addTaskFormDescriptionInput").value,a=document.querySelector(".addTaskFormDueDateInput").value;return n.getActiveTask()?n.getActiveTask()?(console.log("existing task has been clicked"),n.editTaskInputs(t,a,e,o),l(),void r()):void 0:(console.log("new Task being created! not existing task "),console.log(`this is priority: ${e}`),n.addTask(t,a,e,o),l(),void r())}function u(o){!function(e){console.log("switchActiveTaskClick has run");const t=e.target.dataset.taskIndex;console.log(`clicked ${e.target.dataset.taskIndex}`),t&&(n.switchActiveTask(Number(t)),console.log("this is now activeTask"),console.log(n.getActiveTask()))}(o),i(),document.querySelector("#taskTitle").value=n.getActiveTask().title,document.querySelector("#taskDescription").value=n.getActiveTask().description,document.querySelector("#taskDueDate").value=n.getActiveTask().dueDate,e=n.getActiveTaskPriority(),console.log("is there activeTask here?"),console.log(t),x(),document.querySelectorAll(".flagImgPNG").forEach((e=>{e.dataset.priority===n.getActiveTaskPriority()&&e.classList.add("activePriority")}))}function m(){console.log("is this running? wtf"),d(),document.querySelector("#projectTitle").value=n.getActiveProjectTitle()}function x(){document.querySelectorAll(".flagImgPNG").forEach((n=>{n.classList.remove("activePriority")}))}r()}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,