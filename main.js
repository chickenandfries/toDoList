(()=>{"use strict";function t(){let t=[];return t.push(o("inbox")),{getBoard:()=>t,addProject:e=>{t.push(o(e))},addTask:(o,...n)=>{for(let s=0;s<t.length;s++)t[s].title===o&&t[s].tasks.push(e(...n));return console.log(t),t}}}function o(t){return{title:t,tasks:[]}}function e(t,o,e,n,s){return{title:t,description:o,dueDate:e,priority:n,notes:s}}const n=e("a","b","d",1,"asdf");console.log(n);const s=t();console.log(s.getBoard()),console.log("------------------");const r=function(){let o=t(),e=o.getBoard()[0].title;return console.log(e),{addTask:(t,n,s,r,l)=>{o.addTask(e,t,n,s,r,l)}}}();r.addTask("inbox",1,2,3,4,5)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBR0EsU0FBU0EsSUFHTCxJQUFJQyxFQUFRLEdBMkNaLE9BMUNBQSxFQUFNQyxLQUFLQyxFQUFRLFVBMENaLENBQ0hDLFNBSGEsSUFBTUgsRUFJbkJJLFdBdkNnQkMsSUFDaEJMLEVBQU1DLEtBQUtDLEVBQVFHLEdBQU0sRUF1Q3pCQyxRQS9CWSxDQUFDQyxLQUFpQkMsS0FHOUIsSUFBSyxJQUFJQyxFQUFJLEVBQUdBLEVBQUdULEVBQU1VLE9BQVFELElBQ3pCVCxFQUFNUyxHQUFHSixRQUFVRSxHQUNuQlAsRUFBTVMsR0FBR0UsTUFBTVYsS0FBS1csS0FBUUosSUFNcEMsT0FGQUssUUFBUUMsSUFBSWQsR0FFTEEsR0F1QmYsQ0FJQSxTQUFTRSxFQUFRRyxHQUtiLE1BQU8sQ0FDSEEsTUFBT0EsRUFDUE0sTUFOUSxHQVNoQixDQUdBLFNBQVNDLEVBQUtQLEVBQU9VLEVBQWFDLEVBQVNDLEVBQVVDLEdBUWpELE1BQU8sQ0FDSGIsTUFBT0EsRUFDUFUsWUFBYUEsRUFDYkMsUUFBU0EsRUFDVEMsU0FBVUEsRUFDVkMsTUFBT0EsRUFNZixDQTJCQSxNQUFNQyxFQUFPUCxFQUFLLElBQUssSUFBSyxJQUFLLEVBQUcsUUFDcENDLFFBQVFDLElBQUlLLEdBRVosTUFBTW5CLEVBQVFELElBQ2RjLFFBQVFDLElBQUlkLEVBQU1HLFlBUWxCVSxRQUFRQyxJQUFJLHNCQUNaLE1BQU1NLEVBckNOLFdBQ0ksSUFBSXBCLEVBQVFELElBQ1JzQixFQUFxQnJCLEVBQU1HLFdBQVcsR0FBR0UsTUFnQjdDLE9BZkFRLFFBQVFDLElBQUlPLEdBZUwsQ0FDSGYsUUFSWSxDQUFDRCxFQUFPVSxFQUFhQyxFQUFTQyxFQUFVQyxLQUVwRGxCLEVBQU1NLFFBQVFlLEVBQW9CaEIsRUFBT1UsRUFBYUMsRUFBU0MsRUFBVUMsRUFBSyxFQVN0RixDQWVnQkksR0FFaEJGLEVBQVFkLFFBQVEsUUFBUyxFQUFFLEVBQUUsRUFBRSxFQUFFLEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvbGlzdC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuLy8vL3N0YXRlIG9mIHRoZSBib2FyZC4uLi4gXG5mdW5jdGlvbiBCb2FyZCgpIHtcblxuICAgIC8vLy9pbml0aWFsIHNldCB1cCBcbiAgICBsZXQgYm9hcmQgPSBbXTtcbiAgICBib2FyZC5wdXNoKFByb2plY3QoJ2luYm94JykpO1xuXG4gICAgLy8gY29uc3QgYWRkUHJvamVjdCA9ICgpID0+IHtcbiAgICAvLyB9XG5cbiAgICBjb25zdCBhZGRQcm9qZWN0ID0gKHRpdGxlKSA9PiB7XG4gICAgICAgIGJvYXJkLnB1c2goUHJvamVjdCh0aXRsZSkpXG4gICAgfVxuXG4gICAgY29uc3QgZ2V0UHJvamVjdCA9IChwcm9qZWN0VGl0bGUpID0+IHtcbiAgICAgICAgY29uc3Qgc2VsZWN0ZWRQcm9qZWN0ID0gYm9hcmQuZmlsdGVyKChwcm9qZWN0KSA9PiBwcm9qZWN0LnRpdGxlID09PSBwcm9qZWN0VGl0bGUpO1xuICAgICAgICByZXR1cm4gc2VsZWN0ZWRQcm9qZWN0IFxuICAgIH1cblxuICAgIGNvbnN0IGFkZFRhc2sgPSAocHJvamVjdFRpdGxlLCAuLi50YXNrSW5wdXRzKSA9PiB7XG4gICAgICAgIC8vIGNvbnN0IHByb2plY3RUaXRsZSA9IHByb2plY3RUaXRsZTtcblxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaTwgYm9hcmQubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChib2FyZFtpXS50aXRsZSA9PT0gcHJvamVjdFRpdGxlKSB7XG4gICAgICAgICAgICAgICAgYm9hcmRbaV0udGFza3MucHVzaChUYXNrKC4uLnRhc2tJbnB1dHMpKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc29sZS5sb2coYm9hcmQpO1xuXG4gICAgICAgIHJldHVybiBib2FyZCAgIFxuICAgIH1cblxuICAgIC8vIGNvbnN0IGFkZFRhc2sgPSAocHJvamVjdFRpdGxlKSA9PiB7XG4gICAgLy8gICAgIC8vIGNvbnN0IHBpY2tlZFByb2plY3QgPSBib2FyZC5maWx0ZXIoKHByb2plY3QpID0+IHByb2plY3QudGl0bGUgPT09IHByb2plY3RUaXRsZSlcbiAgICAgICAgXG4gICAgLy8gICAgIGZvciAoY29uc3QgcHJvamVjdCBvZiBib2FyZCkge1xuICAgIC8vICAgICAgICAgaWYgKHByb2plY3QudGl0bGUgPT09IHByb2plY3RUaXRsZSkge1xuICAgIC8vICAgICAgICAgICAgIHByb2plY3QucHVzaCh0YXNrKVxuICAgIC8vICAgICAgICAgfVxuICAgIC8vICAgICB9XG4gICAgICAgIFxuICAgICAgICBcbiAgICAvLyB9XG5cbiAgICBjb25zdCBnZXRCb2FyZCA9ICgpID0+IGJvYXJkO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgZ2V0Qm9hcmQsIFxuICAgICAgICBhZGRQcm9qZWN0LFxuICAgICAgICBhZGRUYXNrXG4gICAgfVxuXG59XG5cblxuXG5mdW5jdGlvbiBQcm9qZWN0KHRpdGxlKSB7XG4gICAgbGV0IHRhc2tzID0gW107XG5cbiAgICAvLyBjb25zdCBhZGRUYXNrVG9Qcm9qZWN0ID0gcHJvamVjdHMucHVzaChUYXNrKHRpdGxlLCBkZXNjcmlwdGlvbiwgZHVlZGF0ZSwgcHJpb3JpdHksIG5vdGVzKSk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICB0aXRsZTogdGl0bGUsXG4gICAgICAgIHRhc2tzXG4gXG4gICAgfVxufVxuXG5cbmZ1bmN0aW9uIFRhc2sodGl0bGUsIGRlc2NyaXB0aW9uLCBkdWVEYXRlLCBwcmlvcml0eSwgbm90ZXMpIHtcblxuICAgIC8vIHByaW9yaXR5ID0gW1xuICAgIC8vICAgICAxLFxuICAgIC8vICAgICAyLFxuICAgIC8vICAgICAzLFxuICAgIC8vIF1cblxuICAgIHJldHVybiB7XG4gICAgICAgIHRpdGxlOiB0aXRsZSxcbiAgICAgICAgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uLFxuICAgICAgICBkdWVEYXRlOiBkdWVEYXRlLFxuICAgICAgICBwcmlvcml0eTogcHJpb3JpdHksXG4gICAgICAgIG5vdGVzOiBub3RlcyxcblxuICAgIH1cblxuXG5cbn1cblxuXG5mdW5jdGlvbiBDb250cm9sbGVyKCkge1xuICAgIGxldCBib2FyZCA9IEJvYXJkKCk7XG4gICAgbGV0IGFjdGl2ZVByb2plY3RUaXRsZSA9IGJvYXJkLmdldEJvYXJkKClbMF0udGl0bGU7XG4gICAgY29uc29sZS5sb2coYWN0aXZlUHJvamVjdFRpdGxlKTtcbiAgICBcbiAgICBcbiAgICBjb25zdCBzd2l0Y2hQcm9qZWN0cyA9IChlKSA9PiB7XG4gICAgICAgIGFjdGl2ZVByb2plY3RUaXRsZSA9IGUudGFyZ2V0LmRhdGFzZXQudGl0bGU7XG5cbiAgICB9XG5cbiAgICBjb25zdCBhZGRUYXNrID0gKHRpdGxlLCBkZXNjcmlwdGlvbiwgZHVlRGF0ZSwgcHJpb3JpdHksIG5vdGVzKSA9PiB7XG4gICAgIFxuICAgICAgICBib2FyZC5hZGRUYXNrKGFjdGl2ZVByb2plY3RUaXRsZSwgdGl0bGUsIGRlc2NyaXB0aW9uLCBkdWVEYXRlLCBwcmlvcml0eSwgbm90ZXMpXG4gICAgICAgIFxuICAgIH07XG5cblxuICAgIHJldHVybiB7XG4gICAgICAgIGFkZFRhc2tcbiAgICB9XG4gICAgIFxufVxuXG5jb25zdCBidXR0ID0gVGFzaygnYScsICdiJywgJ2QnLCAxLCAnYXNkZicpXG5jb25zb2xlLmxvZyhidXR0KTtcblxuY29uc3QgYm9hcmQgPSBCb2FyZCgpO1xuY29uc29sZS5sb2coYm9hcmQuZ2V0Qm9hcmQoKSk7XG5cblxuZnVuY3Rpb24gc2NyZWVuQ29udHJvbGxlcigpIHtcblxufVxuXG5cbmNvbnNvbGUubG9nKCctLS0tLS0tLS0tLS0tLS0tLS0nKTtcbmNvbnN0IHRlc3RpbmcgPSBDb250cm9sbGVyKCk7XG5cbnRlc3RpbmcuYWRkVGFzaygnaW5ib3gnLCAxLDIsMyw0LDUpO1xuXG5cbi8qXG5cblxuZnVuY3Rpb24gQm9hcmQoKSB7XG4gICAgLy9zdGF0ZSBvZiB0b2RvbGlzdFxuXG4gICAgYm9hcmQgPSBbXVxuICAgIGJvYXJkLnB1c2gocHJvamVjdCgnaW5ib3gnKSk7ICAgIFxuXG4gICAgY29uc3QgZ2V0Qm9hcmQgPSAoKSA9PiBib2FyZDtcblxuICAgIFxuXG5cbn1cblxuXG5mdW5jdGlvbiBwcm9qZWN0KG5hbWUpIHtcblxuICAgIHByb2plY3QgPSBbXTtcblxuICAgIGNvbnN0IGFkZFRhc2sgPSBwcm9qZWN0LnB1c2godGFzaygpKTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IG5hbWU7XG4gICAgfVxuICAgIFxufVxuXG5cbmZ1bmN0aW9uIHRhc2soKSB7XG5cbiAgICBwcmlvcml0eSA9IFtcbiAgICAgICAgMSxcbiAgICAgICAgMixcbiAgICAgICAgM1xuICAgIF07XG5cbiAgICByZXR1cm4ge1xuICAgICAgICB0aXRsZTogdGl0bGUsXG4gICAgICAgIGRlc2NyaXB0aW9uOiBkZXNjcmlwdGlvbixcbiAgICAgICAgZHVlZGF0ZSxcbiAgICAgICAgcHJpb3JpdHksXG4gICAgICAgIG5vdGVzXG4gICAgICAgIGNoZWNrbGlzdFxuICAgIH1cblxufVxuXG5zY3JlZW5Db250cm9sbGVyKCkge1xuICAgIGNvbnN0IGNvbnRyb2xsZXIgPSBDb250cm9sbGVyKCk7XG5cbiAgICBjcmVhdGUgaHRtbCBlbGVtZW50c1xuICAgIFxuICAgIGNvbnN0IHVwZGF0ZVNjcmVlbiA9ICgpID0+IHtcblxuICAgIH1cblxuXG4gICAgZnVuY3Rpb24gY2xpY2tIYW5kbGVyQm9hcmQoZSkge1xuICAgICAgICAvL2FkZGluZyB0YXNrLi4uLiBcbiAgICAgICAgY29uc3QgdGl0bGVcbiAgICAgICAgY29uc3QgZGVzY3JpcHRpb25cbiAgICAgICAgY29uc3QgZHVlZGF0ZVxuICAgICAgICBjb25zdCBwcmlvcml0eVxuICAgICAgICBjb25zdCBub3Rlc1xuICAgICAgICBjb25zdCBjaGVja2xpc3RcblxuICAgICAgICBjb250cm9sbGVyLmFkZFRhc2soaW5wdXQpO1xuICAgICAgICB1cGRhdGVTY3JlZW4oKTtcblxuXG4gICAgfVxuXG4gICAgLy8vL2luaXRpYWwgcmVuZGVyXG4gICAgdXBkYXRlU2NyZWVuKCk7XG5cblxuXG4gICAgXG59XG5cbkFERElORyBUQVNLXG4xLiBzY3JlZW4gY29udHJvbGxlciBhc2sgdXNlciBmb3IgaW5mb1xuMi4gdXNlIGluZm8gdG8gY3JlYXRlVGFzaygpIGluIENvbnRyb2xsZXJcbiAgICAxKXRhc2soaW5wdXQgaW5mbyBoZXJlKVxuICAgIDIpcHVzaCB0YXNrIHRvIGFjdGl2ZSBwcm9qZWN0IFxuICAgIDMpaWYgcHJvamVjdCBhbHJlYWR5IGV4aXN0cyBpbiBib2FyZFxuICAgICAgICByZXBsYWNlIHByb2plY3QgaW4gYm9hcmQoKSB3aXRoIGNoYW5nZWQgcHJvamVjdFxuICAgICAgaWYgcHJvamVjdCBkb2VzIG5vdCBleGlzdCBpbiBib2FyZFxuICAgICAgICBwdXNoIHByb2plY3QgdG8gYm9hcmQgXG4gICAgICAgICAgICBnaXZlIGl0IGlkIG51bWJlci4uLiBcbiAgICBcbiAgICA0KSBcbjMuICBcbjMuIHB1c2ggdGFzayB0byBwcm9qZWN0IFxuNC4gcHVzaCBwcm9qZWN0IHRvIGJvYXJkXG41LiB1cGRhdGVTY3JlZW5cblxuVVBEQVRFU0NSRUVOXG4xLiBjbGVhciBib2FyZFxuMi4gZ2V0Qm9hcmRcbjMuIGNyZWF0ZSBlbGVtZW50cy4uIHNldCB1cCBkaXNwbGF5ICBcblxuXG5TV0lUQ0ggQkVUV0VFTiBQUk9KRUNUUy4uLiBcblxuXG5cbiovXG4iXSwibmFtZXMiOlsiQm9hcmQiLCJib2FyZCIsInB1c2giLCJQcm9qZWN0IiwiZ2V0Qm9hcmQiLCJhZGRQcm9qZWN0IiwidGl0bGUiLCJhZGRUYXNrIiwicHJvamVjdFRpdGxlIiwidGFza0lucHV0cyIsImkiLCJsZW5ndGgiLCJ0YXNrcyIsIlRhc2siLCJjb25zb2xlIiwibG9nIiwiZGVzY3JpcHRpb24iLCJkdWVEYXRlIiwicHJpb3JpdHkiLCJub3RlcyIsImJ1dHQiLCJ0ZXN0aW5nIiwiYWN0aXZlUHJvamVjdFRpdGxlIiwiQ29udHJvbGxlciJdLCJzb3VyY2VSb290IjoiIn0=