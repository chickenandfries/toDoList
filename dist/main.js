(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>i});var o=t(537),r=t.n(o),d=t(645),a=t.n(d)()(r());a.push([n.id,"body {\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 250px 1fr;\n    grid-template-rows: 120px 1fr 50px;\n    height: 100vh;\n    position:relative;\n\n}\n\nh2, h3 {\n    padding: 0;\n    margin: 0;\n}\n\nul {\n    list-style-type: none;\n    padding: 0;\n}\n\nli {\n    padding: 0;\n    margin: 0;\n}\n\nheader {\n    /* height: 120px; */\n    background-color: #323639;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    grid-column-start: 1;\n    grid-column-end: 3;\n  \n    \n}\n\n\nheader h1 {\n    margin-left: 3rem;\n    color: white;\n}\n\n\n.taskBar {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    background-color: #d1cfcf;\n    \n}\n\n\n.taskBarTop {\n    display: flex;\n    flex-direction: column;\n    border: 2px solid black;\n    \n}\n\n\n\n.taskBarContents {\n    display: flex;\n    border: 2px solid black;\n    padding: 0.3rem;\n    gap: 0.5rem;\n    margin: 0.5rem;\n   \n\n}\n\n.projects {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    border: 2px solid black;\n\n\n    \n}\n\n.projectsContent {\n    display: flex;\n    border: 2px solid black;\n    padding: 0.3rem;\n    gap: 0.5rem;\n    margin: 0.5rem;\n   \n\n}\n\n.projects h2 {\n    margin: 1rem;\n    border: 1px solid red;\n\n\n}\n\n.taskView {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    background-color: #f2f0f0;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    padding-top: 1rem;\n    padding-left: 2rem;\n}\n\n.tasks {\n    display: flex;\n    flex-direction: column;\n    border: 2px solid black;\n\n}\n\n.task {\n    display: grid;\n    grid-template-columns: 50px 3fr 1fr;\n    grid-template-rows: 50px 1fr;\n    border: solid red;\n}\n\n.checkMarkImgPNG {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 1;\n    grid-row-end: 2;\n}\n\n.taskTitle {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 1;\n    grid-row-end: 2;\n\n}\n\n.taskDueDate {\n    grid-column-start: 3;\n    grid-column-end: 4;\n    grid-row-start: 1;\n    grid-row-end: 2;\n\n}\n\n.taskDescription {\n    grid-column-start: 1;\n    grid-column-end: 4;\n    grid-row-start: 2;\n    grid-row-end: 3;\n}\n\n\n\n\n\n\n\n#addProjectForm {\n    display: none;\n    height:300px;\n    width:300px;\n    position:absolute;\n    top: 20%;\n    left: 50%;\n    margin-left: -150px;\n    background-color: #c9c8c7;\n\n}\n\n.addProjectFormUser {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addProjectFormUserHeading h2 {\n\n\n}\n\n\n.addProjectFormUserHeading {\n    background-color:#696868;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 3rem;\n    \n}\n\n.addProjectFormUserBody {\n    display: flex;\n    flex-direction: column;\n}\n\n.addProjectFormUserLiTitle {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addProjectFormUserButtons {\n    margin-top: 100px;\n    align-self: flex-end;\n}\n\n#addTaskForm {\n    display: none;\n    height:500px;\n    width:500px;\n    position:absolute;\n    top: 20%;\n    left: 50%;\n    margin-left: -250px;\n    background-color: #c9c8c7;\n\n}\n\n.addTaskFormUser {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addTaskFormUserHeading {\n    background-color:#696868;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 3rem;\n    \n}\n\n.addTaskFormUserBody {\n    display: flex;\n    flex-direction: column;\n}\n\n.addTaskFormUserLiTitle {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addTaskFormUserButtons {\n    margin-top: 100px;\n    align-self: flex-end;\n}\n\n/* .addProjectFormUserHeadingHTwo {\n    text-align: center;\n} */\n\nfooter {\n    background-color: red;\n    grid-row-start: 3;\n    grid-row-end: 4;\n    grid-column-start: 1;\n    grid-column-end: 3;\n}\n\n\n/*\nbackground-color: #ebe7e4;\n*/\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,aAAa;IACb,gCAAgC;IAChC,kCAAkC;IAClC,aAAa;IACb,iBAAiB;;AAErB;;AAEA;IACI,UAAU;IACV,SAAS;AACb;;AAEA;IACI,qBAAqB;IACrB,UAAU;AACd;;AAEA;IACI,UAAU;IACV,SAAS;AACb;;AAEA;IACI,mBAAmB;IACnB,yBAAyB;IACzB,WAAW;IACX,aAAa;IACb,mBAAmB;IACnB,oBAAoB;IACpB,kBAAkB;;;AAGtB;;;AAGA;IACI,iBAAiB;IACjB,YAAY;AAChB;;;AAGA;IACI,oBAAoB;IACpB,kBAAkB;IAClB,iBAAiB;IACjB,eAAe;IACf,yBAAyB;;AAE7B;;;AAGA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;;AAE3B;;;;AAIA;IACI,aAAa;IACb,uBAAuB;IACvB,eAAe;IACf,WAAW;IACX,cAAc;;;AAGlB;;AAEA;IACI,oBAAoB;IACpB,kBAAkB;IAClB,uBAAuB;;;;AAI3B;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,eAAe;IACf,WAAW;IACX,cAAc;;;AAGlB;;AAEA;IACI,YAAY;IACZ,qBAAqB;;;AAGzB;;AAEA;IACI,oBAAoB;IACpB,kBAAkB;IAClB,iBAAiB;IACjB,eAAe;IACf,yBAAyB;IACzB,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;;AAE3B;;AAEA;IACI,aAAa;IACb,mCAAmC;IACnC,4BAA4B;IAC5B,iBAAiB;AACrB;;AAEA;IACI,oBAAoB;IACpB,kBAAkB;IAClB,iBAAiB;IACjB,eAAe;AACnB;;AAEA;IACI,oBAAoB;IACpB,kBAAkB;IAClB,iBAAiB;IACjB,eAAe;;AAEnB;;AAEA;IACI,oBAAoB;IACpB,kBAAkB;IAClB,iBAAiB;IACjB,eAAe;;AAEnB;;AAEA;IACI,oBAAoB;IACpB,kBAAkB;IAClB,iBAAiB;IACjB,eAAe;AACnB;;;;;;;;AAQA;IACI,aAAa;IACb,YAAY;IACZ,WAAW;IACX,iBAAiB;IACjB,QAAQ;IACR,SAAS;IACT,mBAAmB;IACnB,yBAAyB;;AAE7B;;AAEA;IACI,aAAa;IACb,sBAAsB;;AAE1B;;AAEA;;;AAGA;;;AAGA;IACI,wBAAwB;IACxB,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,YAAY;;AAEhB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sBAAsB;;AAE1B;;AAEA;IACI,iBAAiB;IACjB,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,WAAW;IACX,iBAAiB;IACjB,QAAQ;IACR,SAAS;IACT,mBAAmB;IACnB,yBAAyB;;AAE7B;;AAEA;IACI,aAAa;IACb,sBAAsB;;AAE1B;;AAEA;IACI,wBAAwB;IACxB,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,YAAY;;AAEhB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sBAAsB;;AAE1B;;AAEA;IACI,iBAAiB;IACjB,oBAAoB;AACxB;;AAEA;;GAEG;;AAEH;IACI,qBAAqB;IACrB,iBAAiB;IACjB,eAAe;IACf,oBAAoB;IACpB,kBAAkB;AACtB;;;AAGA;;CAEC",sourcesContent:["body {\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 250px 1fr;\n    grid-template-rows: 120px 1fr 50px;\n    height: 100vh;\n    position:relative;\n\n}\n\nh2, h3 {\n    padding: 0;\n    margin: 0;\n}\n\nul {\n    list-style-type: none;\n    padding: 0;\n}\n\nli {\n    padding: 0;\n    margin: 0;\n}\n\nheader {\n    /* height: 120px; */\n    background-color: #323639;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    grid-column-start: 1;\n    grid-column-end: 3;\n  \n    \n}\n\n\nheader h1 {\n    margin-left: 3rem;\n    color: white;\n}\n\n\n.taskBar {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    background-color: #d1cfcf;\n    \n}\n\n\n.taskBarTop {\n    display: flex;\n    flex-direction: column;\n    border: 2px solid black;\n    \n}\n\n\n\n.taskBarContents {\n    display: flex;\n    border: 2px solid black;\n    padding: 0.3rem;\n    gap: 0.5rem;\n    margin: 0.5rem;\n   \n\n}\n\n.projects {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    border: 2px solid black;\n\n\n    \n}\n\n.projectsContent {\n    display: flex;\n    border: 2px solid black;\n    padding: 0.3rem;\n    gap: 0.5rem;\n    margin: 0.5rem;\n   \n\n}\n\n.projects h2 {\n    margin: 1rem;\n    border: 1px solid red;\n\n\n}\n\n.taskView {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    background-color: #f2f0f0;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    padding-top: 1rem;\n    padding-left: 2rem;\n}\n\n.tasks {\n    display: flex;\n    flex-direction: column;\n    border: 2px solid black;\n\n}\n\n.task {\n    display: grid;\n    grid-template-columns: 50px 3fr 1fr;\n    grid-template-rows: 50px 1fr;\n    border: solid red;\n}\n\n.checkMarkImgPNG {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 1;\n    grid-row-end: 2;\n}\n\n.taskTitle {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 1;\n    grid-row-end: 2;\n\n}\n\n.taskDueDate {\n    grid-column-start: 3;\n    grid-column-end: 4;\n    grid-row-start: 1;\n    grid-row-end: 2;\n\n}\n\n.taskDescription {\n    grid-column-start: 1;\n    grid-column-end: 4;\n    grid-row-start: 2;\n    grid-row-end: 3;\n}\n\n\n\n\n\n\n\n#addProjectForm {\n    display: none;\n    height:300px;\n    width:300px;\n    position:absolute;\n    top: 20%;\n    left: 50%;\n    margin-left: -150px;\n    background-color: #c9c8c7;\n\n}\n\n.addProjectFormUser {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addProjectFormUserHeading h2 {\n\n\n}\n\n\n.addProjectFormUserHeading {\n    background-color:#696868;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 3rem;\n    \n}\n\n.addProjectFormUserBody {\n    display: flex;\n    flex-direction: column;\n}\n\n.addProjectFormUserLiTitle {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addProjectFormUserButtons {\n    margin-top: 100px;\n    align-self: flex-end;\n}\n\n#addTaskForm {\n    display: none;\n    height:500px;\n    width:500px;\n    position:absolute;\n    top: 20%;\n    left: 50%;\n    margin-left: -250px;\n    background-color: #c9c8c7;\n\n}\n\n.addTaskFormUser {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addTaskFormUserHeading {\n    background-color:#696868;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 3rem;\n    \n}\n\n.addTaskFormUserBody {\n    display: flex;\n    flex-direction: column;\n}\n\n.addTaskFormUserLiTitle {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addTaskFormUserButtons {\n    margin-top: 100px;\n    align-self: flex-end;\n}\n\n/* .addProjectFormUserHeadingHTwo {\n    text-align: center;\n} */\n\nfooter {\n    background-color: red;\n    grid-row-start: 3;\n    grid-row-end: 4;\n    grid-column-start: 1;\n    grid-column-end: 3;\n}\n\n\n/*\nbackground-color: #ebe7e4;\n*/\n"],sourceRoot:""}]);const i=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,d){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(a[c]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);o&&a[l[0]]||(void 0!==d&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=d),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),d="/*# ".concat(r," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([d]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var d={},a=[],i=0;i<n.length;i++){var c=n[i],s=o.base?c[0]+o.base:c[0],l=d[s]||0,A="".concat(s," ").concat(l);d[s]=l+1;var p=t(A),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(m);else{var u=r(m,o);o.byIndex=i,e.splice(i,0,{identifier:A,updater:u,references:1})}a.push(A)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var d=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<d.length;a++){var i=t(d[a]);e[i].references--}for(var c=o(n,r),s=0;s<d.length;s++){var l=t(d[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}d=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var d=t.sourceMap;d&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(d))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var d=e[o]={id:o,exports:{}};return n[o](d,d.exports,t),d.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),d=t(569),a=t.n(d),i=t(565),c=t.n(i),s=t(216),l=t.n(s),A=t(589),p=t.n(A),m=t(426),u={};u.styleTagTransform=p(),u.setAttributes=c(),u.insert=a().bind(null,"head"),u.domAPI=r(),u.insertStyleElement=l(),e()(m.Z,u),m.Z&&m.Z.locals&&m.Z.locals;const g=t.p+"f8ac04aeb3ff24b48be9.png",C=t.p+"28d090802088aff05717.png",B=t.p+"c5874428bc8b8ddbf14a.png",f=t.p+"e9af1827778de11ad1d9.png",h=t.p+"fbfd272aede7d884df15.png";function I(n){return{title:n,tasks:[]}}function x(n,e,t,o){return{title:n,dueDate:e,priority:t,description:o}}console.log("------------------"),function(){const n=function(){let n=function(){let n=[];return n.push(I("inbox")),n.push(I("today")),n.push(I("upcoming")),{getBoard:()=>n,addProject:e=>{n.push(I(e))},addTask:(e,...t)=>{for(let o=0;o<n.length;o++)n[o].title===e&&n[o].tasks.push(x(...t));return n}}}(),e=n.getBoard()[0];console.log(e);const t=()=>e.title,o=()=>e.tasks;return console.log(o()),{addTask:(e,o,r,d)=>{n.addTask(t(),e,o,r,d)},getBoard:()=>n.getBoard(),getActiveProjectTitle:t,getActiveProjectTasks:o,switchProjects:t=>{const r=n.getBoard();for(let n=0;n<r.length;n++)r[n].title===t&&(e=r[n]);console.log(e),console.log(o())},addProject:e=>{n.addProject(e)}}}();n.addTask("asfed","06/05/25",3,"this is an example of task description"),n.addTask("a","b","c","d","e");const e=document.querySelector("body"),t=()=>{e.innerHTML="";const t=n.getBoard();console.log(t);let i=n.getActiveProjectTitle();console.log(`this is activeProjectTitle: ${i}`);const c=document.createElement("header");e.appendChild(c);const s=document.createElement("h1");s.textContent="ToDoList",c.appendChild(s);const l=document.createElement("div");l.classList.add("taskBar"),e.appendChild(l);const A=document.createElement("nav");A.classList.add("taskBarTop"),l.appendChild(A);const p=document.createElement("div");p.classList.add("taskBarContents"),p.dataset.projectTitle="inbox",A.appendChild(p);const m=new Image;m.src=g,m.dataset.projectTitle="inbox",p.appendChild(m);const u=document.createElement("h3");u.textContent="Inbox",u.dataset.projectTitle="inbox",p.appendChild(u);const I=document.createElement("div");I.classList.add("taskBarContents"),I.dataset.projectTitle="today",A.appendChild(I);const x=new Image;x.src=C,x.classList.add("todayImgPNG"),I.appendChild(x);const k=document.createElement("h3");k.textContent="Today",I.appendChild(k);const b=document.createElement("div");b.classList.add("taskBarContents"),b.dataset.projectTitle="upcoming",A.appendChild(b);const y=new Image;y.src=B,y.classList.add("upcomingImgPNG"),b.appendChild(y);const E=document.createElement("h3");E.textContent="Upcoming",b.appendChild(E);const v=document.createElement("div");v.classList.add("projects"),l.appendChild(v);const j=document.createElement("h2");j.textContent="Projects",v.appendChild(j);const T=document.createElement("nav");v.appendChild(T);for(let n=3;n<t.length;n++){console.log(t.length);const e=document.createElement("div");e.classList.add("taskBarContents"),e.dataset.projectTitle=`${t[n].title}`,T.appendChild(e);const o=document.createElement("h3");o.textContent=`${t[n].title}`,e.appendChild(o)}const w=document.createElement("div");w.classList.add("projectsContent"),T.appendChild(w);const P=new Image;P.src=f,w.appendChild(P);const U=document.createElement("h3");U.textContent="Add Project",w.appendChild(U),w.addEventListener("click",r);const F=document.createElement("div");F.classList.add("taskView"),e.appendChild(F);const L=document.createElement("h2");L.classList.add("activeProject"),console.log(`this is activeProjectTitle: ${i}`),L.textContent=i,F.appendChild(L);const S=document.createElement("nav");S.classList.add("tasks"),F.appendChild(S),console.log(n.getActiveProjectTitle()),n.getActiveProjectTasks().forEach((n=>{const e=document.createElement("div");e.classList.add("task"),S.appendChild(e);const t=new Image;t.src=h,t.classList.add("checkMarkImgPNG"),e.appendChild(t);const o=document.createElement("h3");o.classList.add("taskTitle"),o.textContent=n.title,e.appendChild(o);const r=document.createElement("div");r.classList.add("taskDueDate"),r.textContent=n.dueDate,e.appendChild(r),e.dataset.priority=n.priority;const d=document.createElement("p");d.classList.add("taskDescription"),d.textContent=n.description,e.appendChild(d)}));const G=document.createElement("div");G.classList.add("addTask"),G.textContent="+ Add Task",S.appendChild(G);const H=document.createElement("footer");e.appendChild(H);const q=document.createElement("h3");q.textContent="this is a footer",H.appendChild(q);const D=document.createElement("div");D.id="addProjectForm",e.appendChild(D);const M=document.createElement("form");M.classList.add("addProjectFormUser"),D.appendChild(M);const Y=document.createElement("div");Y.classList.add("addProjectFormUserHeading"),M.appendChild(Y);const N=document.createElement("h2");N.textContent="Add Project",Y.appendChild(N);const W=document.createElement("div");W.classList.add("addProjectFormUserBody"),M.appendChild(W);const R=document.createElement("ul");R.classList.add("addProjectFormUserUl"),W.appendChild(R);const Z=document.createElement("li");Z.classList.add("addProjectFormUserLiTitle"),R.appendChild(Z);const $=document.createElement("label");$.setAttribute("for","projectTitle"),$.textContent="Project Title ",Z.appendChild($);const V=document.createElement("input");V.classList.add("addProjectFormTitleInput"),V.setAttribute("type","text"),V.setAttribute("name","projectTitle"),Z.appendChild(V);const O=document.createElement("div");O.classList.add("addProjectFormUserButtons"),D.appendChild(O);const Q=document.createElement("button");Q.textContent="Cancel",O.appendChild(Q),Q.addEventListener("click",d);const X=document.createElement("button");X.textContent="Add",O.appendChild(X),X.addEventListener("click",a);const z=document.createElement("div");z.id="addTaskForm",e.appendChild(z);const J=document.createElement("form");J.classList.add("addTaskFormUser"),z.appendChild(J);const _=document.createElement("div");_.classList.add("addTaskFormUserHeading"),J.appendChild(_);const K=document.createElement("h2");K.textContent="Add Task",_.appendChild(K);const nn=document.createElement("div");nn.classList.add("addTaskFormUserBody"),J.appendChild(nn);const en=document.createElement("ul");en.classList.add("addTaskFormUserUl"),nn.appendChild(en);const tn=document.createElement("li");tn.classList.add("addTaskFormUserLiTitle"),en.appendChild(tn);const on=document.createElement("label");on.setAttribute("for","projectTitle"),on.textContent="Task Title ",tn.appendChild(on);const rn=document.createElement("input");rn.classList.add("addTaskFormTitleInput"),rn.setAttribute("type","text"),rn.setAttribute("name","projectTitle"),tn.appendChild(rn);const dn=document.createElement("div");dn.classList.add("addTaskFormUserButtons"),z.appendChild(dn);const an=document.createElement("button");an.textContent="Cancel",dn.appendChild(an);const cn=document.createElement("button");cn.textContent="Add",dn.appendChild(cn),document.querySelectorAll(".taskBarContents").forEach((n=>{n.addEventListener("click",o)})),console.log("switchProjectClick event has been added")};function o(e){console.log("running switchProjectClick");const o=e.target.dataset.projectTitle;console.log(`${o} has run`),console.log(typeof o),o&&(console.log("did not return "),n.switchProjects(o),t())}function r(){document.querySelector("#addProjectForm").style.display="block"}function d(){document.querySelector(".addProjectFormTitleInput").value="",document.querySelector("#addProjectForm").style.display="none"}function a(){const e=document.querySelector(".addProjectFormTitleInput").value;n.addProject(e),t()}t(),console.log("updateScreen has run")}(),console.log("checking")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,