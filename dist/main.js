(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),r=t.n(o),d=t(645),a=t.n(d)()(r());a.push([n.id,"body {\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 250px 1fr;\n    grid-template-rows: 120px 1fr 50px;\n    height: 100vh;\n    position:relative;\n\n}\n\nh2, h3 {\n    padding: 0;\n    margin: 0;\n}\n\nul {\n    list-style-type: none;\n    padding: 0;\n}\n\nli {\n    padding: 0;\n    margin: 0;\n}\n\nheader {\n    /* height: 120px; */\n    background-color: #323639;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    grid-column-start: 1;\n    grid-column-end: 3;\n  \n    \n}\n\n\nheader h1 {\n    margin-left: 3rem;\n    color: white;\n}\n\n\n.taskBar {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    background-color: #d1cfcf;\n    \n}\n\n\n.taskBarTop {\n    display: flex;\n    flex-direction: column;\n    border: 2px solid black;\n    \n}\n\n\n\n.taskBarContents {\n    display: flex;\n    /* border: 2px solid black; */\n    padding: 0.3rem;\n    gap: 0.5rem;\n    margin: 0.5rem;\n}\n\n.taskBarContents > * {\n    pointer-events: none;\n    \n}\n\n.taskBarContents:hover{\n    background-color: pink;\n}\n\n\n.activeProject {\n    background-color:pink;\n}\n\n\n\n.projects {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    border: 2px solid black;\n\n\n    \n}\n\n.projectsNavProject {\n    display: grid;\n    grid-template-columns: 215px 1fr;\n}\n\n.projectsNavProject:hover {\n    background-color: pink;\n}\n\n.projectsNavProjectContent {\n    grid-column-start: 1;\n    grid-column-end: 2;\n}\n\n.projectsNavProjectEdit {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    align-self: center;\n    border: 2px solid black;\n    position: relative;\n \n}\n\n/* .projectsNavProjectEdit > * {\n    pointer-events: none;\n} */\n\n\n.projectsNavProjectEdit:hover {\n    background-color: white;\n}\n\n.projectMenu {\n    position: absolute;\n    display: inline-block;\n    height: 100px;\n    width: 150px;\n    background-color: #c9c8c7;\n    border: 1px solid black;\n    top: 25px;\n    padding: 0px;\n}\n\n.projectMenuImg {\n    pointer-events: none;\n}\n\n.projectMenuChildren {\n    display: flex;\n    padding-left: 0.5rem;\n    padding-right: 0.5rem;\n    padding-top: 0px;\n    padding-bottom: 0px;\n\n\n    justify-content: space-between;\n  \n}\n\n.projectMenuChildren > * {\n    pointer-events: none;\n}\n\n.projectMenuChildren:hover {\n    background-color: white;\n}\n\n.projectMenuChildrenImg {\n    align-self: center;\n}\n\n\n\n.projectsContent {\n    display: flex;\n    border: 2px solid black;\n    padding: 0.3rem;\n    gap: 0.5rem;\n    margin: 0.5rem;   \n\n}\n.projectsContent > * {\n    pointer-events: none;\n}\n\n.projects h2 {\n    margin: 1rem;\n    /* border: 1px solid red; */\n\n\n}\n\n.taskView {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    background-color: #f2f0f0;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    padding-top: 1rem;\n    padding-left: 2rem;\n}\n\n.tasks {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n\n}\n\n.task {\n    display: grid;\n    grid-template-columns: 50px 1fr;\n    border: 2px solid black;\n}\n\n\n.taskComplete {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 1;\n    grid-row-end: 2;\n    background-color: yellow;\n    border: 2px solid red;\n}\n\n.taskContent {\n    grid-column-start: 2;\n    grid-column-end: 3;\n\n    display: grid;\n    grid-template-columns:  3fr 1fr;\n    grid-template-rows: 50px 1fr;\n    border-bottom: grey solid 1px;\n}\n\n\n\n.task:hover {\n    background-color: pink;\n\n}\n\n\n\n.taskTitle {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 1;\n    grid-row-end: 2;\n    pointer-events: none;\n\n}\n\n.taskDueDate {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 1;\n    grid-row-end: 2;\n    pointer-events: none;\n\n}\n\n.taskDescription {\n    grid-column-start: 1;\n    grid-column-end: 3;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    pointer-events: none;\n}\n\n\n.addTask {\n    height: 2rem;\n    display: flex;\n    align-items: center;\n\n}\n\n.addTask:hover {\n    background-color:#696868 ;\n\n}\n\n\n\n\n#addProjectForm {\n    display: none;\n    height:300px;\n    width:300px;\n    position:absolute;\n    top: 20%;\n    left: 50%;\n    margin-left: -150px;\n    background-color: #c9c8c7;\n\n}\n\n.addProjectFormUser {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addProjectFormUserHeading h2 {\n\n\n}\n\n\n.addProjectFormUserHeading {\n    background-color:#696868;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 3rem;\n    \n}\n\n.addProjectFormUserBody {\n    display: flex;\n    flex-direction: column;\n}\n\n.addProjectFormUserLiTitle {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addProjectFormUserButtons {\n    margin-top: 100px;\n    align-self: flex-end;\n}\n\n#addTaskForm {\n    display: none;\n    height:500px;\n    width:500px;\n    position:absolute;\n    top: 20%;\n    left: 50%;\n    margin-left: -250px;\n    background-color: #c9c8c7;\n\n}\n\n.addTaskFormUser {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addTaskFormUserHeading {\n    background-color:#696868;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 3rem;\n    \n}\n\n.addTaskFormUserBody {\n    display: flex;\n    flex-direction: column;\n}\n\n.addTaskFormUserLi {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addTaskFormUserUl input {\n    background-color: white;\n    border: none;\n    \n}\n\n.addTaskFormUserButtons {\n    \n\n}\n\n\n.flagImgPNG1 {\n    background-color: red;\n}\n.flagImgPNG2 {\n    background-color: orange;\n}\n\n.flagImgPNG3 {\n    background-color: skyblue;\n}\n\n.activePriority {\n    width: 2.5rem;\n    height: 2.5rem;\n\n}\n\n/* .addProjectFormUserHeadingHTwo {\n    text-align: center;\n} */\n\nfooter {\n    background-color: red;\n    grid-row-start: 3;\n    grid-row-end: 4;\n    grid-column-start: 1;\n    grid-column-end: 3;\n}\n\n\n/*\nbackground-color: #ebe7e4;\n*/\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["body {\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 250px 1fr;\n    grid-template-rows: 120px 1fr 50px;\n    height: 100vh;\n    position:relative;\n\n}\n\nh2, h3 {\n    padding: 0;\n    margin: 0;\n}\n\nul {\n    list-style-type: none;\n    padding: 0;\n}\n\nli {\n    padding: 0;\n    margin: 0;\n}\n\nheader {\n    /* height: 120px; */\n    background-color: #323639;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    grid-column-start: 1;\n    grid-column-end: 3;\n  \n    \n}\n\n\nheader h1 {\n    margin-left: 3rem;\n    color: white;\n}\n\n\n.taskBar {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    background-color: #d1cfcf;\n    \n}\n\n\n.taskBarTop {\n    display: flex;\n    flex-direction: column;\n    border: 2px solid black;\n    \n}\n\n\n\n.taskBarContents {\n    display: flex;\n    /* border: 2px solid black; */\n    padding: 0.3rem;\n    gap: 0.5rem;\n    margin: 0.5rem;\n}\n\n.taskBarContents > * {\n    pointer-events: none;\n    \n}\n\n.taskBarContents:hover{\n    background-color: pink;\n}\n\n\n.activeProject {\n    background-color:pink;\n}\n\n\n\n.projects {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    border: 2px solid black;\n\n\n    \n}\n\n.projectsNavProject {\n    display: grid;\n    grid-template-columns: 215px 1fr;\n}\n\n.projectsNavProject:hover {\n    background-color: pink;\n}\n\n.projectsNavProjectContent {\n    grid-column-start: 1;\n    grid-column-end: 2;\n}\n\n.projectsNavProjectEdit {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    align-self: center;\n    border: 2px solid black;\n    position: relative;\n \n}\n\n/* .projectsNavProjectEdit > * {\n    pointer-events: none;\n} */\n\n\n.projectsNavProjectEdit:hover {\n    background-color: white;\n}\n\n.projectMenu {\n    position: absolute;\n    display: inline-block;\n    height: 100px;\n    width: 150px;\n    background-color: #c9c8c7;\n    border: 1px solid black;\n    top: 25px;\n    padding: 0px;\n}\n\n.projectMenuImg {\n    pointer-events: none;\n}\n\n.projectMenuChildren {\n    display: flex;\n    padding-left: 0.5rem;\n    padding-right: 0.5rem;\n    padding-top: 0px;\n    padding-bottom: 0px;\n\n\n    justify-content: space-between;\n  \n}\n\n.projectMenuChildren > * {\n    pointer-events: none;\n}\n\n.projectMenuChildren:hover {\n    background-color: white;\n}\n\n.projectMenuChildrenImg {\n    align-self: center;\n}\n\n\n\n.projectsContent {\n    display: flex;\n    border: 2px solid black;\n    padding: 0.3rem;\n    gap: 0.5rem;\n    margin: 0.5rem;   \n\n}\n.projectsContent > * {\n    pointer-events: none;\n}\n\n.projects h2 {\n    margin: 1rem;\n    /* border: 1px solid red; */\n\n\n}\n\n.taskView {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    background-color: #f2f0f0;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    padding-top: 1rem;\n    padding-left: 2rem;\n}\n\n.tasks {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n\n}\n\n.task {\n    display: grid;\n    grid-template-columns: 50px 1fr;\n    border: 2px solid black;\n}\n\n\n.taskComplete {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 1;\n    grid-row-end: 2;\n    background-color: yellow;\n    border: 2px solid red;\n}\n\n.taskContent {\n    grid-column-start: 2;\n    grid-column-end: 3;\n\n    display: grid;\n    grid-template-columns:  3fr 1fr;\n    grid-template-rows: 50px 1fr;\n    border-bottom: grey solid 1px;\n}\n\n\n\n.task:hover {\n    background-color: pink;\n\n}\n\n\n\n.taskTitle {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 1;\n    grid-row-end: 2;\n    pointer-events: none;\n\n}\n\n.taskDueDate {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 1;\n    grid-row-end: 2;\n    pointer-events: none;\n\n}\n\n.taskDescription {\n    grid-column-start: 1;\n    grid-column-end: 3;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    pointer-events: none;\n}\n\n\n.addTask {\n    height: 2rem;\n    display: flex;\n    align-items: center;\n\n}\n\n.addTask:hover {\n    background-color:#696868 ;\n\n}\n\n\n\n\n#addProjectForm {\n    display: none;\n    height:300px;\n    width:300px;\n    position:absolute;\n    top: 20%;\n    left: 50%;\n    margin-left: -150px;\n    background-color: #c9c8c7;\n\n}\n\n.addProjectFormUser {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addProjectFormUserHeading h2 {\n\n\n}\n\n\n.addProjectFormUserHeading {\n    background-color:#696868;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 3rem;\n    \n}\n\n.addProjectFormUserBody {\n    display: flex;\n    flex-direction: column;\n}\n\n.addProjectFormUserLiTitle {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addProjectFormUserButtons {\n    margin-top: 100px;\n    align-self: flex-end;\n}\n\n#addTaskForm {\n    display: none;\n    height:500px;\n    width:500px;\n    position:absolute;\n    top: 20%;\n    left: 50%;\n    margin-left: -250px;\n    background-color: #c9c8c7;\n\n}\n\n.addTaskFormUser {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addTaskFormUserHeading {\n    background-color:#696868;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 3rem;\n    \n}\n\n.addTaskFormUserBody {\n    display: flex;\n    flex-direction: column;\n}\n\n.addTaskFormUserLi {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addTaskFormUserUl input {\n    background-color: white;\n    border: none;\n    \n}\n\n.addTaskFormUserButtons {\n    \n\n}\n\n\n.flagImgPNG1 {\n    background-color: red;\n}\n.flagImgPNG2 {\n    background-color: orange;\n}\n\n.flagImgPNG3 {\n    background-color: skyblue;\n}\n\n.activePriority {\n    width: 2.5rem;\n    height: 2.5rem;\n\n}\n\n/* .addProjectFormUserHeadingHTwo {\n    text-align: center;\n} */\n\nfooter {\n    background-color: red;\n    grid-row-start: 3;\n    grid-row-end: 4;\n    grid-column-start: 1;\n    grid-column-end: 3;\n}\n\n\n/*\nbackground-color: #ebe7e4;\n*/\n"],sourceRoot:""}]);const c=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,d){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var c=0;c<this.length;c++){var i=this[c][0];null!=i&&(a[i]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);o&&a[l[0]]||(void 0!==d&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=d),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),d="/*# ".concat(r," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([d]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var d={},a=[],c=0;c<n.length;c++){var i=n[c],s=o.base?i[0]+o.base:i[0],l=d[s]||0,A="".concat(s," ").concat(l);d[s]=l+1;var p=t(A),u={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=r(u,o);o.byIndex=c,e.splice(c,0,{identifier:A,updater:m,references:1})}a.push(A)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var d=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<d.length;a++){var c=t(d[a]);e[c].references--}for(var i=o(n,r),s=0;s<d.length;s++){var l=t(d[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}d=i}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var d=t.sourceMap;d&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(d))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var d=e[o]={id:o,exports:{}};return n[o](d,d.exports,t),d.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),d=t(569),a=t.n(d),c=t(565),i=t.n(c),s=t(216),l=t.n(s),A=t(589),p=t.n(A),u=t(426),m={};m.styleTagTransform=p(),m.setAttributes=i(),m.insert=a().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=l(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const g=t.p+"f8ac04aeb3ff24b48be9.png",C=t.p+"28d090802088aff05717.png",B=t.p+"c5874428bc8b8ddbf14a.png",I=t.p+"e9af1827778de11ad1d9.png",k=t.p+"fbfd272aede7d884df15.png",h=t.p+"2546d2ce9bf2dc800b40.png",f=t.p+"380c43f9d3647a3604cd.png",v=t.p+"fafba53f9f29e61319e4.png",x=t.p+"157b93f371f462c821d7.png";function b(n,e){return{title:n,projectIndex:e,tasks:[]}}function j(n,e,t,o,r){return{title:e,dueDate:t,description:r,priority:o,taskIndex:n,getPriority:()=>o}}!function(){const n=function(){let n=function(){let n=[];n.push(b("inbox",0)),n.push(b("today",1)),n.push(b("upcoming",2));let e=[];return{getBoard:()=>n,addProject:(e,t)=>{n.push(b(e,t)),console.log("Board - addProject run. below is new board"),console.log(n)},addTask:(e,t,...o)=>{for(let r=0;r<n.length;r++)n[r].projectIndex===e&&n[r].tasks.push(j(t,...o));return n},editTaskInputs:(e,t,...o)=>{for(let r=0;r<n.length;r++)if(n[r].projectIndex===e){console.log("found matching project");for(let e=0;e<n[r].tasks.length;e++)if(console.log(n[r].tasks[e]),console.log(n[r].tasks[e].taskIndex),n[r].tasks[e].taskIndex===t)return console.log("found matching task!!"),void n[r].tasks.splice(e,1,j(t,...o))}},deleteProject:t=>{console.log("board - deleteProject is running"),console.log(`this is projectIndex ${t}`),console.log("board before delete below"),console.log(n);for(let o=0;o<n.length;o++)n[o].projectIndex===t&&e.push(n.splice(o,1));for(let e=3;e<n.length;e++)n[e].projectIndex>t&&n.splice(e,1,b(n[e].title,e-1));console.log("board"),console.log(n),console.log("this is now projectTrash"),console.log(e)},editProjectInputs:(e,t)=>{for(let o=0;o<n.length;o++)if(n[o].projectIndex===e)return console.log("found matching project"),void n.splice(o,1,b(e,t))}}}(),e=n.getBoard(),t=n.getBoard()[0],o=3,r=2,d=()=>t.tasks,a=()=>t.projectIndex;n.addTask(a(),0,"asfed","06/05/25","p1","This is a task in your inbox. you can "),n.addTask(a(),1,"a","b","p4","e");let c="";const i=()=>c.taskIndex,s=()=>c="";return{addTask:(e,t,o,d)=>{n.addTask(a(),r,e,t,o,d),r++},getBoard:()=>e,getTaskIndex:()=>taskIndex,getActiveProject:()=>t,getActiveTask:()=>c,getActiveProjectTitle:()=>t.title,getActiveProjectTasks:d,getActiveProjectIndex:a,switchActiveProject:o=>{console.log("switchActiveProject is running");for(let r=0;r<e.length;r++)n.getBoard()[r].projectIndex===o&&(console.log("switchActiveProject function - found project"),t=e[r],console.log(t))},removeActiveTask:s,addProject:e=>{n.addProject(e,o),o++},switchActiveTask:n=>{for(let e=0;e<d().length;e++)d()[e].taskIndex===n&&(c=d()[e],console.log("this is now activeTask = "),console.log(c))},getActiveTaskTitle:()=>c.title,getActiveTaskPriority:()=>c.priority,getActiveTaskTaskIndex:i,editTaskInputs:(e,t,o,r)=>{console.log("editTaskInputs is now running"),n.editTaskInputs(a(),i(),e,t,o,r),console.log("this is active Task now"),console.log(c),s()},deleteProject:e=>{n.deleteProject(e),o-=1,console.log(`new global projectIndex in Controller = ${o}`)},editProjectInputs:e=>{console.log("editProjectInputs now running"),n.editProjectInputs(a(),e)}}}();let e;n.getActiveTask();const t=document.querySelector("body"),o=()=>{t.innerHTML="";const o=n.getBoard();let m=n.getActiveProjectTitle(),v=n.getActiveProjectIndex();const x=document.createElement("header");t.appendChild(x);const b=document.createElement("h1");b.textContent="ToDoList",x.appendChild(b);const j=document.createElement("div");j.classList.add("taskBar"),t.appendChild(j);const E=document.createElement("nav");E.classList.add("taskBarTop"),j.appendChild(E);const T=document.createElement("div");T.classList.add("taskBarContents"),T.dataset.projectTitle="inbox",T.dataset.projectIndex=0,E.appendChild(T);const P=new Image;P.src=g,P.dataset.projectTitle="inbox",T.appendChild(P);const w=document.createElement("h3");w.textContent="Inbox",w.dataset.projectTitle="inbox",T.appendChild(w);const L=document.createElement("div");L.classList.add("taskBarContents"),L.dataset.projectTitle="today",L.dataset.projectIndex=1,E.appendChild(L);const F=new Image;F.src=C,F.classList.add("todayImgPNG"),L.appendChild(F);const U=document.createElement("h3");U.textContent="Today",L.appendChild(U);const S=document.createElement("div");S.classList.add("taskBarContents"),S.dataset.projectTitle="upcoming",S.dataset.projectIndex=2,E.appendChild(S);const N=new Image;N.src=B,N.classList.add("upcomingImgPNG"),S.appendChild(N);const q=document.createElement("h3");q.textContent="Upcoming",S.appendChild(q);const D=document.createElement("div");D.classList.add("projects"),j.appendChild(D);const G=document.createElement("h2");G.textContent="Projects",D.appendChild(G);const M=document.createElement("nav");D.appendChild(M);for(let n=3;n<o.length;n++){const e=document.createElement("div");e.classList.add("projectsNavProject"),M.appendChild(e);const t=document.createElement("div");t.classList.add("taskBarContents"),t.dataset.projectTitle=`${o[n].title}`,t.dataset.projectIndex=n,t.addEventListener("click",u),e.appendChild(t);const r=document.createElement("h3");r.textContent=`${o[n].title}`,t.appendChild(r);const d=document.createElement("div");d.classList.add("projectsNavProjectEdit"),d.dataset.projectIndex=n,d.addEventListener("click",y),e.appendChild(d);const a=new Image;a.src=f,a.classList.add("projectMenuImg"),d.appendChild(a)}const Y=document.createElement("div");Y.classList.add("projectsContent"),M.appendChild(Y);const H=new Image;H.src=I,Y.appendChild(H);const $=document.createElement("h3");$.textContent="Add Project",Y.appendChild($),Y.addEventListener("click",d);const W=document.createElement("div");W.classList.add("taskView"),t.appendChild(W);const Z=document.createElement("h2");Z.classList.add("activeProjectHeading"),Z.textContent=m,W.appendChild(Z);const R=document.createElement("nav");R.classList.add("tasks"),W.appendChild(R),n.getActiveProjectTasks().forEach((n=>{const e=document.createElement("div");e.classList.add("task"),R.appendChild(e);const t=document.createElement("div");t.classList.add("taskComplete"),e.appendChild(t);const o=new Image;o.src=k,o.classList.add("checkMarkImgPNG"),t.appendChild(o);const r=document.createElement("div");r.classList.add("taskContent"),r.dataset.taskIndex=n.taskIndex,r.addEventListener("click",p),e.appendChild(r);const d=document.createElement("h3");d.classList.add("taskTitle"),d.textContent=n.title,"p1"===n.getPriority()?d.style.backgroundColor="red":"p2"===n.getPriority()?d.style.backgroundColor="orange":"p3"===n.getPriority()?d.style.backgroundColor="skyblue":"p4"===n.getPriority()&&(d.style.backgroundColor="white"),r.appendChild(d);const a=document.createElement("div");a.classList.add("taskDueDate"),a.textContent=n.dueDate,r.appendChild(a),r.dataset.priority=n.priority;const c=document.createElement("p");c.classList.add("taskDescription"),c.textContent=n.description,r.appendChild(c)}));const z=document.createElement("div");z.classList.add("addTask"),z.textContent="+ Add Task",R.appendChild(z),z.addEventListener("click",i);const V=document.createElement("footer");t.appendChild(V);const O=document.createElement("h3");O.textContent="this is a footer",V.appendChild(O);const X=document.createElement("div");X.id="addProjectForm",t.appendChild(X);const Q=document.createElement("form");Q.classList.add("addProjectFormUser"),X.appendChild(Q);const J=document.createElement("div");J.classList.add("addProjectFormUserHeading"),Q.appendChild(J);const _=document.createElement("h2");_.textContent="Add Project",J.appendChild(_);const K=document.createElement("div");K.classList.add("addProjectFormUserBody"),Q.appendChild(K);const nn=document.createElement("ul");nn.classList.add("addProjectFormUserUl"),K.appendChild(nn);const en=document.createElement("li");en.classList.add("addProjectFormUserLiTitle"),nn.appendChild(en);const tn=document.createElement("label");tn.setAttribute("for","projectTitle"),tn.textContent="Project Title ",en.appendChild(tn);const on=document.createElement("input");on.classList.add("addProjectFormTitleInput"),on.setAttribute("type","text"),on.setAttribute("id","projectTitle"),en.appendChild(on);const rn=document.createElement("div");rn.classList.add("addProjectFormUserButtons"),X.appendChild(rn);const dn=document.createElement("button");dn.textContent="Cancel",rn.appendChild(dn),dn.addEventListener("click",a);const an=document.createElement("button");an.textContent="Add",rn.appendChild(an),an.addEventListener("click",c);const cn=document.createElement("div");cn.id="addTaskForm",t.appendChild(cn);const sn=document.createElement("form");sn.classList.add("addTaskFormUser"),cn.appendChild(sn);const ln=document.createElement("div");ln.classList.add("addTaskFormUserHeading"),sn.appendChild(ln);const An=document.createElement("h2");An.textContent="Task Info",ln.appendChild(An);const pn=document.createElement("div");pn.classList.add("addTaskFormUserBody"),sn.appendChild(pn);const un=document.createElement("ul");un.classList.add("addTaskFormUserUl"),pn.appendChild(un);const mn=document.createElement("li");mn.classList.add("addTaskFormUserLi"),un.appendChild(mn);const gn=document.createElement("label");gn.setAttribute("for","taskTitle"),gn.textContent="Task Title ",mn.appendChild(gn);const Cn=document.createElement("input");Cn.classList.add("addTaskFormInput"),Cn.classList.add("addTaskFormTitleInput"),Cn.setAttribute("type","text"),Cn.setAttribute("id","taskTitle"),mn.appendChild(Cn);const Bn=document.createElement("li");Bn.classList.add("addTaskFormUserLi"),un.appendChild(Bn);const In=document.createElement("label");In.setAttribute("for","taskDescription"),In.textContent="Task Description ",Bn.appendChild(In);const kn=document.createElement("input");kn.classList.add("addTaskFormInput"),kn.classList.add("addTaskFormDescriptionInput"),kn.setAttribute("type","text"),kn.setAttribute("id","taskDescription"),Bn.appendChild(kn);const hn=document.createElement("li");hn.classList.add("addTaskFormUserLi"),un.appendChild(hn);const fn=document.createElement("label");fn.setAttribute("for","taskDueDate"),fn.textContent="Task DueDate ",hn.appendChild(fn);const vn=document.createElement("input");vn.classList.add("addTaskFormInput"),vn.classList.add("addTaskFormDueDateInput"),vn.setAttribute("type","text"),vn.setAttribute("id","taskDueDate"),"today"===m&&(vn.value=new Date),hn.appendChild(vn);const xn=document.createElement("div");xn.classList.add("addTaskFormUserButtons"),cn.appendChild(xn);const bn=document.createElement("div");bn.classList.add("addTaskFormUserPriority"),xn.appendChild(bn);const jn=document.createElement("div");bn.appendChild(jn);const yn=document.createElement("label");yn.textContent="Priority",jn.appendChild(yn);const En=document.createElement("div");bn.appendChild(En);for(let n=1;n<5;n++){const e=new Image;e.src=h,e.classList.add("flagImgPNG"),e.classList.add(`flagImgPNG${n}`),e.dataset.priority=`p${n}`,e.addEventListener("click",l),En.appendChild(e)}e="p4";const Tn=document.createElement("button");Tn.textContent="Cancel",xn.appendChild(Tn),Tn.addEventListener("click",s);const Pn=document.createElement("button");Pn.textContent="Submit",xn.appendChild(Pn),Pn.addEventListener("click",A);const wn=document.querySelectorAll(".taskBarContents");wn.forEach((n=>{n.addEventListener("click",r)})),wn.forEach((n=>{Number(n.dataset.projectIndex)===v&&n.classList.add("activeProject")}))};function r(e){console.log("below is switchActiveProject target"),console.log(e.target);const t=e.target.dataset.projectIndex;console.log(`this is selectedProjectIndex:${t} `),t&&(n.switchActiveProject(Number(t)),o())}const d=function(){document.querySelector("#addProjectForm").style.display="block"};function a(){document.querySelector(".addProjectFormTitleInput").value="",document.querySelector("#addProjectForm").style.display="none"}function c(){const e=document.querySelector("#projectTitle").value;n.addProject(e),o()}function i(){document.querySelector("#addTaskForm").style.display="block",console.log("active Task task index below"),console.log(n.getActiveTaskTaskIndex())}function s(){const e=document.querySelectorAll(".addTaskFormInput");for(let n of e)n.value="";document.querySelector("#addTaskForm").style.display="none",m(),n.removeActiveTask(),console.log("is there activeTask here?"),console.log(n.removeActiveTask())}function l(n){const t=n.target.dataset.priority;console.log("selectPriorityClick running"),t&&(e=t,m(),n.target.classList.add("activePriority"))}function A(){let t=document.querySelector(".addTaskFormTitleInput").value,r=document.querySelector(".addTaskFormDescriptionInput").value,d=document.querySelector(".addTaskFormDueDateInput").value;return n.getActiveTask()?n.getActiveTask()?(console.log("existing task has been clicked"),n.editTaskInputs(t,d,e,r),s(),void o()):void 0:(console.log("new Task being created! not existing task "),console.log(`this is priority: ${e}`),n.addTask(t,d,e,r),s(),void o())}function p(t){!function(e){const t=e.target.dataset.taskIndex;console.log(`clicked task with taskIndex of ${e.target.dataset.taskIndex}`),t&&n.switchActiveTask(Number(t))}(t),i(),document.querySelector("#taskTitle").value=n.getActiveTask().title,document.querySelector("#taskDescription").value=n.getActiveTask().description,document.querySelector("#taskDueDate").value=n.getActiveTask().dueDate,e=n.getActiveTaskPriority(),console.log("is there activeTask here?"),console.log(n.getActiveTask()),m(),document.querySelectorAll(".flagImgPNG").forEach((e=>{e.dataset.priority===n.getActiveTaskPriority()&&e.classList.add("activePriority")}))}function u(){d(),document.querySelector("#projectTitle").value=n.getActiveProjectTitle()}function m(){document.querySelectorAll(".flagImgPNG").forEach((n=>{n.classList.remove("activePriority")}))}const y=n=>{const e=n.target.dataset.projectIndex;console.log("this is projectIndex = "),console.log(e);const t=document.createElement("div");t.classList.add("projectMenu"),document.querySelector(".projectsNavProjectEdit").appendChild(t),t.addEventListener("click",(function(){console.log("projectMenu being clicked")}));const o=document.createElement("div");o.classList.add("projectMenuChildren"),o.dataset.projectIndex=e,t.appendChild(o),o.addEventListener("click",(function(){console.log("projectMenuEdit being clicked")}));const r=document.createElement("p");r.textContent="Edit Project",o.appendChild(r);const d=new Image;d.src=x,d.classList.add("projectMenuChildrenImg"),o.appendChild(d);const a=document.createElement("div");a.classList.add("projectMenuChildren"),a.dataset.projectIndex=e,t.appendChild(a),a.addEventListener("click",E);const c=document.createElement("p");c.textContent="Delete Project",a.appendChild(c);const i=new Image;i.src=v,i.classList.add("projectMenuChildrenImg"),a.appendChild(i)};function E(e){const t=Number(e.target.dataset.projectIndex);console.log(`this is projectIndex from deleteProjectClick = ${t}`),n.deleteProject(t),o()}o()}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,