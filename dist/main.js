(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),a=t.n(o),r=t(645),d=t.n(r)()(a());d.push([n.id,"body {\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 250px 1fr;\n    grid-template-rows: 120px 1fr 50px;\n    height: 100vh;\n    position:relative;\n\n}\n\nh2, h3 {\n    padding: 0;\n    margin: 0;\n}\n\nul {\n    list-style-type: none;\n    padding: 0;\n}\n\nli {\n    padding: 0;\n    margin: 0;\n}\n\nheader {\n    /* height: 120px; */\n    background-color: #323639;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    grid-column-start: 1;\n    grid-column-end: 3;\n  \n    \n}\n\n\nheader h1 {\n    margin-left: 3rem;\n    color: white;\n}\n\n\n.taskBar {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    background-color: #d1cfcf;\n    \n}\n\n\n.taskBarTop {\n    display: flex;\n    flex-direction: column;\n    border: 2px solid black;\n    \n}\n\n\n\n.taskBarContents {\n    display: flex;\n    border: 2px solid black;\n    padding: 0.3rem;\n    gap: 0.5rem;\n    margin: 0.5rem;\n   \n\n}\n\n.taskBarContents:hover{\n    background-color: pink;\n}\n\n\n.activeProject {\n    background-color:pink;\n}\n\n\n\n.projects {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    border: 2px solid black;\n\n\n    \n}\n\n.projectsContent {\n    display: flex;\n    border: 2px solid black;\n    padding: 0.3rem;\n    gap: 0.5rem;\n    margin: 0.5rem;\n   \n\n}\n\n.projects h2 {\n    margin: 1rem;\n    /* border: 1px solid red; */\n\n\n}\n\n.taskView {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    background-color: #f2f0f0;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    padding-top: 1rem;\n    padding-left: 2rem;\n}\n\n.tasks {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n\n}\n\n.task {\n    display: grid;\n    grid-template-columns: 50px 3fr 1fr;\n    grid-template-rows: 50px 1fr;\n    border-bottom: grey solid 1px;\n}\n\n.task:hover {\n    background-color: pink;\n\n}\n\n.checkMarkImgPNG {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 1;\n    grid-row-end: 2;\n}\n\n.taskTitle {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 1;\n    grid-row-end: 2;\n\n}\n\n.taskDueDate {\n    grid-column-start: 3;\n    grid-column-end: 4;\n    grid-row-start: 1;\n    grid-row-end: 2;\n\n}\n\n.taskDescription {\n    grid-column-start: 1;\n    grid-column-end: 4;\n    grid-row-start: 2;\n    grid-row-end: 3;\n}\n\n\n.addTask {\n    height: 2rem;\n    display: flex;\n    align-items: center;\n\n}\n\n.addTask:hover {\n    background-color:#696868 ;\n\n}\n\n\n\n\n#addProjectForm {\n    display: none;\n    height:300px;\n    width:300px;\n    position:absolute;\n    top: 20%;\n    left: 50%;\n    margin-left: -150px;\n    background-color: #c9c8c7;\n\n}\n\n.addProjectFormUser {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addProjectFormUserHeading h2 {\n\n\n}\n\n\n.addProjectFormUserHeading {\n    background-color:#696868;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 3rem;\n    \n}\n\n.addProjectFormUserBody {\n    display: flex;\n    flex-direction: column;\n}\n\n.addProjectFormUserLiTitle {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addProjectFormUserButtons {\n    margin-top: 100px;\n    align-self: flex-end;\n}\n\n#addTaskForm {\n    display: none;\n    height:500px;\n    width:500px;\n    position:absolute;\n    top: 20%;\n    left: 50%;\n    margin-left: -250px;\n    background-color: #c9c8c7;\n\n}\n\n.addTaskFormUser {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addTaskFormUserHeading {\n    background-color:#696868;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 3rem;\n    \n}\n\n.addTaskFormUserBody {\n    display: flex;\n    flex-direction: column;\n}\n\n.addTaskFormUserLi {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addTaskFormUserUl input {\n    background-color: white;\n    border: none;\n    \n}\n\n.addTaskFormUserButtons {\n    \n\n}\n\n\n.flagImgPNG1 {\n    background-color: red;\n}\n.flagImgPNG2 {\n    background-color: orange;\n}\n\n.flagImgPNG3 {\n    background-color: skyblue;\n}\n\n.activePriority {\n    width: 2.5rem;\n    height: 2.5rem;\n\n}\n\n/* .addProjectFormUserHeadingHTwo {\n    text-align: center;\n} */\n\nfooter {\n    background-color: red;\n    grid-row-start: 3;\n    grid-row-end: 4;\n    grid-column-start: 1;\n    grid-column-end: 3;\n}\n\n\n/*\nbackground-color: #ebe7e4;\n*/\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["body {\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 250px 1fr;\n    grid-template-rows: 120px 1fr 50px;\n    height: 100vh;\n    position:relative;\n\n}\n\nh2, h3 {\n    padding: 0;\n    margin: 0;\n}\n\nul {\n    list-style-type: none;\n    padding: 0;\n}\n\nli {\n    padding: 0;\n    margin: 0;\n}\n\nheader {\n    /* height: 120px; */\n    background-color: #323639;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    grid-column-start: 1;\n    grid-column-end: 3;\n  \n    \n}\n\n\nheader h1 {\n    margin-left: 3rem;\n    color: white;\n}\n\n\n.taskBar {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    background-color: #d1cfcf;\n    \n}\n\n\n.taskBarTop {\n    display: flex;\n    flex-direction: column;\n    border: 2px solid black;\n    \n}\n\n\n\n.taskBarContents {\n    display: flex;\n    border: 2px solid black;\n    padding: 0.3rem;\n    gap: 0.5rem;\n    margin: 0.5rem;\n   \n\n}\n\n.taskBarContents:hover{\n    background-color: pink;\n}\n\n\n.activeProject {\n    background-color:pink;\n}\n\n\n\n.projects {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    border: 2px solid black;\n\n\n    \n}\n\n.projectsContent {\n    display: flex;\n    border: 2px solid black;\n    padding: 0.3rem;\n    gap: 0.5rem;\n    margin: 0.5rem;\n   \n\n}\n\n.projects h2 {\n    margin: 1rem;\n    /* border: 1px solid red; */\n\n\n}\n\n.taskView {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    background-color: #f2f0f0;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    padding-top: 1rem;\n    padding-left: 2rem;\n}\n\n.tasks {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n\n}\n\n.task {\n    display: grid;\n    grid-template-columns: 50px 3fr 1fr;\n    grid-template-rows: 50px 1fr;\n    border-bottom: grey solid 1px;\n}\n\n.task:hover {\n    background-color: pink;\n\n}\n\n.checkMarkImgPNG {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 1;\n    grid-row-end: 2;\n}\n\n.taskTitle {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 1;\n    grid-row-end: 2;\n\n}\n\n.taskDueDate {\n    grid-column-start: 3;\n    grid-column-end: 4;\n    grid-row-start: 1;\n    grid-row-end: 2;\n\n}\n\n.taskDescription {\n    grid-column-start: 1;\n    grid-column-end: 4;\n    grid-row-start: 2;\n    grid-row-end: 3;\n}\n\n\n.addTask {\n    height: 2rem;\n    display: flex;\n    align-items: center;\n\n}\n\n.addTask:hover {\n    background-color:#696868 ;\n\n}\n\n\n\n\n#addProjectForm {\n    display: none;\n    height:300px;\n    width:300px;\n    position:absolute;\n    top: 20%;\n    left: 50%;\n    margin-left: -150px;\n    background-color: #c9c8c7;\n\n}\n\n.addProjectFormUser {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addProjectFormUserHeading h2 {\n\n\n}\n\n\n.addProjectFormUserHeading {\n    background-color:#696868;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 3rem;\n    \n}\n\n.addProjectFormUserBody {\n    display: flex;\n    flex-direction: column;\n}\n\n.addProjectFormUserLiTitle {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addProjectFormUserButtons {\n    margin-top: 100px;\n    align-self: flex-end;\n}\n\n#addTaskForm {\n    display: none;\n    height:500px;\n    width:500px;\n    position:absolute;\n    top: 20%;\n    left: 50%;\n    margin-left: -250px;\n    background-color: #c9c8c7;\n\n}\n\n.addTaskFormUser {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addTaskFormUserHeading {\n    background-color:#696868;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 3rem;\n    \n}\n\n.addTaskFormUserBody {\n    display: flex;\n    flex-direction: column;\n}\n\n.addTaskFormUserLi {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addTaskFormUserUl input {\n    background-color: white;\n    border: none;\n    \n}\n\n.addTaskFormUserButtons {\n    \n\n}\n\n\n.flagImgPNG1 {\n    background-color: red;\n}\n.flagImgPNG2 {\n    background-color: orange;\n}\n\n.flagImgPNG3 {\n    background-color: skyblue;\n}\n\n.activePriority {\n    width: 2.5rem;\n    height: 2.5rem;\n\n}\n\n/* .addProjectFormUserHeadingHTwo {\n    text-align: center;\n} */\n\nfooter {\n    background-color: red;\n    grid-row-start: 3;\n    grid-row-end: 4;\n    grid-column-start: 1;\n    grid-column-end: 3;\n}\n\n\n/*\nbackground-color: #ebe7e4;\n*/\n"],sourceRoot:""}]);const c=d},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,r){"string"==typeof n&&(n=[[null,n,void 0]]);var d={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(d[s]=!0)}for(var i=0;i<n.length;i++){var l=[].concat(n[i]);o&&d[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(a," */"),d=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(d).concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var r={},d=[],c=0;c<n.length;c++){var s=n[c],i=o.base?s[0]+o.base:s[0],l=r[i]||0,A="".concat(i," ").concat(l);r[i]=l+1;var p=t(A),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=a(u,o);o.byIndex=c,e.splice(c,0,{identifier:A,updater:m,references:1})}d.push(A)}return d}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var r=o(n=n||[],a=a||{});return function(n){n=n||[];for(var d=0;d<r.length;d++){var c=t(r[d]);e[c].references--}for(var s=o(n,a),i=0;i<r.length;i++){var l=t(r[i]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}r=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var r=e[o]={id:o,exports:{}};return n[o](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),a=t.n(o),r=t(569),d=t.n(r),c=t(565),s=t.n(c),i=t(216),l=t.n(i),A=t(589),p=t.n(A),u=t(426),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=d().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=l(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const g=t.p+"f8ac04aeb3ff24b48be9.png",C=t.p+"28d090802088aff05717.png",B=t.p+"c5874428bc8b8ddbf14a.png",k=t.p+"e9af1827778de11ad1d9.png",I=t.p+"fbfd272aede7d884df15.png",h=t.p+"2546d2ce9bf2dc800b40.png";function f(n,e){return{title:n,projectIndex:e,tasks:[]}}function b(n,e,t,o,a){return{title:e,dueDate:t,description:a,priority:o,taskIndex:n,getPriority:()=>o}}console.log("------------------"),function(){const n=function(){let n=function(){let n=[];return n.push(f("inbox",0)),n.push(f("today",1)),n.push(f("upcoming",2)),{getBoard:()=>n,addProject:(e,t)=>{n.push(f(e,t))},addTask:(e,t,...o)=>{console.log("taskInputs below"),console.log(...o);for(let a=0;a<n.length;a++)n[a].projectIndex===e&&n[a].tasks.push(b(t,...o));return n},editTaskInputs:(e,t,...o)=>{for(let a=0;a<n.length;a++)if(n[a].projectIndex===e){console.log("found matching project");for(let e=0;e<n[a].tasks.length;e++)if(console.log(n[a].tasks[e]),console.log(n[a].tasks[e].taskIndex),n[a].tasks[e].taskIndex===t)return console.log("found matching task!! line 79"),void n[a].tasks.splice(e,1,b(t,...o))}}}}(),e=n.getBoard(),t=n.getBoard()[0];console.log("boardBoard below"),console.log(e);let o=3,a=2,r=()=>t.tasks,d=()=>t.projectIndex;console.log(d()),n.addTask(d(),0,"asfed","06/05/25","p1","This is a task in your inbox. you can "),n.addTask(d(),1,"a","b","p4","e");let c="";console.log("activeTask below "),console.log(c);const s=()=>c.taskIndex;return{addTask:(e,t,o,r)=>{n.addTask(d(),a,e,t,o,r),a++},getBoard:()=>e,getTaskIndex:()=>a,getActiveProject:()=>t,getActiveTask:()=>c,getActiveProjectTitle:()=>t.title,getActiveProjectTasks:r,switchActiveProject:n=>{console.log("switchActiveProject is running");for(let o=0;o<e.length;o++)e[o].projectIndex===n&&(console.log("found project"),t=e[o],console.log(t))},addProject:e=>{n.addProject(e,o),o++},switchActiveTask:n=>{for(let e=0;e<r().length;e++)r()[e].taskIndex===n&&(c=r()[e],console.log("this is now activeTask = "),console.log(c))},getActiveTaskTitle:()=>c.title,getActiveTaskPriority:()=>c.priority,getActiveTaskTaskIndex:s,editTaskInputs:(e,t,o,a)=>{console.log("editTaskInputsis now running"),n.editTaskInputs(d(),s(),e,t,o,a),console.log("thisis active Task now"),console.log(c),c=""}}}();let e,t=n.getActiveTask();const o=document.querySelector("body"),a=()=>{o.innerHTML="";const t=n.getBoard();let a=n.getActiveProjectTitle();console.log(`this is activeProjectTitle: ${a}`);const m=document.createElement("header");o.appendChild(m);const f=document.createElement("h1");f.textContent="ToDoList",m.appendChild(f);const b=document.createElement("div");b.classList.add("taskBar"),o.appendChild(b);const y=document.createElement("nav");y.classList.add("taskBarTop"),b.appendChild(y);const x=document.createElement("div");x.classList.add("taskBarContents"),x.dataset.projectTitle="inbox",x.dataset.projectIndex=0,y.appendChild(x);const v=new Image;v.src=g,v.dataset.projectTitle="inbox",x.appendChild(v);const T=document.createElement("h3");T.textContent="Inbox",T.dataset.projectTitle="inbox",x.appendChild(T);const E=document.createElement("div");E.classList.add("taskBarContents"),E.dataset.projectTitle="today",E.dataset.projectIndex=1,y.appendChild(E);const j=new Image;j.src=C,j.classList.add("todayImgPNG"),E.appendChild(j);const w=document.createElement("h3");w.textContent="Today",E.appendChild(w);const P=document.createElement("div");P.classList.add("taskBarContents"),P.dataset.projectTitle="upcoming",P.dataset.projectIndex=2,y.appendChild(P);const L=new Image;L.src=B,L.classList.add("upcomingImgPNG"),P.appendChild(L);const F=document.createElement("h3");F.textContent="Upcoming",P.appendChild(F);const U=document.createElement("div");U.classList.add("projects"),b.appendChild(U);const S=document.createElement("h2");S.textContent="Projects",U.appendChild(S);const D=document.createElement("nav");U.appendChild(D);for(let n=3;n<t.length;n++){const e=document.createElement("div");e.classList.add("taskBarContents"),e.dataset.projectTitle=`${t[n].title}`,e.dataset.projectIndex=n,D.appendChild(e);const o=document.createElement("h3");o.textContent=`${t[n].title}`,e.appendChild(o)}const G=document.createElement("div");G.classList.add("projectsContent"),D.appendChild(G);const q=new Image;q.src=k,G.appendChild(q);const N=document.createElement("h3");N.textContent="Add Project",G.appendChild(N),G.addEventListener("click",d);const H=document.createElement("div");H.classList.add("taskView"),o.appendChild(H);const Y=document.createElement("h2");Y.classList.add("activeProjectHeading"),console.log(`this is activeProjectTitle: ${a}`),Y.textContent=a,H.appendChild(Y);const M=document.createElement("nav");M.classList.add("tasks"),H.appendChild(M),n.getActiveProjectTasks().forEach((n=>{const e=document.createElement("div");e.classList.add("task"),e.dataset.taskIndex=n.taskIndex,e.addEventListener("click",u),M.appendChild(e);const t=new Image;t.src=I,t.classList.add("checkMarkImgPNG"),e.appendChild(t);const o=document.createElement("h3");o.classList.add("taskTitle"),o.textContent=n.title,"p1"===n.getPriority()?o.style.backgroundColor="red":"p2"===n.getPriority()?o.style.backgroundColor="orange":"p3"===n.getPriority()?o.style.backgroundColor="skyblue":"p4"===n.getPriority()&&(o.style.backgroundColor="white"),e.appendChild(o);const a=document.createElement("div");a.classList.add("taskDueDate"),a.textContent=n.dueDate,e.appendChild(a),e.dataset.priority=n.priority;const r=document.createElement("p");r.classList.add("taskDescription"),r.textContent=n.description,e.appendChild(r)}));const $=document.createElement("div");$.classList.add("addTask"),$.textContent="+ Add Task",M.appendChild($),$.addEventListener("click",i);const W=document.createElement("footer");o.appendChild(W);const R=document.createElement("h3");R.textContent="this is a footer",W.appendChild(R);const Z=document.createElement("div");Z.id="addProjectForm",o.appendChild(Z);const V=document.createElement("form");V.classList.add("addProjectFormUser"),Z.appendChild(V);const O=document.createElement("div");O.classList.add("addProjectFormUserHeading"),V.appendChild(O);const X=document.createElement("h2");X.textContent="Add Project",O.appendChild(X);const z=document.createElement("div");z.classList.add("addProjectFormUserBody"),V.appendChild(z);const Q=document.createElement("ul");Q.classList.add("addProjectFormUserUl"),z.appendChild(Q);const J=document.createElement("li");J.classList.add("addProjectFormUserLiTitle"),Q.appendChild(J);const _=document.createElement("label");_.setAttribute("for","projectTitle"),_.textContent="Project Title ",J.appendChild(_);const K=document.createElement("input");K.classList.add("addProjectFormTitleInput"),K.setAttribute("type","text"),K.setAttribute("name","projectTitle"),J.appendChild(K);const nn=document.createElement("div");nn.classList.add("addProjectFormUserButtons"),Z.appendChild(nn);const en=document.createElement("button");en.textContent="Cancel",nn.appendChild(en),en.addEventListener("click",c);const tn=document.createElement("button");tn.textContent="Add",nn.appendChild(tn),tn.addEventListener("click",s);const on=document.createElement("div");on.id="addTaskForm",o.appendChild(on);const an=document.createElement("form");an.classList.add("addTaskFormUser"),on.appendChild(an);const rn=document.createElement("div");rn.classList.add("addTaskFormUserHeading"),an.appendChild(rn);const dn=document.createElement("h2");dn.textContent="Task Info",rn.appendChild(dn);const cn=document.createElement("div");cn.classList.add("addTaskFormUserBody"),an.appendChild(cn);const sn=document.createElement("ul");sn.classList.add("addTaskFormUserUl"),cn.appendChild(sn);const ln=document.createElement("li");ln.classList.add("addTaskFormUserLi"),sn.appendChild(ln);const An=document.createElement("label");An.setAttribute("for","taskTitle"),An.textContent="Task Title ",ln.appendChild(An);const pn=document.createElement("input");pn.classList.add("addTaskFormInput"),pn.classList.add("addTaskFormTitleInput"),pn.setAttribute("type","text"),pn.setAttribute("id","taskTitle"),ln.appendChild(pn);const un=document.createElement("li");un.classList.add("addTaskFormUserLi"),sn.appendChild(un);const mn=document.createElement("label");mn.setAttribute("for","taskDescription"),mn.textContent="Task Description ",un.appendChild(mn);const gn=document.createElement("input");gn.classList.add("addTaskFormInput"),gn.classList.add("addTaskFormDescriptionInput"),gn.setAttribute("type","text"),gn.setAttribute("id","taskDescription"),un.appendChild(gn);const Cn=document.createElement("li");Cn.classList.add("addTaskFormUserLi"),sn.appendChild(Cn);const Bn=document.createElement("label");Bn.setAttribute("for","taskDueDate"),Bn.textContent="Task DueDate ",Cn.appendChild(Bn);const kn=document.createElement("input");kn.classList.add("addTaskFormInput"),kn.classList.add("addTaskFormDueDateInput"),kn.setAttribute("type","text"),kn.setAttribute("id","taskDueDate"),"today"===a&&(kn.value=new Date),Cn.appendChild(kn);const In=document.createElement("div");In.classList.add("addTaskFormUserButtons"),on.appendChild(In);const hn=document.createElement("div");hn.classList.add("addTaskFormUserPriority"),In.appendChild(hn);const fn=document.createElement("div");hn.appendChild(fn);const bn=document.createElement("label");bn.textContent="Priority",fn.appendChild(bn);const yn=document.createElement("div");hn.appendChild(yn);for(let n=1;n<5;n++){const e=new Image;e.src=h,e.classList.add("flagImgPNG"),e.classList.add(`flagImgPNG${n}`),e.dataset.priority=`p${n}`,e.addEventListener("click",A),yn.appendChild(e)}e="p4";const xn=document.createElement("button");xn.textContent="Cancel",In.appendChild(xn),xn.addEventListener("click",l);const vn=document.createElement("button");vn.textContent="Submit",In.appendChild(vn),vn.addEventListener("click",p);const Tn=document.querySelectorAll(".taskBarContents");Tn.forEach((n=>{n.addEventListener("click",r)})),console.log("switchActiveProjectClick event has been added"),Tn.forEach((n=>{n.dataset.projectTitle===a&&n.classList.add("activeProject")}))};function r(e){console.log("below is switchActiveProject target"),console.log(e.target);const t=e.target.dataset.projectIndex;console.log(`this is selectedProjectIndex:${t} `),t&&(n.switchActiveProject(Number(t)),a())}const d=function(){document.querySelector("#addProjectForm").style.display="block"};function c(){document.querySelector(".addProjectFormTitleInput").value="",document.querySelector("#addProjectForm").style.display="none"}function s(){const e=document.querySelector(".addProjectFormTitleInput").value;n.addProject(e),a()}function i(){document.querySelector("#addTaskForm").style.display="block",console.log("active Task task index below"),console.log(n.getActiveTaskTaskIndex()),console.log(!n.getActiveTask())}function l(){const n=document.querySelectorAll(".addTaskFormInput");for(let e of n)e.value="";document.querySelector("#addTaskForm").style.display="none",m(),t=""}function A(n){const t=n.target.dataset.priority;console.log("selectPriorityClick running"),t&&(e=t,m(),n.target.classList.add("activePriority"))}function p(){let t=document.querySelector(".addTaskFormTitleInput").value,o=document.querySelector(".addTaskFormDescriptionInput").value,r=document.querySelector(".addTaskFormDueDateInput").value;return n.getActiveTask()?n.getActiveTask()?(console.log("existing task has been clicked"),n.editTaskInputs(t,r,e,o),l(),void a()):void 0:(console.log("new Task being created! not existing task "),console.log(`this is priority: ${e}`),n.addTask(t,r,e,o),l(),void a())}function u(e){!function(e){console.log("switchActiveTaskClick has run");const t=e.target.dataset.taskIndex;console.log(`clicked ${e.target.dataset.taskIndex}`),t&&(n.switchActiveTask(Number(t)),console.log("this is now activeTask"),console.log(n.getActiveTask()))}(e),i(),document.querySelector("#taskTitle").value=n.getActiveTask().title,document.querySelector("#taskDescription").value=n.getActiveTask().description,document.querySelector("#taskDueDate").value=n.getActiveTask().dueDate,console.log("is there activeTask here?"),console.log(t),m(),document.querySelectorAll(".flagImgPNG").forEach((e=>{e.dataset.priority===n.getActiveTaskPriority()&&e.classList.add("activePriority")}))}function m(){document.querySelectorAll(".flagImgPNG").forEach((n=>{n.classList.remove("activePriority")}))}a()}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUVqQ3pCLFFBQVFDLElBQUksMEJBQ1pELFFBQVFDLElBQUlDLEVBQVNpQixpQkFLekIsQ0FoQ0lLLENBQWlCekYsR0FtRGpCeUksSUFJQS9JLFNBQVNDLGNBQWMsY0FBYzhLLE1BQVF0RyxFQUFTaUIsZ0JBQWdCNUIsTUFDdEU5RCxTQUFTQyxjQUFjLG9CQUFvQjhLLE1BQVF0RyxFQUFTaUIsZ0JBQWdCckIsWUFDNUVyRSxTQUFTQyxjQUFjLGdCQUFnQjhLLE1BQVF0RyxFQUFTaUIsZ0JBQWdCdkIsUUFFeEVJLFFBQVFDLElBQUksNkJBQ1pELFFBQVFDLElBQUljLEdBY1o4RyxJQWtCb0JwTSxTQUFTNkwsaUJBQWlCLGVBRWxDcEQsU0FBUzZDLElBQ2JBLEVBQVdsRSxRQUFRaEQsV0FBYUssRUFBU3lCLHlCQUd6Q29GLEVBQVd0RSxVQUFVQyxJQUFJLGlCQUM3QixHQWpHUixDQStFQSxTQUFTbUYsSUFFZXBNLFNBQVM2TCxpQkFBaUIsZUFFbENwRCxTQUFTNkMsSUFDakJBLEVBQVd0RSxVQUFVNUgsT0FBTyxpQkFBZ0IsR0FHcEQsQ0E4Q0FxSCxHQVFKLENBTUE2RixFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9zcmMvc3R5bGUuY3NzIiwid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3Qvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdG9kb2xpc3Qvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vdG9kb2xpc3Qvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3RvZG9saXN0L3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vdG9kb2xpc3Qvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly90b2RvbGlzdC93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly90b2RvbGlzdC93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9zcmMvc3R5bGUuY3NzPzcxNjMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJib2R5IHtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDI1MHB4IDFmcjtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxMjBweCAxZnIgNTBweDtcXG4gICAgaGVpZ2h0OiAxMDB2aDtcXG4gICAgcG9zaXRpb246cmVsYXRpdmU7XFxuXFxufVxcblxcbmgyLCBoMyB7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIG1hcmdpbjogMDtcXG59XFxuXFxudWwge1xcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XFxuICAgIHBhZGRpbmc6IDA7XFxufVxcblxcbmxpIHtcXG4gICAgcGFkZGluZzogMDtcXG4gICAgbWFyZ2luOiAwO1xcbn1cXG5cXG5oZWFkZXIge1xcbiAgICAvKiBoZWlnaHQ6IDEyMHB4OyAqL1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzIzNjM5O1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDE7XFxuICAgIGdyaWQtY29sdW1uLWVuZDogMztcXG4gIFxcbiAgICBcXG59XFxuXFxuXFxuaGVhZGVyIGgxIHtcXG4gICAgbWFyZ2luLWxlZnQ6IDNyZW07XFxuICAgIGNvbG9yOiB3aGl0ZTtcXG59XFxuXFxuXFxuLnRhc2tCYXIge1xcbiAgICBncmlkLWNvbHVtbi1zdGFydDogMTtcXG4gICAgZ3JpZC1jb2x1bW4tZW5kOiAyO1xcbiAgICBncmlkLXJvdy1zdGFydDogMjtcXG4gICAgZ3JpZC1yb3ctZW5kOiAzO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDFjZmNmO1xcbiAgICBcXG59XFxuXFxuXFxuLnRhc2tCYXJUb3Age1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcXG4gICAgXFxufVxcblxcblxcblxcbi50YXNrQmFyQ29udGVudHMge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcXG4gICAgcGFkZGluZzogMC4zcmVtO1xcbiAgICBnYXA6IDAuNXJlbTtcXG4gICAgbWFyZ2luOiAwLjVyZW07XFxuICAgXFxuXFxufVxcblxcbi50YXNrQmFyQ29udGVudHM6aG92ZXJ7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHBpbms7XFxufVxcblxcblxcbi5hY3RpdmVQcm9qZWN0IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjpwaW5rO1xcbn1cXG5cXG5cXG5cXG4ucHJvamVjdHMge1xcbiAgICBncmlkLWNvbHVtbi1zdGFydDogMTtcXG4gICAgZ3JpZC1jb2x1bW4tZW5kOiAyO1xcbiAgICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcXG5cXG5cXG4gICAgXFxufVxcblxcbi5wcm9qZWN0c0NvbnRlbnQge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcXG4gICAgcGFkZGluZzogMC4zcmVtO1xcbiAgICBnYXA6IDAuNXJlbTtcXG4gICAgbWFyZ2luOiAwLjVyZW07XFxuICAgXFxuXFxufVxcblxcbi5wcm9qZWN0cyBoMiB7XFxuICAgIG1hcmdpbjogMXJlbTtcXG4gICAgLyogYm9yZGVyOiAxcHggc29saWQgcmVkOyAqL1xcblxcblxcbn1cXG5cXG4udGFza1ZpZXcge1xcbiAgICBncmlkLWNvbHVtbi1zdGFydDogMjtcXG4gICAgZ3JpZC1jb2x1bW4tZW5kOiAzO1xcbiAgICBncmlkLXJvdy1zdGFydDogMjtcXG4gICAgZ3JpZC1yb3ctZW5kOiAzO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMGYwO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBnYXA6IDJyZW07XFxuICAgIHBhZGRpbmctdG9wOiAxcmVtO1xcbiAgICBwYWRkaW5nLWxlZnQ6IDJyZW07XFxufVxcblxcbi50YXNrcyB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGdhcDogMXJlbTtcXG5cXG59XFxuXFxuLnRhc2sge1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDUwcHggM2ZyIDFmcjtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiA1MHB4IDFmcjtcXG4gICAgYm9yZGVyLWJvdHRvbTogZ3JleSBzb2xpZCAxcHg7XFxufVxcblxcbi50YXNrOmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcGluaztcXG5cXG59XFxuXFxuLmNoZWNrTWFya0ltZ1BORyB7XFxuICAgIGdyaWQtY29sdW1uLXN0YXJ0OiAxO1xcbiAgICBncmlkLWNvbHVtbi1lbmQ6IDI7XFxuICAgIGdyaWQtcm93LXN0YXJ0OiAxO1xcbiAgICBncmlkLXJvdy1lbmQ6IDI7XFxufVxcblxcbi50YXNrVGl0bGUge1xcbiAgICBncmlkLWNvbHVtbi1zdGFydDogMjtcXG4gICAgZ3JpZC1jb2x1bW4tZW5kOiAzO1xcbiAgICBncmlkLXJvdy1zdGFydDogMTtcXG4gICAgZ3JpZC1yb3ctZW5kOiAyO1xcblxcbn1cXG5cXG4udGFza0R1ZURhdGUge1xcbiAgICBncmlkLWNvbHVtbi1zdGFydDogMztcXG4gICAgZ3JpZC1jb2x1bW4tZW5kOiA0O1xcbiAgICBncmlkLXJvdy1zdGFydDogMTtcXG4gICAgZ3JpZC1yb3ctZW5kOiAyO1xcblxcbn1cXG5cXG4udGFza0Rlc2NyaXB0aW9uIHtcXG4gICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDE7XFxuICAgIGdyaWQtY29sdW1uLWVuZDogNDtcXG4gICAgZ3JpZC1yb3ctc3RhcnQ6IDI7XFxuICAgIGdyaWQtcm93LWVuZDogMztcXG59XFxuXFxuXFxuLmFkZFRhc2sge1xcbiAgICBoZWlnaHQ6IDJyZW07XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuXFxufVxcblxcbi5hZGRUYXNrOmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjojNjk2ODY4IDtcXG5cXG59XFxuXFxuXFxuXFxuXFxuI2FkZFByb2plY3RGb3JtIHtcXG4gICAgZGlzcGxheTogbm9uZTtcXG4gICAgaGVpZ2h0OjMwMHB4O1xcbiAgICB3aWR0aDozMDBweDtcXG4gICAgcG9zaXRpb246YWJzb2x1dGU7XFxuICAgIHRvcDogMjAlO1xcbiAgICBsZWZ0OiA1MCU7XFxuICAgIG1hcmdpbi1sZWZ0OiAtMTUwcHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNjOWM4Yzc7XFxuXFxufVxcblxcbi5hZGRQcm9qZWN0Rm9ybVVzZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcblxcbn1cXG5cXG4uYWRkUHJvamVjdEZvcm1Vc2VySGVhZGluZyBoMiB7XFxuXFxuXFxufVxcblxcblxcbi5hZGRQcm9qZWN0Rm9ybVVzZXJIZWFkaW5nIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjojNjk2ODY4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgaGVpZ2h0OiAzcmVtO1xcbiAgICBcXG59XFxuXFxuLmFkZFByb2plY3RGb3JtVXNlckJvZHkge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbn1cXG5cXG4uYWRkUHJvamVjdEZvcm1Vc2VyTGlUaXRsZSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuXFxufVxcblxcbi5hZGRQcm9qZWN0Rm9ybVVzZXJCdXR0b25zIHtcXG4gICAgbWFyZ2luLXRvcDogMTAwcHg7XFxuICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xcbn1cXG5cXG4jYWRkVGFza0Zvcm0ge1xcbiAgICBkaXNwbGF5OiBub25lO1xcbiAgICBoZWlnaHQ6NTAwcHg7XFxuICAgIHdpZHRoOjUwMHB4O1xcbiAgICBwb3NpdGlvbjphYnNvbHV0ZTtcXG4gICAgdG9wOiAyMCU7XFxuICAgIGxlZnQ6IDUwJTtcXG4gICAgbWFyZ2luLWxlZnQ6IC0yNTBweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2M5YzhjNztcXG5cXG59XFxuXFxuLmFkZFRhc2tGb3JtVXNlciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuXFxufVxcblxcbi5hZGRUYXNrRm9ybVVzZXJIZWFkaW5nIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjojNjk2ODY4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgaGVpZ2h0OiAzcmVtO1xcbiAgICBcXG59XFxuXFxuLmFkZFRhc2tGb3JtVXNlckJvZHkge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbn1cXG5cXG4uYWRkVGFza0Zvcm1Vc2VyTGkge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcblxcbn1cXG5cXG4uYWRkVGFza0Zvcm1Vc2VyVWwgaW5wdXQge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBcXG59XFxuXFxuLmFkZFRhc2tGb3JtVXNlckJ1dHRvbnMge1xcbiAgICBcXG5cXG59XFxuXFxuXFxuLmZsYWdJbWdQTkcxIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xcbn1cXG4uZmxhZ0ltZ1BORzIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBvcmFuZ2U7XFxufVxcblxcbi5mbGFnSW1nUE5HMyB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHNreWJsdWU7XFxufVxcblxcbi5hY3RpdmVQcmlvcml0eSB7XFxuICAgIHdpZHRoOiAyLjVyZW07XFxuICAgIGhlaWdodDogMi41cmVtO1xcblxcbn1cXG5cXG4vKiAuYWRkUHJvamVjdEZvcm1Vc2VySGVhZGluZ0hUd28ge1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufSAqL1xcblxcbmZvb3RlciB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcXG4gICAgZ3JpZC1yb3ctc3RhcnQ6IDM7XFxuICAgIGdyaWQtcm93LWVuZDogNDtcXG4gICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDE7XFxuICAgIGdyaWQtY29sdW1uLWVuZDogMztcXG59XFxuXFxuXFxuLypcXG5iYWNrZ3JvdW5kLWNvbG9yOiAjZWJlN2U0O1xcbiovXFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLFNBQVM7SUFDVCxVQUFVO0lBQ1YsYUFBYTtJQUNiLGdDQUFnQztJQUNoQyxrQ0FBa0M7SUFDbEMsYUFBYTtJQUNiLGlCQUFpQjs7QUFFckI7O0FBRUE7SUFDSSxVQUFVO0lBQ1YsU0FBUztBQUNiOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLFVBQVU7QUFDZDs7QUFFQTtJQUNJLFVBQVU7SUFDVixTQUFTO0FBQ2I7O0FBRUE7SUFDSSxtQkFBbUI7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O0FBRUE7SUFDSSx5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsY0FBYzs7QUFFbEI7O0FBRUE7O0dBRUc7O0FBRUg7SUFDSSxxQkFBcUI7SUFDckIsaUJBQWlCO0lBQ2pCLGVBQWU7SUFDZixvQkFBb0I7SUFDcEIsa0JBQWtCO0FBQ3RCOzs7QUFHQTs7Q0FFQ1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCJib2R5IHtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDI1MHB4IDFmcjtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxMjBweCAxZnIgNTBweDtcXG4gICAgaGVpZ2h0OiAxMDB2aDtcXG4gICAgcG9zaXRpb246cmVsYXRpdmU7XFxuXFxufVxcblxcbmgyLCBoMyB7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIG1hcmdpbjogMDtcXG59XFxuXFxudWwge1xcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XFxuICAgIHBhZGRpbmc6IDA7XFxufVxcblxcbmxpIHtcXG4gICAgcGFkZGluZzogMDtcXG4gICAgbWFyZ2luOiAwO1xcbn1cXG5cXG5oZWFkZXIge1xcbiAgICAvKiBoZWlnaHQ6IDEyMHB4OyAqL1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzIzNjM5O1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDE7XFxuICAgIGdyaWQtY29sdW1uLWVuZDogMztcXG4gIFxcbiAgICBcXG59XFxuXFxuXFxuaGVhZGVyIGgxIHtcXG4gICAgbWFyZ2luLWxlZnQ6IDNyZW07XFxuICAgIGNvbG9yOiB3aGl0ZTtcXG59XFxuXFxuXFxuLnRhc2tCYXIge1xcbiAgICBncmlkLWNvbHVtbi1zdGFydDogMTtcXG4gICAgZ3JpZC1jb2x1bW4tZW5kOiAyO1xcbiAgICBncmlkLXJvdy1zdGFydDogMjtcXG4gICAgZ3JpZC1yb3ctZW5kOiAzO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDFjZmNmO1xcbiAgICBcXG59XFxuXFxuXFxuLnRhc2tCYXJUb3Age1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcXG4gICAgXFxufVxcblxcblxcblxcbi50YXNrQmFyQ29udGVudHMge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcXG4gICAgcGFkZGluZzogMC4zcmVtO1xcbiAgICBnYXA6IDAuNXJlbTtcXG4gICAgbWFyZ2luOiAwLjVyZW07XFxuICAgXFxuXFxufVxcblxcbi50YXNrQmFyQ29udGVudHM6aG92ZXJ7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHBpbms7XFxufVxcblxcblxcbi5hY3RpdmVQcm9qZWN0IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjpwaW5rO1xcbn1cXG5cXG5cXG5cXG4ucHJvamVjdHMge1xcbiAgICBncmlkLWNvbHVtbi1zdGFydDogMTtcXG4gICAgZ3JpZC1jb2x1bW4tZW5kOiAyO1xcbiAgICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcXG5cXG5cXG4gICAgXFxufVxcblxcbi5wcm9qZWN0c0NvbnRlbnQge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcXG4gICAgcGFkZGluZzogMC4zcmVtO1xcbiAgICBnYXA6IDAuNXJlbTtcXG4gICAgbWFyZ2luOiAwLjVyZW07XFxuICAgXFxuXFxufVxcblxcbi5wcm9qZWN0cyBoMiB7XFxuICAgIG1hcmdpbjogMXJlbTtcXG4gICAgLyogYm9yZGVyOiAxcHggc29saWQgcmVkOyAqL1xcblxcblxcbn1cXG5cXG4udGFza1ZpZXcge1xcbiAgICBncmlkLWNvbHVtbi1zdGFydDogMjtcXG4gICAgZ3JpZC1jb2x1bW4tZW5kOiAzO1xcbiAgICBncmlkLXJvdy1zdGFydDogMjtcXG4gICAgZ3JpZC1yb3ctZW5kOiAzO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMGYwO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBnYXA6IDJyZW07XFxuICAgIHBhZGRpbmctdG9wOiAxcmVtO1xcbiAgICBwYWRkaW5nLWxlZnQ6IDJyZW07XFxufVxcblxcbi50YXNrcyB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGdhcDogMXJlbTtcXG5cXG59XFxuXFxuLnRhc2sge1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDUwcHggM2ZyIDFmcjtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiA1MHB4IDFmcjtcXG4gICAgYm9yZGVyLWJvdHRvbTogZ3JleSBzb2xpZCAxcHg7XFxufVxcblxcbi50YXNrOmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcGluaztcXG5cXG59XFxuXFxuLmNoZWNrTWFya0ltZ1BORyB7XFxuICAgIGdyaWQtY29sdW1uLXN0YXJ0OiAxO1xcbiAgICBncmlkLWNvbHVtbi1lbmQ6IDI7XFxuICAgIGdyaWQtcm93LXN0YXJ0OiAxO1xcbiAgICBncmlkLXJvdy1lbmQ6IDI7XFxufVxcblxcbi50YXNrVGl0bGUge1xcbiAgICBncmlkLWNvbHVtbi1zdGFydDogMjtcXG4gICAgZ3JpZC1jb2x1bW4tZW5kOiAzO1xcbiAgICBncmlkLXJvdy1zdGFydDogMTtcXG4gICAgZ3JpZC1yb3ctZW5kOiAyO1xcblxcbn1cXG5cXG4udGFza0R1ZURhdGUge1xcbiAgICBncmlkLWNvbHVtbi1zdGFydDogMztcXG4gICAgZ3JpZC1jb2x1bW4tZW5kOiA0O1xcbiAgICBncmlkLXJvdy1zdGFydDogMTtcXG4gICAgZ3JpZC1yb3ctZW5kOiAyO1xcblxcbn1cXG5cXG4udGFza0Rlc2NyaXB0aW9uIHtcXG4gICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDE7XFxuICAgIGdyaWQtY29sdW1uLWVuZDogNDtcXG4gICAgZ3JpZC1yb3ctc3RhcnQ6IDI7XFxuICAgIGdyaWQtcm93LWVuZDogMztcXG59XFxuXFxuXFxuLmFkZFRhc2sge1xcbiAgICBoZWlnaHQ6IDJyZW07XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuXFxufVxcblxcbi5hZGRUYXNrOmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjojNjk2ODY4IDtcXG5cXG59XFxuXFxuXFxuXFxuXFxuI2FkZFByb2plY3RGb3JtIHtcXG4gICAgZGlzcGxheTogbm9uZTtcXG4gICAgaGVpZ2h0OjMwMHB4O1xcbiAgICB3aWR0aDozMDBweDtcXG4gICAgcG9zaXRpb246YWJzb2x1dGU7XFxuICAgIHRvcDogMjAlO1xcbiAgICBsZWZ0OiA1MCU7XFxuICAgIG1hcmdpbi1sZWZ0OiAtMTUwcHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNjOWM4Yzc7XFxuXFxufVxcblxcbi5hZGRQcm9qZWN0Rm9ybVVzZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcblxcbn1cXG5cXG4uYWRkUHJvamVjdEZvcm1Vc2VySGVhZGluZyBoMiB7XFxuXFxuXFxufVxcblxcblxcbi5hZGRQcm9qZWN0Rm9ybVVzZXJIZWFkaW5nIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjojNjk2ODY4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgaGVpZ2h0OiAzcmVtO1xcbiAgICBcXG59XFxuXFxuLmFkZFByb2plY3RGb3JtVXNlckJvZHkge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbn1cXG5cXG4uYWRkUHJvamVjdEZvcm1Vc2VyTGlUaXRsZSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuXFxufVxcblxcbi5hZGRQcm9qZWN0Rm9ybVVzZXJCdXR0b25zIHtcXG4gICAgbWFyZ2luLXRvcDogMTAwcHg7XFxuICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xcbn1cXG5cXG4jYWRkVGFza0Zvcm0ge1xcbiAgICBkaXNwbGF5OiBub25lO1xcbiAgICBoZWlnaHQ6NTAwcHg7XFxuICAgIHdpZHRoOjUwMHB4O1xcbiAgICBwb3NpdGlvbjphYnNvbHV0ZTtcXG4gICAgdG9wOiAyMCU7XFxuICAgIGxlZnQ6IDUwJTtcXG4gICAgbWFyZ2luLWxlZnQ6IC0yNTBweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2M5YzhjNztcXG5cXG59XFxuXFxuLmFkZFRhc2tGb3JtVXNlciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuXFxufVxcblxcbi5hZGRUYXNrRm9ybVVzZXJIZWFkaW5nIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjojNjk2ODY4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgaGVpZ2h0OiAzcmVtO1xcbiAgICBcXG59XFxuXFxuLmFkZFRhc2tGb3JtVXNlckJvZHkge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbn1cXG5cXG4uYWRkVGFza0Zvcm1Vc2VyTGkge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcblxcbn1cXG5cXG4uYWRkVGFza0Zvcm1Vc2VyVWwgaW5wdXQge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBcXG59XFxuXFxuLmFkZFRhc2tGb3JtVXNlckJ1dHRvbnMge1xcbiAgICBcXG5cXG59XFxuXFxuXFxuLmZsYWdJbWdQTkcxIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xcbn1cXG4uZmxhZ0ltZ1BORzIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBvcmFuZ2U7XFxufVxcblxcbi5mbGFnSW1nUE5HMyB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHNreWJsdWU7XFxufVxcblxcbi5hY3RpdmVQcmlvcml0eSB7XFxuICAgIHdpZHRoOiAyLjVyZW07XFxuICAgIGhlaWdodDogMi41cmVtO1xcblxcbn1cXG5cXG4vKiAuYWRkUHJvamVjdEZvcm1Vc2VySGVhZGluZ0hUd28ge1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufSAqL1xcblxcbmZvb3RlciB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcXG4gICAgZ3JpZC1yb3ctc3RhcnQ6IDM7XFxuICAgIGdyaWQtcm93LWVuZDogNDtcXG4gICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDE7XFxuICAgIGdyaWQtY29sdW1uLWVuZDogMztcXG59XFxuXFxuXFxuLypcXG5iYWNrZ3JvdW5kLWNvbG9yOiAjZWJlN2U0O1xcbiovXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmNcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSBzY3JpcHRVcmwgPSBzY3JpcHRzW3NjcmlwdHMubGVuZ3RoIC0gMV0uc3JjXG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiJ3VzZSBzdHJpY3QnXG5cbmltcG9ydCAnLi9zdHlsZS5jc3MnO1xuaW1wb3J0IGluYm94SW1nIGZyb20gJy4vaW1nL2luYm94LnBuZyc7XG5pbXBvcnQgdG9kYXlJbWcgZnJvbSAnLi9pbWcvdG9kYXkucG5nJztcbmltcG9ydCB1cGNvbWluZ0ltZyBmcm9tICcuL2ltZy91cGNvbWluZy5wbmcnO1xuaW1wb3J0IGFkZFByb2plY3RJbWcgZnJvbSAnLi9pbWcvYWRkUHJvamVjdC5wbmcnO1xuaW1wb3J0IGNoZWNrTWFya0ltZyBmcm9tICcuL2ltZy9jaGVja01hcmsucG5nJztcbmltcG9ydCBmbGFnSW1nIGZyb20gJy4vaW1nL2ZsYWcucG5nJztcblxuXG5cblxuLy8vL3N0YXRlIG9mIHRoZSBib2FyZC4uLi4gXG5mdW5jdGlvbiBCb2FyZCgpIHtcblxuICAgIC8vLy9pbml0aWFsIHNldCB1cCBcbiAgICBsZXQgYm9hcmQgPSBbXTtcbiAgICBib2FyZC5wdXNoKFByb2plY3QoJ2luYm94JywgMCkpO1xuICAgIGJvYXJkLnB1c2goUHJvamVjdCgndG9kYXknLCAxKSk7XG4gICAgYm9hcmQucHVzaChQcm9qZWN0KCd1cGNvbWluZycsIDIpKTtcblxuXG4gIFxuICAgIGNvbnN0IGFkZFByb2plY3QgPSAodGl0bGUsIHByb2plY3RJbmRleCkgPT4ge1xuICAgICAgICBib2FyZC5wdXNoKFByb2plY3QodGl0bGUsIHByb2plY3RJbmRleCkpXG4gICAgfVxuXG5cbiAgICBjb25zdCBhZGRUYXNrID0gKHByb2plY3RJbmRleCwgdGFza0luZGV4LCAuLi50YXNrSW5wdXRzKSA9PiB7ICAgICAgICBcbiAgICAgICAgY29uc29sZS5sb2coYHRhc2tJbnB1dHMgYmVsb3dgKTsgICAgICAgIFxuICAgICAgICBjb25zb2xlLmxvZyguLi50YXNrSW5wdXRzKTtcbiAgICAgICAgXG5cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGk8IGJvYXJkLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoYm9hcmRbaV0ucHJvamVjdEluZGV4ID09PSBwcm9qZWN0SW5kZXgpIHtcbiAgICAgICAgICAgICAgICBib2FyZFtpXS50YXNrcy5wdXNoKFRhc2sodGFza0luZGV4LCAuLi50YXNrSW5wdXRzKSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG5cblxuICAgICAgICByZXR1cm4gYm9hcmQgICBcbiAgICB9XG5cbiAgICAvLy8vLy9kb24ndCBuZWVkIHRoaXMuLi4gQ29udHJvbGxlciBjYW4gYWNjZXNzIFRhc2sgZGlyZWN0bHkuLiBcbiAgICAvLyBjb25zdCBnZXRQcmlvcml0eSA9IChwcm9qZWN0VGl0bGUsIHRhc2tUaXRsZSkgPT4ge1xuICAgIC8vICAgICBjb25zb2xlLmxvZyhgZ2V0UHJpb3JpdHkgZnVuY3Rpb24gaW4gQm9hcmQgaXMgcnVubmluZyB3LyAke3Byb2plY3RUaXRsZX0sICR7dGFza1RpdGxlfWApO1xuICAgICAgICBcblxuICAgIC8vICAgICBmb3IgKGxldCBpID0gMDsgaTwgYm9hcmQubGVuZ3RoOyBpKyspIHtcbiAgICAvLyAgICAgICAgIGlmIChib2FyZFtpXS50aXRsZSA9PT0gcHJvamVjdFRpdGxlKSB7XG4gICAgLy8gICAgICAgICAgICAgY29uc29sZS5sb2coYGZvdW5kIHByb2plY3RgKTtcbiAgICAgICAgICAgICAgICBcbiAgICAvLyAgICAgICAgICAgICBmb3IgKGxldCBqID0gMDsgajxib2FyZFtpXS50YXNrcy5sZW5ndGg7IGorKykge1xuICAgIC8vICAgICAgICAgICAgICAgICBpZiAoYm9hcmRbaV0udGFza3Nbal0udGl0bGUgPT09dGFza1RpdGxlKSB7XG4gICAgLy8gICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhib2FyZFtpXS50YXNrc1tqXS5nZXRQcmlvcml0eSgpKTtcbiAgICAvLyAgICAgICAgICAgICAgICAgICAgIHJldHVybiBib2FyZFtpXS50YXNrc1tqXS5nZXRQcmlvcml0eSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAvLyAgICAgICAgICAgICAgICAgfVxuICAgIC8vICAgICAgICAgICAgIH1cbiAgICAvLyAgICAgICAgIH1cbiAgICAvLyAgICAgfVxuXG4gICAgLy8gICAgIGNvbnNvbGUubG9nKGB0aGlzIHNob3VsZG4ndCBiZSBydW5uaW5nYCk7XG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgLy8gfVxuXG5cbiAgICBjb25zdCBlZGl0VGFza0lucHV0cyA9IChwcm9qZWN0SW5kZXgsIHRhc2tJbmRleCwgLi4udGFza0lucHV0cykgPT4ge1xuXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpPCBib2FyZC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKGJvYXJkW2ldLnByb2plY3RJbmRleCA9PT0gcHJvamVjdEluZGV4KSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coYGZvdW5kIG1hdGNoaW5nIHByb2plY3RgKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBqPTA7IGogPCBib2FyZFtpXS50YXNrcy5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhib2FyZFtpXS50YXNrc1tqXSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGJvYXJkW2ldLnRhc2tzW2pdLnRhc2tJbmRleClcblxuICAgICAgICAgICAgICAgICAgICBpZiAoYm9hcmRbaV0udGFza3Nbal0udGFza0luZGV4ID09PSB0YXNrSW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGBmb3VuZCBtYXRjaGluZyB0YXNrISEgbGluZSA3OWApO1xuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICBib2FyZFtpXS50YXNrcy5zcGxpY2UoaiwxLFRhc2sodGFza0luZGV4LCAuLi50YXNrSW5wdXRzKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG5cbiAgICB9XG5cblxuXG5cbiAgICAvLyBjb25zdCBpbnB1dFRhc2tQcmlvcml0eSA9IChwcm9qZWN0VGl0bGUsIHRhc2tUaXRsZSwgcHJpb3JpdHkpID0+IHtcbiAgICAvLyAgICAgLypcbiAgICAvLyAgICAgMS4gc2VsZWN0IGNvcnJlY3QgdGFza1xuICAgIC8vICAgICAyLiBpbnB1dCBpbmRleCB0byBwdXQgaW50byB0YXNrLkNoYW5nZVByaW9yaXR5KGkpO1xuICAgIC8vICAgICAqL1xuICAgICAgICBcblxuICAgIC8vICAgICBmb3IgKGxldCBpID0gMDsgaTwgYm9hcmQubGVuZ3RoOyBpKyspIHtcbiAgICAvLyAgICAgICAgIGlmIChib2FyZFtpXS50aXRsZSA9PT0gcHJvamVjdFRpdGxlKSB7XG4gICAgLy8gICAgICAgICAgICAgZm9yIChsZXQgaj0wOyBqIDwgYm9hcmRbaV0udGFza3MubGVuZ3RoOyBqKyspIHtcbiAgICAvLyAgICAgICAgICAgICAgICAgaWYgKGJvYXJkW2ldLnRpdGxlID09PSB0YXNrVGl0bGUpIHtcbiAgICAvLyAgICAgICAgICAgICAgICAgICAgIGJvYXJkXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAvLyAgICAgICAgICAgICAgICAgfVxuICAgIC8vICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAvLyAgICAgICAgIH1cbiAgICAvLyAgICAgfVxuICAgICAgICBcbiAgICAvLyB9XG5cbiAgICAvLyBjb25zdCBhZGRUYXNrID0gKHByb2plY3RUaXRsZSkgPT4ge1xuICAgIC8vICAgICAvLyBjb25zdCBwaWNrZWRQcm9qZWN0ID0gYm9hcmQuZmlsdGVyKChwcm9qZWN0KSA9PiBwcm9qZWN0LnRpdGxlID09PSBwcm9qZWN0VGl0bGUpXG4gICAgICAgIFxuICAgIC8vICAgICBmb3IgKGNvbnN0IHByb2plY3Qgb2YgYm9hcmQpIHtcbiAgICAvLyAgICAgICAgIGlmIChwcm9qZWN0LnRpdGxlID09PSBwcm9qZWN0VGl0bGUpIHtcbiAgICAvLyAgICAgICAgICAgICBwcm9qZWN0LnB1c2godGFzaylcbiAgICAvLyAgICAgICAgIH1cbiAgICAvLyAgICAgfVxuICAgICAgICBcbiAgICAgICAgXG4gICAgLy8gfVxuXG4gICAgY29uc3QgZ2V0Qm9hcmQgPSAoKSA9PiBib2FyZDtcblxuICAgIHJldHVybiB7XG4gICAgICAgIGdldEJvYXJkLCBcbiAgICAgICAgYWRkUHJvamVjdCxcbiAgICAgICAgYWRkVGFzayxcbiAgICAgICAgLy8gZ2V0UHJpb3JpdHksXG4gICAgICAgIGVkaXRUYXNrSW5wdXRzLFxuICAgIH1cblxufVxuXG5cblxuZnVuY3Rpb24gUHJvamVjdCh0aXRsZSwgcHJvamVjdEluZGV4KSB7XG4gICAgbGV0IHRhc2tzID0gW107XG5cbiAgICAvLyBjb25zdCBhZGRUYXNrVG9Qcm9qZWN0ID0gcHJvamVjdHMucHVzaChUYXNrKHRpdGxlLCBkZXNjcmlwdGlvbiwgZHVlZGF0ZSwgcHJpb3JpdHksIGRlc2NyaXB0aW9uKSk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICB0aXRsZTogdGl0bGUsXG4gICAgICAgIHByb2plY3RJbmRleDogcHJvamVjdEluZGV4LFxuICAgICAgICB0YXNrcyxcblxuICAgIH1cbn1cblxuXG5cbmZ1bmN0aW9uIFRhc2sodGFza0luZGV4LCB0aXRsZSwgZHVlRGF0ZSwgcHJpb3JpdHksIGRlc2NyaXB0aW9uKSB7XG5cbiAgICAvLyBjb25zdCBwcmlvcml0eUxpc3QgPSBbXG4gICAgLy8gICAgICdwMScsXG4gICAgLy8gICAgICdwMicsXG4gICAgLy8gICAgICdwMycsXG4gICAgLy8gICAgICdwNCdcbiAgICAvLyBdXG5cbiAgICAvLyBsZXQgc2VsZWN0ZWRQcmlvcml0eSA9IHByaW9yaXR5TGlzdFtwcmlvcml0eS0xXTtcblxuICAgIC8vIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgIC8vICAgICBjb25zb2xlLmxvZyhgdGhpcyBpcyBzZWxlY3RlZFByaW9yaXR5ID0gJHtzZWxlY3RlZFByaW9yaXR5fWApO1xuICAgIC8vIH0sIDMwMDApXG4gICAgXG4gICAgXG5cblxuICAgIGNvbnN0IGdldFByaW9yaXR5ID0gKCkgPT4gcHJpb3JpdHk7XG5cbiAgXG5cbiAgICByZXR1cm4ge1xuICAgICAgICB0aXRsZTogdGl0bGUsXG4gICAgICAgIGR1ZURhdGU6IGR1ZURhdGUsXG4gICAgICAgIGRlc2NyaXB0aW9uOiBkZXNjcmlwdGlvbixcbiAgICAgICAgcHJpb3JpdHk6IHByaW9yaXR5LFxuICAgICAgICB0YXNrSW5kZXg6IHRhc2tJbmRleCxcbiAgICAgICAgZ2V0UHJpb3JpdHksXG4gICAgfVxuXG5cblxufVxuXG5cblxuZnVuY3Rpb24gQ29udHJvbGxlcigpIHtcbiAgICAvLy8vaW5pdGlhbCBzZXQgdXBcbiAgICBsZXQgYm9hcmQgPSBCb2FyZCgpO1xuICAgIGxldCBib2FyZEJvYXJkID0gYm9hcmQuZ2V0Qm9hcmQoKTtcbiAgICBsZXQgYWN0aXZlUHJvamVjdCA9IGJvYXJkLmdldEJvYXJkKClbMF07XG5cblxuICAgIGNvbnNvbGUubG9nKGBib2FyZEJvYXJkIGJlbG93YCk7XG4gICAgY29uc29sZS5sb2coYm9hcmRCb2FyZCk7XG5cbiAgICAvLy8vcHJvamVjdEluZGV4IGNvdW50ZXJcbiAgICBsZXQgcHJvamVjdEluZGV4ID0gMztcbiAgICAvLy8vdGFza0luZGV4IGNvdW50ZXJcbiAgICBsZXQgdGFza0luZGV4ID0gMjsgXG4gICAgY29uc3QgZ2V0VGFza0luZGV4ID0gKCkgPT4gdGFza0luZGV4O1xuICAgICAgICAgICBcbiAgXG5cbiAgICAgICAgXG4gICAgbGV0IGdldEFjdGl2ZVByb2plY3RUaXRsZSA9ICgpID0+IGFjdGl2ZVByb2plY3QudGl0bGU7IFxuXG4gICAgbGV0IGdldEFjdGl2ZVByb2plY3RUYXNrcyA9ICgpID0+IGFjdGl2ZVByb2plY3QudGFza3M7XG5cbiAgICBsZXQgZ2V0QWN0aXZlUHJvamVjdEluZGV4ID0gKCkgPT4gYWN0aXZlUHJvamVjdC5wcm9qZWN0SW5kZXg7IFxuICAgIGNvbnNvbGUubG9nKGdldEFjdGl2ZVByb2plY3RJbmRleCgpKTtcblxuICAgIFxuXG5cbiAgICBib2FyZC5hZGRUYXNrKGdldEFjdGl2ZVByb2plY3RJbmRleCgpLCAwLCAnYXNmZWQnLCcwNi8wNS8yNScsICdwMScsICdUaGlzIGlzIGEgdGFzayBpbiB5b3VyIGluYm94LiB5b3UgY2FuICcpO1xuICAgIGJvYXJkLmFkZFRhc2soZ2V0QWN0aXZlUHJvamVjdEluZGV4KCksIDEsICdhJywnYicsJ3A0JywnZScpO1xuXG4gICAgXG5cblxuXG4gICAgbGV0IGFjdGl2ZVRhc2sgPSBcIlwiO1xuICAgIFxuICAgIGNvbnNvbGUubG9nKGBhY3RpdmVUYXNrIGJlbG93IGApO1xuICAgIGNvbnNvbGUubG9nKGFjdGl2ZVRhc2spO1xuXG4gICAgY29uc3QgZ2V0QWN0aXZlVGFzayA9ICgpID0+IGFjdGl2ZVRhc2s7XG5cbiAgICBjb25zdCBnZXRBY3RpdmVUYXNrVGl0bGUgPSAoKSA9PiBhY3RpdmVUYXNrLnRpdGxlO1xuXG4gICAgY29uc3QgZ2V0QWN0aXZlVGFza1ByaW9yaXR5ID0oKSA9PiBhY3RpdmVUYXNrLnByaW9yaXR5O1xuXG4gICAgY29uc3QgZ2V0QWN0aXZlVGFza1Rhc2tJbmRleCA9KCkgPT4gYWN0aXZlVGFzay50YXNrSW5kZXg7XG5cbiAgICBcblxuICAgIC8vIGNvbnNvbGUubG9nKGJvYXJkLmdldFByaW9yaXR5KGdldEFjdGl2ZVByb2plY3RUaXRsZSgpLCBnZXRBY3RpdmVUYXNrKCkpKTtcblxuICAgIC8vIGJvYXJkLmdldFByaW9yaXR5KGdldEFjdGl2ZVByb2plY3RUaXRsZSgpLCBnZXRBY3RpdmVUYXNrVGl0bGUoKSlcblxuICAgIFxuXG5cblxuXG4gICAgY29uc3Qgc3dpdGNoQWN0aXZlUHJvamVjdCA9IChzZWxlY3RlZFByb2plY3RJbmRleCkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhgc3dpdGNoQWN0aXZlUHJvamVjdCBpcyBydW5uaW5nYCk7XG4gICAgICAgIFxuICAgICAgICBmb3IgKGxldCBpPTA7IGkgPCBib2FyZEJvYXJkLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoYm9hcmRCb2FyZFtpXS5wcm9qZWN0SW5kZXggPT09IHNlbGVjdGVkUHJvamVjdEluZGV4KSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coYGZvdW5kIHByb2plY3RgKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICBcbiAgICAgICAgICAgICAgICBhY3RpdmVQcm9qZWN0ID0gYm9hcmRCb2FyZFtpXTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhhY3RpdmVQcm9qZWN0KTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgfVxuXG5cbiAgICBjb25zdCBzd2l0Y2hBY3RpdmVUYXNrID0gKHNlbGVjdGVkVGFza0luZGV4KSA9PiB7XG4gICAgICAgIGZvciAobGV0IGk9MDsgaSA8IGdldEFjdGl2ZVByb2plY3RUYXNrcygpLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoZ2V0QWN0aXZlUHJvamVjdFRhc2tzKClbaV0udGFza0luZGV4ID09PSBzZWxlY3RlZFRhc2tJbmRleCkge1xuXG4gICAgICAgICAgICAgICAgYWN0aXZlVGFzayA9IGdldEFjdGl2ZVByb2plY3RUYXNrcygpW2ldO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGB0aGlzIGlzIG5vdyBhY3RpdmVUYXNrID0gYCk7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coYWN0aXZlVGFzayk7ICAgICAgICAgIFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG5cbiAgICBjb25zdCBhZGRUYXNrID0gKHRpdGxlLCBkdWVEYXRlLCBwcmlvcml0eSwgZGVzY3JpcHRpb24pID0+IHtcbiAgICAgICAgYm9hcmQuYWRkVGFzayhnZXRBY3RpdmVQcm9qZWN0SW5kZXgoKSwgdGFza0luZGV4LCB0aXRsZSwgZHVlRGF0ZSwgcHJpb3JpdHksIGRlc2NyaXB0aW9uKTtcbiAgICAgICAgXG4gICAgICAgIHRhc2tJbmRleCsrO1xuICAgICAgICBcbiAgICB9O1xuICAgICAgICAvLyBsZXQgYWN0aXZlUHJvamVjdFRhc2tzID0gZ2V0QUN0aXZlUHJvamVjdFRhc2tzKCk7XG4gICAgICAgIC8vIGZvciAobGV0IGk9MDsgaSA8IGFjdGl2ZVByb2plY3RUYXNrcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAvLyAgICAgaWYgKGFjdGl2ZVByb2plY3RUYXNrc1tpXS50YXNrSW5kZXggPT09IHRhc2tJbmRleCkge1xuICAgICAgICAvLyAgICAgICAgIGFjdGl2ZVByb2plY3RUYXNrcy5zcGxpY2UoaSwgMCwgKVxuXG4gICAgICAgIC8vICAgICB9XG4gICAgICAgIC8vIH1cbiAgICAgICAgXG5cblxuICAgIGNvbnN0IGFkZFByb2plY3QgPSAocHJvamVjdFRpdGxlKSA9PiB7XG4gICAgICAgIGJvYXJkLmFkZFByb2plY3QocHJvamVjdFRpdGxlLCBwcm9qZWN0SW5kZXgpO1xuICAgICAgICBwcm9qZWN0SW5kZXgrKztcblxuICAgIH1cblxuXG4gICAgY29uc3QgZ2V0Qm9hcmQgPSAoKSA9PiBib2FyZEJvYXJkO1xuXG4gICAgY29uc3QgY2hlY2tUYXNrRXhpc3QgPSAoKSA9PiB7XG4gICAgICAgIFxuICAgIH1cblxuICAgIGNvbnN0IGdldEFjdGl2ZVByb2plY3QgPSgpID0+IGFjdGl2ZVByb2plY3Q7IFxuXG4gICAgY29uc3QgZWRpdFRhc2tJbnB1dHMgPSAodGFza1RpdGxlLCB0YXNrRHVlRGF0ZSwgdGFza1ByaW9yaXR5LCB0YXNrRGVzY3JpcHRpb24pPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhgZWRpdFRhc2tJbnB1dHNpcyBub3cgcnVubmluZ2ApO1xuXG4gICAgICAgIGJvYXJkLmVkaXRUYXNrSW5wdXRzKGdldEFjdGl2ZVByb2plY3RJbmRleCgpLCBnZXRBY3RpdmVUYXNrVGFza0luZGV4KCksIHRhc2tUaXRsZSwgdGFza0R1ZURhdGUsIHRhc2tQcmlvcml0eSwgdGFza0Rlc2NyaXB0aW9uKVxuICAgICAgICBcbiAgICAgIFxuXG4gICAgICAgIGNvbnNvbGUubG9nKGB0aGlzaXMgYWN0aXZlIFRhc2sgbm93YCk7XG4gICAgICAgIGNvbnNvbGUubG9nKGFjdGl2ZVRhc2spO1xuICAgICAgICBcbiAgICAgICAgXG5cbiAgICAgICAgYWN0aXZlVGFzayA9ICcnO1xuICAgIH1cblxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgYWRkVGFzayxcbiAgICAgICAgZ2V0Qm9hcmQsXG4gICAgICAgIGdldFRhc2tJbmRleCxcbiAgICAgICAgZ2V0QWN0aXZlUHJvamVjdCxcbiAgICAgICAgZ2V0QWN0aXZlVGFzayxcbiAgICAgICAgZ2V0QWN0aXZlUHJvamVjdFRpdGxlLFxuICAgICAgICBnZXRBY3RpdmVQcm9qZWN0VGFza3MsXG4gICAgICAgIHN3aXRjaEFjdGl2ZVByb2plY3QsXG4gICAgICAgIGFkZFByb2plY3QsXG4gICAgICAgIHN3aXRjaEFjdGl2ZVRhc2ssXG4gICAgICAgIGdldEFjdGl2ZVRhc2tUaXRsZSxcbiAgICAgICAgZ2V0QWN0aXZlVGFza1ByaW9yaXR5LFxuICAgICAgICBnZXRBY3RpdmVUYXNrVGFza0luZGV4LFxuICAgICAgICBlZGl0VGFza0lucHV0cyxcbiAgICB9XG4gICAgIFxufVxuXG5cblxuZnVuY3Rpb24gc2NyZWVuQ29udHJvbGxlcigpIHtcblxuICAgIGNvbnN0IHRvRG9MaXN0ID0gQ29udHJvbGxlcigpO1xuXG4gICAgbGV0IHRhc2tQcmlvcml0eTsgIFxuICAgIGxldCBhY3RpdmVUYXNrID0gdG9Eb0xpc3QuZ2V0QWN0aXZlVGFzaygpO1xuXG5cbiAgICAvLy8vc2VsZWN0aW5nXG4gICAgY29uc3QgYm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKSAgXG5cblxuXG4gICAgY29uc3QgdXBkYXRlU2NyZWVuID0gKCkgPT4ge1xuICAgICAgICAvLy8vQ0xFQVIvLy8vXG4gICAgICAgIGJvZHkuaW5uZXJIVE1MID1cIlwiO1xuXG4gICAgICAgIC8vLy9HRVQgU1RVRkYgRlJPTSBCT0FSRC8vLy9cbiAgICAgICAgY29uc3QgYm9hcmQgPSB0b0RvTGlzdC5nZXRCb2FyZCgpO1xuXG4gICAgICAgICAgIFxuXG4gICAgICAgIGxldCBhY3RpdmVQcm9qZWN0VGl0bGUgPSB0b0RvTGlzdC5nZXRBY3RpdmVQcm9qZWN0VGl0bGUoKTtcbiAgICAgICAgY29uc29sZS5sb2coYHRoaXMgaXMgYWN0aXZlUHJvamVjdFRpdGxlOiAke2FjdGl2ZVByb2plY3RUaXRsZX1gKTtcbiAgICAgICAgICAgXG4gICAgXG4gICAgICAgIC8vLy9jcmVhdGUgaGVhZGVyXG4gICAgICAgIGNvbnN0IGhlYWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2hlYWRlcicpO1xuICAgICAgICBib2R5LmFwcGVuZENoaWxkKGhlYWRlcik7XG4gICAgXG4gICAgICAgIGNvbnN0IGhlYWRlclRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDEnKTtcbiAgICAgICAgaGVhZGVyVGl0bGUudGV4dENvbnRlbnQgPSAnVG9Eb0xpc3QnXG4gICAgICAgIGhlYWRlci5hcHBlbmRDaGlsZChoZWFkZXJUaXRsZSk7XG4gICAgXG5cbiAgICBcbiAgICAgICAgLy8vL2NyZWF0ZSB0YXNrYmFyIFxuICAgICAgICBjb25zdCB0YXNrQmFyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHRhc2tCYXIuY2xhc3NMaXN0LmFkZCgndGFza0JhcicpO1xuICAgICAgICBib2R5LmFwcGVuZENoaWxkKHRhc2tCYXIpO1xuICAgICAgICBcbiAgICAgICAgLy8vL3Rhc2tCYXJUb3BcbiAgICAgICAgY29uc3QgdGFza0JhclRvcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ25hdicpO1xuICAgICAgICB0YXNrQmFyVG9wLmNsYXNzTGlzdC5hZGQoJ3Rhc2tCYXJUb3AnKTtcbiAgICAgICAgdGFza0Jhci5hcHBlbmRDaGlsZCh0YXNrQmFyVG9wKTtcbiAgICBcbiAgICAgICAgY29uc3QgaW5ib3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgaW5ib3guY2xhc3NMaXN0LmFkZCgndGFza0JhckNvbnRlbnRzJyk7XG4gICAgICAgIC8vIGluYm94LmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZVByb2plY3QnKTtcbiAgICAgICAgaW5ib3guZGF0YXNldC5wcm9qZWN0VGl0bGUgPSAnaW5ib3gnO1xuICAgICAgICBpbmJveC5kYXRhc2V0LnByb2plY3RJbmRleCA9IDA7XG4gICAgXG4gICAgICAgIHRhc2tCYXJUb3AuYXBwZW5kQ2hpbGQoaW5ib3gpO1xuICAgIFxuICAgICAgICBjb25zdCBpbmJveEltZ1BORyA9IG5ldyBJbWFnZSgpO1xuICAgICAgICBpbmJveEltZ1BORy5zcmMgPSBpbmJveEltZztcbiAgICAgICAgaW5ib3hJbWdQTkcuZGF0YXNldC5wcm9qZWN0VGl0bGUgPSAnaW5ib3gnO1xuICAgICAgICBpbmJveC5hcHBlbmRDaGlsZChpbmJveEltZ1BORyk7XG4gICAgXG4gICAgICAgIGNvbnN0IGluYm94SFRocmVlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDMnKTtcbiAgICAgICAgaW5ib3hIVGhyZWUudGV4dENvbnRlbnQgPSAnSW5ib3gnXG4gICAgICAgIGluYm94SFRocmVlLmRhdGFzZXQucHJvamVjdFRpdGxlID0gJ2luYm94JztcbiAgICAgICAgaW5ib3guYXBwZW5kQ2hpbGQoaW5ib3hIVGhyZWUpO1xuICAgIFxuICAgIFxuICAgICAgICBjb25zdCB0b2RheSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICB0b2RheS5jbGFzc0xpc3QuYWRkKCd0YXNrQmFyQ29udGVudHMnKTtcbiAgICAgICAgdG9kYXkuZGF0YXNldC5wcm9qZWN0VGl0bGUgPSAndG9kYXknO1xuICAgICAgICB0b2RheS5kYXRhc2V0LnByb2plY3RJbmRleCA9IDE7XG4gICAgICAgIHRhc2tCYXJUb3AuYXBwZW5kQ2hpbGQodG9kYXkpO1xuICAgIFxuICAgICAgICBjb25zdCB0b2RheUltZ1BORyA9IG5ldyBJbWFnZSgpO1xuICAgICAgICB0b2RheUltZ1BORy5zcmMgPSB0b2RheUltZztcbiAgICAgICAgdG9kYXlJbWdQTkcuY2xhc3NMaXN0LmFkZCgndG9kYXlJbWdQTkcnKVxuICAgICAgICB0b2RheS5hcHBlbmRDaGlsZCh0b2RheUltZ1BORyk7XG4gICAgXG4gICAgXG4gICAgICAgIGNvbnN0IHRvZGF5SFRocmVlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDMnKTtcbiAgICAgICAgdG9kYXlIVGhyZWUudGV4dENvbnRlbnQgPSAnVG9kYXknXG4gICAgICAgIHRvZGF5LmFwcGVuZENoaWxkKHRvZGF5SFRocmVlKTtcbiAgICBcbiAgICBcbiAgICAgICAgY29uc3QgdXBjb21pbmcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgdXBjb21pbmcuY2xhc3NMaXN0LmFkZCgndGFza0JhckNvbnRlbnRzJyk7XG4gICAgICAgIHVwY29taW5nLmRhdGFzZXQucHJvamVjdFRpdGxlID0gJ3VwY29taW5nJztcbiAgICAgICAgdXBjb21pbmcuZGF0YXNldC5wcm9qZWN0SW5kZXggPSAyO1xuICAgICAgICB0YXNrQmFyVG9wLmFwcGVuZENoaWxkKHVwY29taW5nKTtcbiAgICBcbiAgICBcbiAgICAgICAgY29uc3QgdXBjb21pbmdJbWdQTkcgPSBuZXcgSW1hZ2UoKTtcbiAgICAgICAgdXBjb21pbmdJbWdQTkcuc3JjID0gdXBjb21pbmdJbWc7XG4gICAgICAgIHVwY29taW5nSW1nUE5HLmNsYXNzTGlzdC5hZGQoJ3VwY29taW5nSW1nUE5HJyk7XG4gICAgICAgIHVwY29taW5nLmFwcGVuZENoaWxkKHVwY29taW5nSW1nUE5HKTtcbiAgICBcbiAgICBcbiAgICAgICAgY29uc3QgdXBjb21pbmdIVGhyZWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMycpO1xuICAgICAgICB1cGNvbWluZ0hUaHJlZS50ZXh0Q29udGVudCA9ICdVcGNvbWluZydcbiAgICAgICAgdXBjb21pbmcuYXBwZW5kQ2hpbGQodXBjb21pbmdIVGhyZWUpO1xuICAgIFxuICAgIFxuICAgICAgICAvLy8vY3JlYXRlIFByb2plY3RzXG4gICAgICAgIGNvbnN0IHByb2plY3RzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHByb2plY3RzLmNsYXNzTGlzdC5hZGQoJ3Byb2plY3RzJyk7XG4gICAgICAgIHRhc2tCYXIuYXBwZW5kQ2hpbGQocHJvamVjdHMpO1xuICAgIFxuICAgICAgICBjb25zdCBwcm9qZWN0c0hUd28gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMicpO1xuICAgICAgICAvLyBwcm9qZWN0c0hUd28uY2xhc3NMaXN0LmFkZCgncHJvamVjdHNDb250ZW50JylcbiAgICAgICAgcHJvamVjdHNIVHdvLnRleHRDb250ZW50ID0gXCJQcm9qZWN0c1wiXG4gICAgICAgIHByb2plY3RzLmFwcGVuZENoaWxkKHByb2plY3RzSFR3byk7XG4gICAgXG4gICAgICAgIGNvbnN0IHByb2plY3RzTmF2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbmF2Jyk7XG4gICAgICAgIHByb2plY3RzLmFwcGVuZENoaWxkKHByb2plY3RzTmF2KTtcblxuICAgICAgICAvLy8vY3JlYXRlIERPTSBlbGVtZW50cyBmb3IgcHJvamVjdHMgXG4gICAgICAgIGZvciAobGV0IGk9MzsgaSA8IGJvYXJkLmxlbmd0aDsgaSsrKSB7XG4gIFxuICAgICAgICAgICAgY29uc3QgcHJvamVjdHNOYXZQcm9qZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICBwcm9qZWN0c05hdlByb2plY3QuY2xhc3NMaXN0LmFkZCgndGFza0JhckNvbnRlbnRzJyk7XG5cbiAgICAgICAgICAgIC8vLy91c2VyIGlucHV0IHRpdGxlIG5lZWRlZCBoZXJlLi4uLiB1c2UgdGl0bGUgdG8gc3dpdGNoIGJldHdlZW4gdGFza3MgXG4gICAgICAgICAgICBwcm9qZWN0c05hdlByb2plY3QuZGF0YXNldC5wcm9qZWN0VGl0bGUgPSBgJHtib2FyZFtpXS50aXRsZX1gXG5cbiAgICAgICAgICAgIC8vLy91cGRhdGU6IHVzZSBwcm9qZWN0SW5kZXggdG8gc3dpdGNoIGJldHdlZW4gdGFza3MgXG4gICAgICAgICAgICBwcm9qZWN0c05hdlByb2plY3QuZGF0YXNldC5wcm9qZWN0SW5kZXggPSBpO1xuICAgICAgICAgXG4gICAgICAgICAgICAvLyAvLy8vcHJvamVjdFRhcmdldElEIGlzIHdoYXQgd2lsbCBiZSB1c2VkIHRvIHN3aXRjaCBiZXR3ZWVuIHRhc2tWaWV3IFxuICAgICAgICAgICAgLy8gcHJvamVjdHNOYXZQcm9qZWN0LmRhdGFzZXQucHJvamVjdFRhcmdldElEID0gYCR7aX1gO1xuXG5cbiAgICAgICAgICAgIHByb2plY3RzTmF2LmFwcGVuZENoaWxkKHByb2plY3RzTmF2UHJvamVjdCk7XG5cblxuICAgICAgICAgICAgY29uc3QgcHJvamVjdE5hdlByb2plY3RIVGhyZWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMycpO1xuICAgICAgICAgICAgcHJvamVjdE5hdlByb2plY3RIVGhyZWUudGV4dENvbnRlbnQgPSBgJHtib2FyZFtpXS50aXRsZX1gO1xuICAgICAgICAgICAgcHJvamVjdHNOYXZQcm9qZWN0LmFwcGVuZENoaWxkKHByb2plY3ROYXZQcm9qZWN0SFRocmVlKTtcblxuXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICB9XG4gICAgICAgIFxuICAgIFxuICAgICAgICBjb25zdCBhZGRQcm9qZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGFkZFByb2plY3QuY2xhc3NMaXN0LmFkZCgncHJvamVjdHNDb250ZW50Jyk7XG4gICAgICAgIHByb2plY3RzTmF2LmFwcGVuZENoaWxkKGFkZFByb2plY3QpO1xuICAgIFxuICAgICAgICBjb25zdCBhZGRQcm9qZWN0SW1nUE5HID0gbmV3IEltYWdlKCk7XG4gICAgICAgIGFkZFByb2plY3RJbWdQTkcuc3JjID0gYWRkUHJvamVjdEltZztcbiAgICAgICAgYWRkUHJvamVjdC5hcHBlbmRDaGlsZChhZGRQcm9qZWN0SW1nUE5HKTtcbiAgICBcbiAgICAgICAgY29uc3QgYWRkUHJvamVjdEhUaHJlZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gzJyk7XG4gICAgICAgIGFkZFByb2plY3RIVGhyZWUudGV4dENvbnRlbnQgPSAnQWRkIFByb2plY3QnO1xuICAgICAgICBhZGRQcm9qZWN0LmFwcGVuZENoaWxkKGFkZFByb2plY3RIVGhyZWUpO1xuXG4gICAgICAgIGFkZFByb2plY3QuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBvcGVuUHJvamVjdEZvcm0pO1xuICAgICAgICBcblxuXG4gICAgICAgIC8vLy9jcmVhdGUgVEFTS1ZJRVcvLy8vXG4gICAgICAgIGNvbnN0IHRhc2tWaWV3ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHRhc2tWaWV3LmNsYXNzTGlzdC5hZGQoJ3Rhc2tWaWV3Jyk7XG4gICAgICAgIGJvZHkuYXBwZW5kQ2hpbGQodGFza1ZpZXcpO1xuXG4gICAgICAgIC8vLy9zaG93aW5nIHdoaWNoIHByb2plY3QgaXMgYWN0aXZlXG4gICAgICAgIGNvbnN0IGFjdGl2ZVByb2plY3RIZWFkaW5nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDInKTtcbiAgICAgICAgYWN0aXZlUHJvamVjdEhlYWRpbmcuY2xhc3NMaXN0LmFkZCgnYWN0aXZlUHJvamVjdEhlYWRpbmcnKTtcbiAgICAgICAgY29uc29sZS5sb2coYHRoaXMgaXMgYWN0aXZlUHJvamVjdFRpdGxlOiAke2FjdGl2ZVByb2plY3RUaXRsZX1gKTtcbiAgICAgICAgXG4gICAgICAgIGFjdGl2ZVByb2plY3RIZWFkaW5nLnRleHRDb250ZW50ID0gYWN0aXZlUHJvamVjdFRpdGxlO1xuICAgICAgICB0YXNrVmlldy5hcHBlbmRDaGlsZChhY3RpdmVQcm9qZWN0SGVhZGluZyk7XG5cblxuICAgICAgICAvLy8vdGFza3MgXG4gICAgICAgIGNvbnN0IHRhc2tzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbmF2Jyk7IFxuICAgICAgICB0YXNrcy5jbGFzc0xpc3QuYWRkKCd0YXNrcycpO1xuICAgICAgICB0YXNrVmlldy5hcHBlbmRDaGlsZCh0YXNrcyk7XG5cbiAgICAgICAgXG4gICAgICAgIC8vLy9jcmVhdGUgdGFza3MgbGlzdCBcbiAgICAgICAgdG9Eb0xpc3QuZ2V0QWN0aXZlUHJvamVjdFRhc2tzKCkuZm9yRWFjaCgocHJvamVjdFRhc2spID0+IHtcblxuICAgICAgICAgICAgLy8vL2NyZWF0ZSB0YXNrIFxuICAgICAgICAgICAgY29uc3QgdGFzayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgdGFzay5jbGFzc0xpc3QuYWRkKCd0YXNrJyk7XG4gICAgICAgICAgICB0YXNrLmRhdGFzZXQudGFza0luZGV4ID0gcHJvamVjdFRhc2sudGFza0luZGV4O1xuICAgICAgICAgICAgdGFzay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRhc2tDbGljayk7XG4gICAgICAgICAgICB0YXNrcy5hcHBlbmRDaGlsZCh0YXNrKTtcblxuICAgICAgICAgICAgY29uc3QgY2hlY2tNYXJrSW1nUE5HID0gbmV3IEltYWdlKCk7ICAgICAgICAgICAgXG4gICAgICAgICAgICBjaGVja01hcmtJbWdQTkcuc3JjID0gY2hlY2tNYXJrSW1nO1xuICAgICAgICAgICAgY2hlY2tNYXJrSW1nUE5HLmNsYXNzTGlzdC5hZGQoJ2NoZWNrTWFya0ltZ1BORycpO1xuICAgICAgICAgICAgLy8gY2hlY2tNYXJrSW1nUE5HLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICdyZWQnO1xuXG4gICAgICAgICAgICB0YXNrLmFwcGVuZENoaWxkKGNoZWNrTWFya0ltZ1BORyk7XG5cbiAgICAgICAgICAgIGNvbnN0IHRhc2tUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gzJyk7XG4gICAgICAgICAgICB0YXNrVGl0bGUuY2xhc3NMaXN0LmFkZCgndGFza1RpdGxlJyk7XG4gICAgICAgICAgICB0YXNrVGl0bGUudGV4dENvbnRlbnQgPSBwcm9qZWN0VGFzay50aXRsZTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKHByb2plY3RUYXNrLmdldFByaW9yaXR5KCkgPT09ICdwMScpIHtcbiAgICAgICAgICAgICAgICB0YXNrVGl0bGUuc3R5bGUuYmFja2dyb3VuZENvbG9yID0ncmVkJztcbiAgICAgICAgICAgIH0gICBlbHNlIGlmIChwcm9qZWN0VGFzay5nZXRQcmlvcml0eSgpID09PSAncDInKSB7XG4gICAgICAgICAgICAgICAgdGFza1RpdGxlLnN0eWxlLmJhY2tncm91bmRDb2xvciA9J29yYW5nZSc7XG4gICAgICAgICAgICB9ICAgZWxzZSBpZiAocHJvamVjdFRhc2suZ2V0UHJpb3JpdHkoKSA9PT0gJ3AzJykge1xuICAgICAgICAgICAgICAgIHRhc2tUaXRsZS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSdza3libHVlJztcbiAgICAgICAgICAgIH0gICBlbHNlIGlmIChwcm9qZWN0VGFzay5nZXRQcmlvcml0eSgpID09PSAncDQnKSB7XG4gICAgICAgICAgICAgICAgdGFza1RpdGxlLnN0eWxlLmJhY2tncm91bmRDb2xvciA9J3doaXRlJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIHRhc2suYXBwZW5kQ2hpbGQodGFza1RpdGxlKTtcblxuICAgICAgICAgICAgY29uc3QgdGFza0R1ZURhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgIHRhc2tEdWVEYXRlLmNsYXNzTGlzdC5hZGQoJ3Rhc2tEdWVEYXRlJyk7XG4gICAgICAgICAgICB0YXNrRHVlRGF0ZS50ZXh0Q29udGVudCA9IHByb2plY3RUYXNrLmR1ZURhdGU7XG4gICAgICAgICAgICB0YXNrLmFwcGVuZENoaWxkKHRhc2tEdWVEYXRlKTtcblxuICAgICAgICAgICAgdGFzay5kYXRhc2V0LnByaW9yaXR5ID0gcHJvamVjdFRhc2sucHJpb3JpdHk7XG5cbiAgICAgICAgICAgIGNvbnN0IHRhc2tEZXNjcmlwdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICAgICAgICAgIHRhc2tEZXNjcmlwdGlvbi5jbGFzc0xpc3QuYWRkKCd0YXNrRGVzY3JpcHRpb24nKTtcbiAgICAgICAgICAgIHRhc2tEZXNjcmlwdGlvbi50ZXh0Q29udGVudCA9IHByb2plY3RUYXNrLmRlc2NyaXB0aW9uO1xuICAgICAgICAgICAgdGFzay5hcHBlbmRDaGlsZCh0YXNrRGVzY3JpcHRpb24pO1xuICAgICAgICAgICAgXG5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gY29uc3QgcHJpb3JpdHkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgIC8vIHByaW9yaXR5LmNsYXNzTGlzdC5hZGQoJ3ByaW9yaXR5Jyk7XG4gICAgICAgICAgICAvLyBwcmlvcml0eS50ZXh0Q29udGVudCA9IGFjdGl2ZVRhc2sucHJpb3JpdHk7IFxuICAgICAgICAgICAgLy8gdGFzay5hcHBlbmRDaGlsZChwcmlvcml0eSk7XG5cbiAgICAgICAgICAgIC8vIGNvbnN0IGRlc2NyaXB0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICAvLyBkZXNjcmlwdGlvbi5jbGFzc0xpc3QuYWRkKCdkZXNjcmlwdGlvbicpO1xuICAgICAgICAgICAgLy8gZGVzY3JpcHRpb24udGV4dENvbnRlbnQgPSBhY3RpdmVUYXNrLmRlc2NyaXB0aW9uO1xuICAgICAgICAgICAgLy8gdGFzay5hcHBlbmRDaGlsZChkZXNjcmlwdGlvbik7XG5cblxuXG4gICAgICAgIH0pXG5cbiAgICAgICBcbiAgICAgICAgLy8vL2NyZWF0ZSBhZGRUYXNrIGRpdlxuXG4gICAgICAgIGNvbnN0IGFkZFRhc2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgYWRkVGFzay5jbGFzc0xpc3QuYWRkKCdhZGRUYXNrJyk7XG4gICAgICAgIGFkZFRhc2sudGV4dENvbnRlbnQgPSAnKyBBZGQgVGFzayc7XG4gICAgICAgIHRhc2tzLmFwcGVuZENoaWxkKGFkZFRhc2spO1xuXG4gICAgICAgIGFkZFRhc2suYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBvcGVuVGFza0Zvcm0pO1xuXG5cblxuICAgICAgICAvLy8vY3JlYXRlIGZvb3RlclxuICAgICAgICBjb25zdCBmb290ZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmb290ZXInKTtcbiAgICAgICAgYm9keS5hcHBlbmRDaGlsZChmb290ZXIpO1xuICAgIFxuICAgICAgICBjb25zdCBmb290ZXJIVGhyZWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMycpO1xuICAgICAgICBmb290ZXJIVGhyZWUudGV4dENvbnRlbnQgPSAndGhpcyBpcyBhIGZvb3Rlcic7XG4gICAgICAgIGZvb3Rlci5hcHBlbmRDaGlsZChmb290ZXJIVGhyZWUpO1xuXG5cbiAgICAgICAgLy8vL2NyZWF0ZSB1c2VyRm9ybSAtIGFkZHByb2plY3RcbiAgICAgICAgY29uc3QgYWRkUHJvamVjdEZvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgYWRkUHJvamVjdEZvcm0uaWQgPSAnYWRkUHJvamVjdEZvcm0nO1xuICAgICAgICBib2R5LmFwcGVuZENoaWxkKGFkZFByb2plY3RGb3JtKTtcblxuICAgICAgICBjb25zdCBhZGRQcm9qZWN0Rm9ybVVzZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmb3JtJyk7XG4gICAgICAgIGFkZFByb2plY3RGb3JtVXNlci5jbGFzc0xpc3QuYWRkKCdhZGRQcm9qZWN0Rm9ybVVzZXInKTtcbiAgICAgICAgLy8gYWRkUHJvamVjdEZvcm1Vc2VyLnN0eWxlLmhlaWdodCA9ICcxMDAlJztcbiAgICAgICAgYWRkUHJvamVjdEZvcm0uYXBwZW5kQ2hpbGQoYWRkUHJvamVjdEZvcm1Vc2VyKTtcblxuICAgICAgICBjb25zdCBhZGRQcm9qZWN0Rm9ybVVzZXJIZWFkaW5nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGFkZFByb2plY3RGb3JtVXNlckhlYWRpbmcuY2xhc3NMaXN0LmFkZCgnYWRkUHJvamVjdEZvcm1Vc2VySGVhZGluZycpO1xuICAgICAgICBhZGRQcm9qZWN0Rm9ybVVzZXIuYXBwZW5kQ2hpbGQoYWRkUHJvamVjdEZvcm1Vc2VySGVhZGluZyk7XG4gICAgICAgIFxuICAgICAgICBjb25zdCBhZGRQcm9qZWN0Rm9ybVVzZXJIZWFkaW5nSFR3byA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gyJyk7XG4gICAgICAgIGFkZFByb2plY3RGb3JtVXNlckhlYWRpbmdIVHdvLnRleHRDb250ZW50ID0gJ0FkZCBQcm9qZWN0JztcbiAgICAgICAgYWRkUHJvamVjdEZvcm1Vc2VySGVhZGluZy5hcHBlbmRDaGlsZChhZGRQcm9qZWN0Rm9ybVVzZXJIZWFkaW5nSFR3byk7XG5cbiAgICAgICAgY29uc3QgYWRkUHJvamVjdEZvcm1Vc2VyQm9keSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBhZGRQcm9qZWN0Rm9ybVVzZXJCb2R5LmNsYXNzTGlzdC5hZGQoJ2FkZFByb2plY3RGb3JtVXNlckJvZHknKTtcbiAgICAgICAgYWRkUHJvamVjdEZvcm1Vc2VyLmFwcGVuZENoaWxkKGFkZFByb2plY3RGb3JtVXNlckJvZHkpO1xuXG4gICAgICAgIGNvbnN0IGFkZFByb2plY3RGb3JtVXNlclVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndWwnKTtcbiAgICAgICAgYWRkUHJvamVjdEZvcm1Vc2VyVWwuY2xhc3NMaXN0LmFkZCgnYWRkUHJvamVjdEZvcm1Vc2VyVWwnKTtcbiAgICAgICAgYWRkUHJvamVjdEZvcm1Vc2VyQm9keS5hcHBlbmRDaGlsZChhZGRQcm9qZWN0Rm9ybVVzZXJVbCk7XG5cbiAgICAgICAgY29uc3QgYWRkUHJvamVjdEZvcm1Vc2VyTGlUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gICAgICAgIGFkZFByb2plY3RGb3JtVXNlckxpVGl0bGUuY2xhc3NMaXN0LmFkZCgnYWRkUHJvamVjdEZvcm1Vc2VyTGlUaXRsZScpXG4gICAgICAgIGFkZFByb2plY3RGb3JtVXNlclVsLmFwcGVuZENoaWxkKGFkZFByb2plY3RGb3JtVXNlckxpVGl0bGUpO1xuXG4gICAgICAgIGNvbnN0IGFkZFByb2plY3RGb3JtVXNlclRpdGxlTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgICAgICBhZGRQcm9qZWN0Rm9ybVVzZXJUaXRsZUxhYmVsLnNldEF0dHJpYnV0ZSgnZm9yJywgJ3Byb2plY3RUaXRsZScpO1xuICAgICAgICBhZGRQcm9qZWN0Rm9ybVVzZXJUaXRsZUxhYmVsLnRleHRDb250ZW50ID0gJ1Byb2plY3QgVGl0bGUgJztcbiAgICAgICAgYWRkUHJvamVjdEZvcm1Vc2VyTGlUaXRsZS5hcHBlbmRDaGlsZChhZGRQcm9qZWN0Rm9ybVVzZXJUaXRsZUxhYmVsKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgY29uc3QgYWRkUHJvamVjdEZvcm1Vc2VyVGl0bGVJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgICAgIGFkZFByb2plY3RGb3JtVXNlclRpdGxlSW5wdXQuY2xhc3NMaXN0LmFkZCgnYWRkUHJvamVjdEZvcm1UaXRsZUlucHV0Jyk7XG4gICAgICAgIGFkZFByb2plY3RGb3JtVXNlclRpdGxlSW5wdXQuc2V0QXR0cmlidXRlKCd0eXBlJywgJ3RleHQnKTsgIFxuICAgICAgICBhZGRQcm9qZWN0Rm9ybVVzZXJUaXRsZUlucHV0LnNldEF0dHJpYnV0ZSgnbmFtZScsICdwcm9qZWN0VGl0bGUnKTtcbiAgIFxuICAgICAgICBhZGRQcm9qZWN0Rm9ybVVzZXJMaVRpdGxlLmFwcGVuZENoaWxkKGFkZFByb2plY3RGb3JtVXNlclRpdGxlSW5wdXQpO1xuXG5cbiAgICAgICAgY29uc3QgYWRkUHJvamVjdEZvcm1Vc2VyQnV0dG9ucyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBhZGRQcm9qZWN0Rm9ybVVzZXJCdXR0b25zLmNsYXNzTGlzdC5hZGQoJ2FkZFByb2plY3RGb3JtVXNlckJ1dHRvbnMnKTtcbiAgICAgICAgYWRkUHJvamVjdEZvcm0uYXBwZW5kQ2hpbGQoYWRkUHJvamVjdEZvcm1Vc2VyQnV0dG9ucyk7XG5cbiAgICAgICAgY29uc3QgYWRkUHJvamVjdEZvcm1Vc2VyQ2FuY2VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgICAgIGFkZFByb2plY3RGb3JtVXNlckNhbmNlbC50ZXh0Q29udGVudCA9ICdDYW5jZWwnO1xuICAgICAgICBhZGRQcm9qZWN0Rm9ybVVzZXJCdXR0b25zLmFwcGVuZENoaWxkKGFkZFByb2plY3RGb3JtVXNlckNhbmNlbCk7XG4gICAgICAgIGFkZFByb2plY3RGb3JtVXNlckNhbmNlbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGNhbmNlbFByb2plY3RGb3JtKTtcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBjb25zdCBhZGRQcm9qZWN0Rm9ybVVzZXJBZGQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICAgICAgYWRkUHJvamVjdEZvcm1Vc2VyQWRkLnRleHRDb250ZW50ID0gJ0FkZCc7XG4gICAgICAgIGFkZFByb2plY3RGb3JtVXNlckJ1dHRvbnMuYXBwZW5kQ2hpbGQoYWRkUHJvamVjdEZvcm1Vc2VyQWRkKTtcbiAgICAgICAgYWRkUHJvamVjdEZvcm1Vc2VyQWRkLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgcHJvamVjdEZvcm1TdWJtaXQpO1xuXG5cblxuICAgICAgICAvLy8vY3JlYXRlIHVzZXJGb3JtIC0gYWRkVGFza1xuICAgICAgICBjb25zdCBhZGRUYXNrRm9ybSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBhZGRUYXNrRm9ybS5pZCA9ICdhZGRUYXNrRm9ybSc7XG4gICAgICAgIGJvZHkuYXBwZW5kQ2hpbGQoYWRkVGFza0Zvcm0pO1xuXG4gICAgICAgIGNvbnN0IGFkZFRhc2tGb3JtVXNlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2Zvcm0nKTtcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyLmNsYXNzTGlzdC5hZGQoJ2FkZFRhc2tGb3JtVXNlcicpO1xuICAgICAgICAvLyBhZGRUYXNrRm9ybVVzZXIuc3R5bGUuaGVpZ2h0ID0gJzEwMCUnO1xuICAgICAgICBhZGRUYXNrRm9ybS5hcHBlbmRDaGlsZChhZGRUYXNrRm9ybVVzZXIpO1xuXG4gICAgICAgIGNvbnN0IGFkZFRhc2tGb3JtVXNlckhlYWRpbmcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VySGVhZGluZy5jbGFzc0xpc3QuYWRkKCdhZGRUYXNrRm9ybVVzZXJIZWFkaW5nJyk7XG4gICAgICAgIGFkZFRhc2tGb3JtVXNlci5hcHBlbmRDaGlsZChhZGRUYXNrRm9ybVVzZXJIZWFkaW5nKTtcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IGFkZFRhc2tGb3JtVXNlckhlYWRpbmdIVHdvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDInKTtcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VySGVhZGluZ0hUd28udGV4dENvbnRlbnQgPSAnVGFzayBJbmZvJztcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VySGVhZGluZy5hcHBlbmRDaGlsZChhZGRUYXNrRm9ybVVzZXJIZWFkaW5nSFR3byk7XG5cbiAgICAgICAgY29uc3QgYWRkVGFza0Zvcm1Vc2VyQm9keSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBhZGRUYXNrRm9ybVVzZXJCb2R5LmNsYXNzTGlzdC5hZGQoJ2FkZFRhc2tGb3JtVXNlckJvZHknKTtcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyLmFwcGVuZENoaWxkKGFkZFRhc2tGb3JtVXNlckJvZHkpO1xuXG4gICAgICAgIGNvbnN0IGFkZFRhc2tGb3JtVXNlclVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndWwnKTtcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyVWwuY2xhc3NMaXN0LmFkZCgnYWRkVGFza0Zvcm1Vc2VyVWwnKTtcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyQm9keS5hcHBlbmRDaGlsZChhZGRUYXNrRm9ybVVzZXJVbCk7XG5cbiAgICAgICAgY29uc3QgYWRkVGFza0Zvcm1Vc2VyTGlUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gICAgICAgIGFkZFRhc2tGb3JtVXNlckxpVGl0bGUuY2xhc3NMaXN0LmFkZCgnYWRkVGFza0Zvcm1Vc2VyTGknKVxuICAgICAgICBhZGRUYXNrRm9ybVVzZXJVbC5hcHBlbmRDaGlsZChhZGRUYXNrRm9ybVVzZXJMaVRpdGxlKTtcblxuICAgICAgICBjb25zdCBhZGRUYXNrRm9ybVVzZXJUaXRsZUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyVGl0bGVMYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsICd0YXNrVGl0bGUnKTtcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyVGl0bGVMYWJlbC50ZXh0Q29udGVudCA9ICdUYXNrIFRpdGxlICc7XG4gICAgICAgIGFkZFRhc2tGb3JtVXNlckxpVGl0bGUuYXBwZW5kQ2hpbGQoYWRkVGFza0Zvcm1Vc2VyVGl0bGVMYWJlbCk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgIGNvbnN0IGFkZFRhc2tGb3JtVXNlclRpdGxlSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgICAgICBhZGRUYXNrRm9ybVVzZXJUaXRsZUlucHV0LmNsYXNzTGlzdC5hZGQoJ2FkZFRhc2tGb3JtSW5wdXQnKTtcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyVGl0bGVJbnB1dC5jbGFzc0xpc3QuYWRkKCdhZGRUYXNrRm9ybVRpdGxlSW5wdXQnKTtcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyVGl0bGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAndGV4dCcpOyAgXG4gICAgICAgIGFkZFRhc2tGb3JtVXNlclRpdGxlSW5wdXQuc2V0QXR0cmlidXRlKCdpZCcsICd0YXNrVGl0bGUnKTtcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyTGlUaXRsZS5hcHBlbmRDaGlsZChhZGRUYXNrRm9ybVVzZXJUaXRsZUlucHV0KTtcblxuICAgICAgICBjb25zdCBhZGRUYXNrRm9ybVVzZXJMaURlc2NyaXB0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKTtcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyTGlEZXNjcmlwdGlvbi5jbGFzc0xpc3QuYWRkKCdhZGRUYXNrRm9ybVVzZXJMaScpXG4gICAgICAgIGFkZFRhc2tGb3JtVXNlclVsLmFwcGVuZENoaWxkKGFkZFRhc2tGb3JtVXNlckxpRGVzY3JpcHRpb24pO1xuXG4gICAgICAgIGNvbnN0IGFkZFRhc2tGb3JtVXNlckRlc2NyaXB0aW9uTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgICAgICBhZGRUYXNrRm9ybVVzZXJEZXNjcmlwdGlvbkxhYmVsLnNldEF0dHJpYnV0ZSgnZm9yJywgJ3Rhc2tEZXNjcmlwdGlvbicpO1xuICAgICAgICBhZGRUYXNrRm9ybVVzZXJEZXNjcmlwdGlvbkxhYmVsLnRleHRDb250ZW50ID0gJ1Rhc2sgRGVzY3JpcHRpb24gJztcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyTGlEZXNjcmlwdGlvbi5hcHBlbmRDaGlsZChhZGRUYXNrRm9ybVVzZXJEZXNjcmlwdGlvbkxhYmVsKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgY29uc3QgYWRkVGFza0Zvcm1Vc2VyRGVzY3JpcHRpb25JbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgICAgIGFkZFRhc2tGb3JtVXNlckRlc2NyaXB0aW9uSW5wdXQuY2xhc3NMaXN0LmFkZCgnYWRkVGFza0Zvcm1JbnB1dCcpO1xuICAgICAgICBhZGRUYXNrRm9ybVVzZXJEZXNjcmlwdGlvbklucHV0LmNsYXNzTGlzdC5hZGQoJ2FkZFRhc2tGb3JtRGVzY3JpcHRpb25JbnB1dCcpO1xuICAgICAgICBhZGRUYXNrRm9ybVVzZXJEZXNjcmlwdGlvbklucHV0LnNldEF0dHJpYnV0ZSgndHlwZScsICd0ZXh0Jyk7ICBcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyRGVzY3JpcHRpb25JbnB1dC5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3Rhc2tEZXNjcmlwdGlvbicpO1xuICAgICAgICBhZGRUYXNrRm9ybVVzZXJMaURlc2NyaXB0aW9uLmFwcGVuZENoaWxkKGFkZFRhc2tGb3JtVXNlckRlc2NyaXB0aW9uSW5wdXQpO1xuXG4gICAgICAgIGNvbnN0IGFkZFRhc2tGb3JtVXNlckxpRHVlRGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gICAgICAgIGFkZFRhc2tGb3JtVXNlckxpRHVlRGF0ZS5jbGFzc0xpc3QuYWRkKCdhZGRUYXNrRm9ybVVzZXJMaScpXG4gICAgICAgIGFkZFRhc2tGb3JtVXNlclVsLmFwcGVuZENoaWxkKGFkZFRhc2tGb3JtVXNlckxpRHVlRGF0ZSk7XG5cbiAgICAgICAgY29uc3QgYWRkVGFza0Zvcm1Vc2VyRHVlRGF0ZUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyRHVlRGF0ZUxhYmVsLnNldEF0dHJpYnV0ZSgnZm9yJywgJ3Rhc2tEdWVEYXRlJyk7XG4gICAgICAgIGFkZFRhc2tGb3JtVXNlckR1ZURhdGVMYWJlbC50ZXh0Q29udGVudCA9ICdUYXNrIER1ZURhdGUgJztcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyTGlEdWVEYXRlLmFwcGVuZENoaWxkKGFkZFRhc2tGb3JtVXNlckR1ZURhdGVMYWJlbCk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgIGNvbnN0IGFkZFRhc2tGb3JtVXNlckR1ZURhdGVJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgICAgIGFkZFRhc2tGb3JtVXNlckR1ZURhdGVJbnB1dC5jbGFzc0xpc3QuYWRkKCdhZGRUYXNrRm9ybUlucHV0Jyk7XG4gICAgICAgIGFkZFRhc2tGb3JtVXNlckR1ZURhdGVJbnB1dC5jbGFzc0xpc3QuYWRkKCdhZGRUYXNrRm9ybUR1ZURhdGVJbnB1dCcpO1xuICAgICAgICBhZGRUYXNrRm9ybVVzZXJEdWVEYXRlSW5wdXQuc2V0QXR0cmlidXRlKCd0eXBlJywgJ3RleHQnKTsgIFxuICAgICAgICBhZGRUYXNrRm9ybVVzZXJEdWVEYXRlSW5wdXQuc2V0QXR0cmlidXRlKCdpZCcsICd0YXNrRHVlRGF0ZScpO1xuICAgICAgICBpZiAoYWN0aXZlUHJvamVjdFRpdGxlID09PSAndG9kYXknKSB7XG4gICAgICAgICAgICBhZGRUYXNrRm9ybVVzZXJEdWVEYXRlSW5wdXQudmFsdWUgPSBuZXcgRGF0ZSgpO1xuICAgICAgICB9XG4gICAgICAgIGFkZFRhc2tGb3JtVXNlckxpRHVlRGF0ZS5hcHBlbmRDaGlsZChhZGRUYXNrRm9ybVVzZXJEdWVEYXRlSW5wdXQpO1xuXG5cbiAgICAgICAgXG4gICAgICAgIGNvbnN0IGFkZFRhc2tGb3JtVXNlckJ1dHRvbnMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyQnV0dG9ucy5jbGFzc0xpc3QuYWRkKCdhZGRUYXNrRm9ybVVzZXJCdXR0b25zJyk7XG4gICAgICAgIGFkZFRhc2tGb3JtLmFwcGVuZENoaWxkKGFkZFRhc2tGb3JtVXNlckJ1dHRvbnMpO1xuXG4gICAgICAgIGNvbnN0IGFkZFRhc2tGb3JtVXNlclByaW9yaXR5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGFkZFRhc2tGb3JtVXNlclByaW9yaXR5LmNsYXNzTGlzdC5hZGQoJ2FkZFRhc2tGb3JtVXNlclByaW9yaXR5JylcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyQnV0dG9ucy5hcHBlbmRDaGlsZChhZGRUYXNrRm9ybVVzZXJQcmlvcml0eSk7XG5cbiAgICAgICAgY29uc3QgYWRkVGFza0Zvcm1Vc2VyUHJpb3JpdHlIZWFkaW5nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGFkZFRhc2tGb3JtVXNlclByaW9yaXR5LmFwcGVuZENoaWxkKGFkZFRhc2tGb3JtVXNlclByaW9yaXR5SGVhZGluZyk7XG5cbiAgICAgICAgY29uc3QgYWRkVGFza0Zvcm1Vc2VyUHJpb3JpdHlIZWFkaW5nTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgICAgICBhZGRUYXNrRm9ybVVzZXJQcmlvcml0eUhlYWRpbmdMYWJlbC50ZXh0Q29udGVudCA9ICdQcmlvcml0eSc7XG4gICAgICAgIGFkZFRhc2tGb3JtVXNlclByaW9yaXR5SGVhZGluZy5hcHBlbmRDaGlsZChhZGRUYXNrRm9ybVVzZXJQcmlvcml0eUhlYWRpbmdMYWJlbCk7XG5cbiAgICAgICAgY29uc3QgYWRkVGFza0Zvcm1Vc2VyUHJpb3JpdHlGbGFncyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBhZGRUYXNrRm9ybVVzZXJQcmlvcml0eS5hcHBlbmRDaGlsZChhZGRUYXNrRm9ybVVzZXJQcmlvcml0eUZsYWdzKTtcblxuICAgICAgICBcbiAgICAgICAgZm9yIChsZXQgaT0xOyBpPDU7IGkrKykge1xuICAgICAgICAgICAgY29uc3QgZmxhZ0ltZ1BORyA9IG5ldyBJbWFnZSgpO1xuICAgICAgICAgICAgZmxhZ0ltZ1BORy5zcmMgPSBmbGFnSW1nO1xuICAgICAgICAgICAgZmxhZ0ltZ1BORy5jbGFzc0xpc3QuYWRkKCdmbGFnSW1nUE5HJyk7XG4gICAgICAgICAgICBmbGFnSW1nUE5HLmNsYXNzTGlzdC5hZGQoYGZsYWdJbWdQTkcke2l9YCk7XG4gICAgICAgICAgICBmbGFnSW1nUE5HLmRhdGFzZXQucHJpb3JpdHkgPSBgcCR7aX1gO1xuICAgICAgICAgICAgZmxhZ0ltZ1BORy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHNlbGVjdFByaW9yaXR5Q2xpY2spO1xuICAgICAgICAgICAgYWRkVGFza0Zvcm1Vc2VyUHJpb3JpdHlGbGFncy5hcHBlbmRDaGlsZChmbGFnSW1nUE5HKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRhc2tQcmlvcml0eSA9ICdwNCdcblxuIFxuICBcblxuICAgICAgICBjb25zdCBhZGRUYXNrRm9ybVVzZXJDYW5jZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyQ2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCc7XG4gICAgICAgIGFkZFRhc2tGb3JtVXNlckJ1dHRvbnMuYXBwZW5kQ2hpbGQoYWRkVGFza0Zvcm1Vc2VyQ2FuY2VsKTtcblxuICAgICAgICBhZGRUYXNrRm9ybVVzZXJDYW5jZWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBjYW5jZWxUYXNrRm9ybSk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBjb25zdCBhZGRUYXNrRm9ybVVzZXJBZGQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyQWRkLnRleHRDb250ZW50ID0gJ1N1Ym1pdCc7XG4gICAgICAgIGFkZFRhc2tGb3JtVXNlckJ1dHRvbnMuYXBwZW5kQ2hpbGQoYWRkVGFza0Zvcm1Vc2VyQWRkKTtcbiAgICAgICAgXG4gICAgICAgIGFkZFRhc2tGb3JtVXNlckFkZC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHN1Ym1pdFRhc2tGb3JtKTtcblxuXG5cblxuXG4gICAgICAgIC8vLy9hZGRpbmcgc3dpdGNoUHJvamVjdCBmdW5jdGlvbiB0byBlYWNoIGxpbmUgaXRlbSBcbiAgICAgICAgY29uc3QgdGFza0JhckNvbnRlbnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnRhc2tCYXJDb250ZW50cycpO1xuICAgICAgICB0YXNrQmFyQ29udGVudHMuZm9yRWFjaCgodGFza0JhckNvbnRlbnQpID0+IHtcbiAgICAgICAgICAgIHRhc2tCYXJDb250ZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc3dpdGNoQWN0aXZlUHJvamVjdENsaWNrKVxuICAgICAgICB9KVxuICAgICAgICBjb25zb2xlLmxvZygnc3dpdGNoQWN0aXZlUHJvamVjdENsaWNrIGV2ZW50IGhhcyBiZWVuIGFkZGVkJylcblxuXG4gICAgICAgIC8vLy9oaWdobGlnaHRpbmcgYWN0aXZlUHJvamVjdCBcbiAgICAgICAgdGFza0JhckNvbnRlbnRzLmZvckVhY2goKHRhc2tCYXJDb250ZW50KSA9PiB7XG4gICAgICAgICAgICBpZiAodGFza0JhckNvbnRlbnQuZGF0YXNldC5wcm9qZWN0VGl0bGUgPT09IGFjdGl2ZVByb2plY3RUaXRsZSkge1xuICAgICAgICAgICAgICAgIHRhc2tCYXJDb250ZW50LmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZVByb2plY3QnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgfVxuXG5cbiAgICAvLyAvLy8vaW5ib3ggZ2V0cyBhY3RpdmVQcm9qZWN0IGJ5IGRlZmF1bHRcbiAgICAvLyBjb25zdCBpbmJveCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLXByb2plY3RUaXRsZT1cImluYm94XCJdJyk7XG4gICAgLy8gaW5ib3guY2xhc3NMaXN0LmFkZCgnYWN0aXZlUHJvamVjdCcpXG4gICAgXG5cbiAgICBmdW5jdGlvbiBzd2l0Y2hBY3RpdmVQcm9qZWN0Q2xpY2soZSkge1xuICAgICAgICBjb25zb2xlLmxvZyhgYmVsb3cgaXMgc3dpdGNoQWN0aXZlUHJvamVjdCB0YXJnZXRgKTtcbiAgICAgICAgY29uc29sZS5sb2coZS50YXJnZXQpO1xuICAgICAgICBcbiAgICAgICAgLy8vL2dyYWIgdGhlIHRpdGxlIGZyb20gdGhlIHByb2plY3QgdGhhdCB3YXMgY2xpY2tlZCBvbiBcbiAgICAgICAgY29uc3Qgc2VsZWN0ZWRQcm9qZWN0SW5kZXggPSBlLnRhcmdldC5kYXRhc2V0LnByb2plY3RJbmRleDtcbiAgICAgICAgY29uc29sZS5sb2coYHRoaXMgaXMgc2VsZWN0ZWRQcm9qZWN0SW5kZXg6JHtzZWxlY3RlZFByb2plY3RJbmRleH0gYCk7XG4gICAgICAgIFxuICAgICAgICAvLy8vaWYgd2hhdCB3YXMgY2xpY2tlZCBvbiBkb2Vzbid0IGhhdmUgcHJvamVjdFRpdGxlLCByZXR1cm4gXG4gICAgICAgIGlmICghc2VsZWN0ZWRQcm9qZWN0SW5kZXgpIHJldHVybjtcblxuICAgICAgICB0b0RvTGlzdC5zd2l0Y2hBY3RpdmVQcm9qZWN0KE51bWJlcihzZWxlY3RlZFByb2plY3RJbmRleCkpO1xuXG4gICAgICAgIHVwZGF0ZVNjcmVlbigpO1xuXG4gICAgfVxuXG5cbiAgICBjb25zdCBvcGVuUHJvamVjdEZvcm0gPSBmdW5jdGlvbigpIHtcbiAgICAgICAgY29uc3QgYWRkUHJvamVjdEZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYWRkUHJvamVjdEZvcm0nKTtcbiAgICAgICAgYWRkUHJvamVjdEZvcm0uc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG5cbiAgICB9XG5cbiAgICAvLyBmdW5jdGlvbiBvcGVuUHJvamVjdEZvcm0oKSB7XG4gICAgLy8gICAgIGNvbnN0IGFkZFByb2plY3RGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2FkZFByb2plY3RGb3JtJyk7XG4gICAgLy8gICAgIGFkZFByb2plY3RGb3JtLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgIC8vIH1cblxuXG4gICAgZnVuY3Rpb24gY2FuY2VsUHJvamVjdEZvcm0oKSB7XG4gICAgICAgIFxuICAgICAgICAvLy8vY2xlYXJpbmcgYW55IGlucHV0IG1hZGUgXG4gICAgICAgIGNvbnN0IGFkZFByb2plY3RGb3JtVXNlclRpdGxlSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkUHJvamVjdEZvcm1UaXRsZUlucHV0JylcbiAgICAgICAgYWRkUHJvamVjdEZvcm1Vc2VyVGl0bGVJbnB1dC52YWx1ZT0nJztcblxuICAgICAgICBjb25zdCBhZGRQcm9qZWN0Rm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNhZGRQcm9qZWN0Rm9ybScpO1xuICAgICAgICBhZGRQcm9qZWN0Rm9ybS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgIH1cblxuXG4gICAgZnVuY3Rpb24gcHJvamVjdEZvcm1TdWJtaXQoKSB7XG4gICAgICAgIGNvbnN0IGFkZFByb2plY3RGb3JtVXNlclRpdGxlSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkUHJvamVjdEZvcm1UaXRsZUlucHV0Jyk7XG4gICAgICAgIGNvbnN0IHByb2plY3RUaXRsZSA9IGFkZFByb2plY3RGb3JtVXNlclRpdGxlSW5wdXQudmFsdWU7XG5cbiAgICAgICAgdG9Eb0xpc3QuYWRkUHJvamVjdChwcm9qZWN0VGl0bGUpO1xuICAgICAgICB1cGRhdGVTY3JlZW4oKTsgICAgICAgIFxuICAgIH1cblxuICAgICAgICBcbiAgICBmdW5jdGlvbiBhZGRUYXNrKHRpdGxlLCBkdWVEYXRlLCBwcmlvcml0eSwgZGVzY3JpcHRpb24pIHtcbiAgICAgICAgdG9Eb0xpc3QuYWRkVGFzayh0aXRsZSwgZHVlRGF0ZSwgcHJpb3JpdHksIGRlc2NyaXB0aW9uKVxuXG4gICAgICAgIFxuICAgIH1cblxuXG5cbiAgICBmdW5jdGlvbiBvcGVuVGFza0Zvcm0oKSB7XG4gICAgICAgIGNvbnN0IGFkZFRhc2tGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2FkZFRhc2tGb3JtJyk7XG4gICAgICAgIGFkZFRhc2tGb3JtLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuXG4gICAgICAgIGNvbnNvbGUubG9nKGBhY3RpdmUgVGFzayB0YXNrIGluZGV4IGJlbG93YCk7XG4gICAgICAgIGNvbnNvbGUubG9nKHRvRG9MaXN0LmdldEFjdGl2ZVRhc2tUYXNrSW5kZXgoKSk7XG5cbiAgICAgICAgXG4gICAgICAgIGNvbnNvbGUubG9nKCF0b0RvTGlzdC5nZXRBY3RpdmVUYXNrKCkpO1xuXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAvLyBjb25zb2xlLmxvZyh0eXBlb2YodG9Eb0xpc3QuZ2V0QWN0aXZlVGFza1Rhc2tJbmRleCgpKSk7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKHR5cGVvZih0b0RvTGlzdC5nZXRUYXNrSW5kZXgoKSkpO1xuICAgICAgICAvLyBjb25zb2xlLmxvZyh0b0RvTGlzdC5nZXRBY3RpdmVUYXNrVGFza0luZGV4KCkpO1xuICAgICAgICAvLyBjb25zb2xlLmxvZyh0b0RvTGlzdC5nZXRUYXNrSW5kZXgoKSk7XG5cbiAgICAgICAgLy8gaWYgKHRvRG9MaXN0LmdldEFjdGl2ZVRhc2tUYXNrSW5kZXgoKSAhPT0gdG9Eb0xpc3QuZ2V0VGFza0luZGV4KCkpIHtcbiAgICAgICAgLy8gICAgIGNvbnNvbGUubG9nKGBidXR0YnV0dGApO1xuICAgICAgICAvLyB9XG4gICAgICAgIFxuICAgIH1cblxuICAgIFxuXG4gICAgZnVuY3Rpb24gZWRpdFRhc2tGb3JtU3VibWl0KCkge1xuICAgICAgICAvKlxuICAgICAgICBnZXQgYWN0aXZlVGFza1xuXG4gICAgICAgIDEuIGNvbnN0IHRhc2tUaXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGRUYXNrRm9ybVRpdGxlSW5wdXQnKS52YWx1ZTtcbiAgICAgICAgY29uc3QgdGFza0Rlc2NyaXB0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFkZFRhc2tGb3JtRGVzY3JpcHRpb25JbnB1dCcpLnZhbHVlO1xuICAgICAgICBjb25zdCB0YXNrRHVlRGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGRUYXNrRm9ybUR1ZURhdGVJbnB1dCcpLnZhbHVlO1xuXG4gICAgICAgICovXG4gICAgfVxuXG5cbiAgICBmdW5jdGlvbiBjYW5jZWxUYXNrRm9ybSgpIHtcbiAgICAgICAgY29uc3QgYWRkVGFza0Zvcm1JbnB1dHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYWRkVGFza0Zvcm1JbnB1dCcpO1xuXG4gICAgICAgIGZvciAobGV0IGFkZFRhc2tGb3JtSW5wdXQgb2YgYWRkVGFza0Zvcm1JbnB1dHMpIHtcbiAgICAgICAgICAgIGFkZFRhc2tGb3JtSW5wdXQudmFsdWUgPSAnJztcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGFkZFRhc2tGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2FkZFRhc2tGb3JtJyk7XG4gICAgICAgIGFkZFRhc2tGb3JtLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG5cbiAgICAgICAgcmVtb3ZlUHJpb3JpdHlGbGFnU3R5bGUoKTtcblxuICAgICAgICBhY3RpdmVUYXNrID0gXCJcIjtcblxuXG5cbiAgICB9XG5cblxuICAgIC8vLy90YXNrUHJpb3JpdHkgXG5cbiAgICBmdW5jdGlvbiBzZWxlY3RQcmlvcml0eUNsaWNrKGUpIHtcbiAgICAgICAgY29uc3Qgc2VsZWN0ZWRUYXNrUHJpb3JpdHkgPSBlLnRhcmdldC5kYXRhc2V0LnByaW9yaXR5O1xuICAgICAgICBjb25zb2xlLmxvZygnc2VsZWN0UHJpb3JpdHlDbGljayBydW5uaW5nJyk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgIGlmICghc2VsZWN0ZWRUYXNrUHJpb3JpdHkpIHJldHVyblxuXG4gICAgICAgIHRhc2tQcmlvcml0eSA9IHNlbGVjdGVkVGFza1ByaW9yaXR5O1xuXG5cbiAgICAgICAgcmVtb3ZlUHJpb3JpdHlGbGFnU3R5bGUoKTtcblxuICAgICAgICAvLy8vYWRkIGFjdGl2ZVByaW9yaXR5IGNsYXNzIFxuICAgICAgICBlLnRhcmdldC5jbGFzc0xpc3QuYWRkKCdhY3RpdmVQcmlvcml0eScpXG5cbiAgICB9XG5cblxuICAgIGZ1bmN0aW9uIHN1Ym1pdFRhc2tGb3JtKCkge1xuICAgICAgICAvKlxuICAgICAgICBpZiB0aGVyZSBpcyBhbiBhY3RpdmVUYXNrXG4gICAgICAgICAgICBlZGl0IGFjdGl2ZVRhc2tcblxuICAgICAgICBpZiBubyBhY3RpdmVUYXNrIChjcmVhdGluZyBuZXcgdGFzaylcbiAgICAgICAgICAgIHB1c2ggdG8gZW5kIG9mIGFjdGl2ZVByb2plY3QudGFza3MgXG4gICAgICAgICovXG4gICAgICAgIFxuXG4gICAgICAgIGxldCB0YXNrVGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkVGFza0Zvcm1UaXRsZUlucHV0JykudmFsdWU7XG4gICAgICAgIGxldCB0YXNrRGVzY3JpcHRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkVGFza0Zvcm1EZXNjcmlwdGlvbklucHV0JykudmFsdWU7XG4gICAgICAgIGxldCB0YXNrRHVlRGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGRUYXNrRm9ybUR1ZURhdGVJbnB1dCcpLnZhbHVlO1xuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIGlmICghdG9Eb0xpc3QuZ2V0QWN0aXZlVGFzaygpKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgbmV3IFRhc2sgYmVpbmcgY3JlYXRlZCEgbm90IGV4aXN0aW5nIHRhc2sgYCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGB0aGlzIGlzIHByaW9yaXR5OiAke3Rhc2tQcmlvcml0eX1gKTtcbiAgICAgICAgICAgXG4gICAgICAgICAgICB0b0RvTGlzdC5hZGRUYXNrKHRhc2tUaXRsZSwgdGFza0R1ZURhdGUsIHRhc2tQcmlvcml0eSwgdGFza0Rlc2NyaXB0aW9uKVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBjYW5jZWxUYXNrRm9ybSgpO1xuICAgICAgICAgICAgdXBkYXRlU2NyZWVuKCk7XG4gICAgICAgICAgICByZXR1cm4gXG4gICAgICAgIH0gICBlbHNlIGlmICh0b0RvTGlzdC5nZXRBY3RpdmVUYXNrKCkpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGBleGlzdGluZyB0YXNrIGhhcyBiZWVuIGNsaWNrZWRgKTtcblxuICAgICAgICAgICAgLy8gdGFza1RpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFkZFRhc2tGb3JtVGl0bGVJbnB1dCcpLnZhbHVlO1xuICAgICAgICAgICAgLy8gdGFza0Rlc2NyaXB0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFkZFRhc2tGb3JtRGVzY3JpcHRpb25JbnB1dCcpLnZhbHVlO1xuICAgICAgICAgICAgLy8gdGFza0R1ZURhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkVGFza0Zvcm1EdWVEYXRlSW5wdXQnKS52YWx1ZTtcblxuICAgICAgICAgICAgdG9Eb0xpc3QuZWRpdFRhc2tJbnB1dHModGFza1RpdGxlLCB0YXNrRHVlRGF0ZSwgdGFza1ByaW9yaXR5LCB0YXNrRGVzY3JpcHRpb24pO1xuICAgICAgICAgICAgY2FuY2VsVGFza0Zvcm0oKTtcbiAgICAgICAgICAgIHVwZGF0ZVNjcmVlbigpO1xuXG4gICAgICAgICAgICByZXR1cm4gXG4gICAgICAgICAgICBcbiAgICAgICAgfSAgICBcblxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHRhc2tDbGljayhlKSB7XG4gICAgICAgIHN3aXRjaEFjdGl2ZVRhc2soZSk7XG4gICAgICAgIG9wZW5FZGl0VGFza0Zvcm0oKVxuICAgIH1cblxuXG4gICAgZnVuY3Rpb24gc3dpdGNoQWN0aXZlVGFzayhlKSB7XG4gICAgICAgIC8qXG4gICAgICAgIDEuIGdldCBBY3RpdmUgcHJvamVjdFxuICAgICAgICAyLiBmb3IuLi4gdGFza3MsIFxuICAgICAgICAgICAgaWYgdGFzay5JbmRleCA9PT0gc2VsZWN0ZWRUYXNrSW5kZXg7XG4gICAgICAgICAgICBjaGFuZ2UgYWN0aXZlIFRhc2sgXG5cbiAgICAgICAgKi9cblxuICAgICAgICBjb25zb2xlLmxvZyhgc3dpdGNoQWN0aXZlVGFza0NsaWNrIGhhcyBydW5gKTsgICAgIFxuICAgICAgICBcblxuICAgICAgICAvLy8vZ3JhYiB0aGUgSW5kZXggZnJvbSB0aGUgdGFzayB0aGF0IHdhcyBjbGlja2VkIG9uIFxuICAgICAgICBjb25zdCBzZWxlY3RlZFRhc2tJbmRleCA9IGUudGFyZ2V0LmRhdGFzZXQudGFza0luZGV4O1xuICAgICAgICBjb25zb2xlLmxvZyhgY2xpY2tlZCAke2UudGFyZ2V0LmRhdGFzZXQudGFza0luZGV4fWApO1xuICAgICAgICBcbiAgICAgICAgLy8vL2lmIHdoYXQgd2FzIGNsaWNrZWQgb24gZG9lc24ndCBoYXZlIHRhc2tUaXRsZSwgcmV0dXJuIFxuICAgICAgICBpZiAoIXNlbGVjdGVkVGFza0luZGV4KSByZXR1cm47XG5cbiAgICAgICAgdG9Eb0xpc3Quc3dpdGNoQWN0aXZlVGFzayhOdW1iZXIoc2VsZWN0ZWRUYXNrSW5kZXgpKTtcblxuICAgICAgICBjb25zb2xlLmxvZyhgdGhpcyBpcyBub3cgYWN0aXZlVGFza2ApO1xuICAgICAgICBjb25zb2xlLmxvZyh0b0RvTGlzdC5nZXRBY3RpdmVUYXNrKCkpO1xuICAgICAgICBcbiAgICAgICAgLy8gdXBkYXRlU2NyZWVuKCk7XG4gICAgICAgXG4gICAgICBcbiAgICB9XG5cblxuICAgIGZ1bmN0aW9uIG9wZW5FZGl0VGFza0Zvcm0oKSB7XG5cbiAgICAgICAgLypcbiAgICAgICAgMS4gZ3JhYiBhZGRUYXNrRm9ybVxuICAgICAgICAyLiBhY3RpdmVUYXNrIChzd2l0Y2hUYXNrc0NsaWNrPz8gKVxuICAgICAgICBvcGVuIHRhc2sgYnkgdGFza1RpdGxlIFxuICAgICAgICBhY3RpdmVQcm9qZWN0XG4gICAgICAgIGxvb3AgdGhyb3VnaCB0YXNrcyB0byBtYXRjaCB0YXNrVGl0bGUgXG4gICAgICAgIDMuIHByZS1maWxsIGFkZFRhc2tGb3JtIHZhbHVlcyB3aXRoIHNlbGVjdGVkIFRhc2sgaW5mbyBcbiAgICAgICAgNC4gIGlmIGNhbmNlbCAtIGNhbmNlbEZvcm1cbiAgICAgICAgICAgIGlmIHN1Ym1pdCAtIGVkaXRUYXNrRm9ybVN1Ym1pdCBcbiAgICAgICAgXG5cbiAgICAgICAgKi9cblxuICAgICAgICAvLy8vb3BlbiBwcm9qZWN0IGZvcm0gXG4gICAgICAgIG9wZW5UYXNrRm9ybSgpO1xuXG4gICAgICAgIC8vLy9wcmVmaWxsIG9wZW5UYXNrRm9ybSB2YWx1ZXMgd2l0aCBpbmZvIGZyb20gYWN0aXZlUHJvamVjdFxuXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0YXNrVGl0bGUnKS52YWx1ZSA9IHRvRG9MaXN0LmdldEFjdGl2ZVRhc2soKS50aXRsZTtcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Rhc2tEZXNjcmlwdGlvbicpLnZhbHVlID0gdG9Eb0xpc3QuZ2V0QWN0aXZlVGFzaygpLmRlc2NyaXB0aW9uO1xuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdGFza0R1ZURhdGUnKS52YWx1ZSA9IHRvRG9MaXN0LmdldEFjdGl2ZVRhc2soKS5kdWVEYXRlO1xuXG4gICAgICAgIGNvbnNvbGUubG9nKGBpcyB0aGVyZSBhY3RpdmVUYXNrIGhlcmU/YCk7XG4gICAgICAgIGNvbnNvbGUubG9nKGFjdGl2ZVRhc2spO1xuICAgICAgICBcbiAgICAgICAgXG5cblxuICAgICAgICAvLyBjb25zb2xlLmxvZyh0b0RvTGlzdC5nZXRBY3RpdmVUYXNrKCkudGl0bGUpO1xuICAgICAgICAvLyBjb25zb2xlLmxvZyh0b0RvTGlzdC5nZXRBY3RpdmVUYXNrKCkuZHVlRGF0ZSk7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKHRvRG9MaXN0LmdldEFjdGl2ZVRhc2soKS5kZXNjcmlwdGlvbik7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKHRvRG9MaXN0LmdldEFjdGl2ZVRhc2soKS5zZWxlY3RlZFByaW9yaXR5KTtcbiAgICAgICAgLy8gY29uc29sZS5sb2codG9Eb0xpc3QuYWN0aXZlVGFzay5kdWVEYXRlKTtcbiAgICAgICAgLy8gY29uc29sZS5sb2codG9Eb0xpc3QuYWN0aXZlVGFzay50aXRsZSk7XG5cblxuICAgICAgICAvLy8vd2hhdCBkbyB0aGVzZSBkbz8gbG9sIFxuICAgICAgICByZW1vdmVQcmlvcml0eUZsYWdTdHlsZSgpO1xuXG4gICAgICAgIHJlY2FsbFByaW9yaXR5RmxhZ1N0eWxlKCk7XG5cbiAgICAgICAgXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmVtb3ZlUHJpb3JpdHlGbGFnU3R5bGUoKSB7XG4gICAgICAgIC8vLy9hY3RpdmVQcmlvcml0eSBmbGFnIFxuICAgICAgICBjb25zdCBmbGFnSW1nUE5HcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5mbGFnSW1nUE5HJyk7XG5cbiAgICAgICAgZmxhZ0ltZ1BOR3MuZm9yRWFjaCgoZmxhZ0ltZ1BORykgPT4ge1xuICAgICAgICAgICAgZmxhZ0ltZ1BORy5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmVQcmlvcml0eScpXG4gICAgICAgIH0pXG5cbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gcmVjYWxsUHJpb3JpdHlGbGFnU3R5bGUoKSB7XG4gICAgICAgIGNvbnN0IGZsYWdJbWdQTkdzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmZsYWdJbWdQTkcnKTtcblxuICAgICAgICBmbGFnSW1nUE5Hcy5mb3JFYWNoKChmbGFnSW1nUE5HKSA9PiB7XG4gICAgICAgICAgICBpZiAoZmxhZ0ltZ1BORy5kYXRhc2V0LnByaW9yaXR5ID09PSB0b0RvTGlzdC5nZXRBY3RpdmVUYXNrUHJpb3JpdHkoKSkge1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGZsYWdJbWdQTkcuY2xhc3NMaXN0LmFkZCgnYWN0aXZlUHJpb3JpdHknKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgIH0pO1xuXG4gICAgfVxuXG5cblxuXG5cbiAgICBcblxuICAgIC8vIGZ1bmN0aW9uIGVkaXRUYXNrKCkge1xuICAgIC8vICAgICAvKlxuICAgIC8vICAgICAxLiBcbiAgICBcblxuXG4gICAgLy8gICAgICovXG5cbiAgICAvLyB9XG5cblxuICBcblxuXG4gXG5cblxuXG5cblxuICAgIFxuXG5cbiAgICAvL2luaXRpYWwgcmVuZGVyIFxuICAgIHVwZGF0ZVNjcmVlbigpO1xuXG5cblxuXG5cblxuXG59XG5cblxuY29uc29sZS5sb2coJy0tLS0tLS0tLS0tLS0tLS0tLScpO1xuXG5cbnNjcmVlbkNvbnRyb2xsZXIoKTtcblxuXG5cblxuLypcblxuXG5mdW5jdGlvbiBCb2FyZCgpIHtcbiAgICAvL3N0YXRlIG9mIHRvZG9saXN0XG5cbiAgICBib2FyZCA9IFtdXG4gICAgYm9hcmQucHVzaChwcm9qZWN0KCdpbmJveCcpKTsgICAgXG5cbiAgICBjb25zdCBnZXRCb2FyZCA9ICgpID0+IGJvYXJkO1xuXG4gICAgXG5cblxufVxuXG5cbmZ1bmN0aW9uIHByb2plY3QobmFtZSkge1xuXG4gICAgcHJvamVjdCA9IFtdO1xuXG4gICAgY29uc3QgYWRkVGFzayA9IHByb2plY3QucHVzaCh0YXNrKCkpO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogbmFtZTtcbiAgICB9XG4gICAgXG59XG5cblxuZnVuY3Rpb24gdGFzaygpIHtcblxuICAgIHByaW9yaXR5ID0gW1xuICAgICAgICAxLFxuICAgICAgICAyLFxuICAgICAgICAzXG4gICAgXTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIHRpdGxlOiB0aXRsZSxcbiAgICAgICAgdGl0bGU6IHRpdGxlLFxuICAgICAgICBkdWVkYXRlLFxuICAgICAgICBwcmlvcml0eSxcbiAgICAgICAgZGVzY3JpcHRpb25cbiAgICAgICAgY2hlY2tsaXN0XG4gICAgfVxuXG59XG5cbnNjcmVlbkNvbnRyb2xsZXIoKSB7XG4gICAgY29uc3QgY29udHJvbGxlciA9IENvbnRyb2xsZXIoKTtcblxuICAgIGNyZWF0ZSBodG1sIGVsZW1lbnRzXG4gICAgXG4gICAgY29uc3QgdXBkYXRlU2NyZWVuID0gKCkgPT4ge1xuXG4gICAgfVxuXG5cbiAgICBmdW5jdGlvbiBjbGlja0hhbmRsZXJCb2FyZChlKSB7XG4gICAgICAgIC8vYWRkaW5nIHRhc2suLi4uIFxuICAgICAgICBjb25zdCB0aXRsZVxuICAgICAgICBjb25zdCB0aXRsZVxuICAgICAgICBjb25zdCBkdWVkYXRlXG4gICAgICAgIGNvbnN0IHByaW9yaXR5XG4gICAgICAgIGNvbnN0IGRlc2NyaXB0aW9uXG4gICAgICAgIGNvbnN0IGNoZWNrbGlzdFxuXG4gICAgICAgIGNvbnRyb2xsZXIuYWRkVGFzayhpbnB1dCk7XG4gICAgICAgIHVwZGF0ZVNjcmVlbigpO1xuXG5cbiAgICB9XG5cbiAgICAvLy8vaW5pdGlhbCByZW5kZXJcbiAgICB1cGRhdGVTY3JlZW4oKTtcblxuXG5cbiAgICBcbn1cblxuQURESU5HIFRBU0tcbjEuIHNjcmVlbiBjb250cm9sbGVyIGFzayB1c2VyIGZvciBpbmZvXG4yLiB1c2UgaW5mbyB0byBjcmVhdGVUYXNrKCkgaW4gQ29udHJvbGxlclxuICAgIDEpdGFzayhpbnB1dCBpbmZvIGhlcmUpXG4gICAgMilwdXNoIHRhc2sgdG8gYWN0aXZlIHByb2plY3QgXG4gICAgMylpZiBwcm9qZWN0IGFscmVhZHkgZXhpc3RzIGluIGJvYXJkXG4gICAgICAgIHJlcGxhY2UgcHJvamVjdCBpbiBib2FyZCgpIHdpdGggY2hhbmdlZCBwcm9qZWN0XG4gICAgICBpZiBwcm9qZWN0IGRvZXMgbm90IGV4aXN0IGluIGJvYXJkXG4gICAgICAgIHB1c2ggcHJvamVjdCB0byBib2FyZCBcbiAgICAgICAgICAgIGdpdmUgaXQgaWQgbnVtYmVyLi4uIFxuICAgIFxuICAgIDQpIFxuMy4gIFxuMy4gcHVzaCB0YXNrIHRvIHByb2plY3QgXG40LiBwdXNoIHByb2plY3QgdG8gYm9hcmRcbjUuIHVwZGF0ZVNjcmVlblxuXG5VUERBVEVTQ1JFRU5cbjEuIGNsZWFyIGJvYXJkXG4yLiBnZXRCb2FyZFxuMy4gY3JlYXRlIGVsZW1lbnRzLi4gc2V0IHVwIGRpc3BsYXkgIFxuXG5cblNXSVRDSCBCRVRXRUVOIFBST0pFQ1RTLi4uIFxuXG5cblxuKi9cbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJuIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJnIiwiZ2xvYmFsVGhpcyIsIkZ1bmN0aW9uIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInNjcmlwdFVybCIsImltcG9ydFNjcmlwdHMiLCJsb2NhdGlvbiIsImN1cnJlbnRTY3JpcHQiLCJzcmMiLCJzY3JpcHRzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJyZXBsYWNlIiwicCIsIm5jIiwiUHJvamVjdCIsInRpdGxlIiwicHJvamVjdEluZGV4IiwidGFza3MiLCJUYXNrIiwidGFza0luZGV4IiwiZHVlRGF0ZSIsInByaW9yaXR5IiwiZGVzY3JpcHRpb24iLCJnZXRQcmlvcml0eSIsImNvbnNvbGUiLCJsb2ciLCJ0b0RvTGlzdCIsImJvYXJkIiwiZ2V0Qm9hcmQiLCJhZGRQcm9qZWN0IiwiYWRkVGFzayIsInRhc2tJbnB1dHMiLCJlZGl0VGFza0lucHV0cyIsImoiLCJCb2FyZCIsImJvYXJkQm9hcmQiLCJhY3RpdmVQcm9qZWN0IiwiZ2V0QWN0aXZlUHJvamVjdFRhc2tzIiwiZ2V0QWN0aXZlUHJvamVjdEluZGV4IiwiYWN0aXZlVGFzayIsImdldEFjdGl2ZVRhc2tUYXNrSW5kZXgiLCJnZXRUYXNrSW5kZXgiLCJnZXRBY3RpdmVQcm9qZWN0IiwiZ2V0QWN0aXZlVGFzayIsImdldEFjdGl2ZVByb2plY3RUaXRsZSIsInN3aXRjaEFjdGl2ZVByb2plY3QiLCJzZWxlY3RlZFByb2plY3RJbmRleCIsInByb2plY3RUaXRsZSIsInN3aXRjaEFjdGl2ZVRhc2siLCJzZWxlY3RlZFRhc2tJbmRleCIsImdldEFjdGl2ZVRhc2tUaXRsZSIsImdldEFjdGl2ZVRhc2tQcmlvcml0eSIsInRhc2tUaXRsZSIsInRhc2tEdWVEYXRlIiwidGFza1ByaW9yaXR5IiwidGFza0Rlc2NyaXB0aW9uIiwiQ29udHJvbGxlciIsImJvZHkiLCJ1cGRhdGVTY3JlZW4iLCJpbm5lckhUTUwiLCJhY3RpdmVQcm9qZWN0VGl0bGUiLCJoZWFkZXIiLCJoZWFkZXJUaXRsZSIsInRleHRDb250ZW50IiwidGFza0JhciIsImNsYXNzTGlzdCIsImFkZCIsInRhc2tCYXJUb3AiLCJpbmJveCIsImRhdGFzZXQiLCJpbmJveEltZ1BORyIsIkltYWdlIiwiaW5ib3hIVGhyZWUiLCJ0b2RheSIsInRvZGF5SW1nUE5HIiwidG9kYXlIVGhyZWUiLCJ1cGNvbWluZyIsInVwY29taW5nSW1nUE5HIiwidXBjb21pbmdIVGhyZWUiLCJwcm9qZWN0cyIsInByb2plY3RzSFR3byIsInByb2plY3RzTmF2IiwicHJvamVjdHNOYXZQcm9qZWN0IiwicHJvamVjdE5hdlByb2plY3RIVGhyZWUiLCJhZGRQcm9qZWN0SW1nUE5HIiwiYWRkUHJvamVjdEhUaHJlZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJvcGVuUHJvamVjdEZvcm0iLCJ0YXNrVmlldyIsImFjdGl2ZVByb2plY3RIZWFkaW5nIiwiZm9yRWFjaCIsInByb2plY3RUYXNrIiwidGFzayIsInRhc2tDbGljayIsImNoZWNrTWFya0ltZ1BORyIsImJhY2tncm91bmRDb2xvciIsIm9wZW5UYXNrRm9ybSIsImZvb3RlciIsImZvb3RlckhUaHJlZSIsImFkZFByb2plY3RGb3JtIiwiYWRkUHJvamVjdEZvcm1Vc2VyIiwiYWRkUHJvamVjdEZvcm1Vc2VySGVhZGluZyIsImFkZFByb2plY3RGb3JtVXNlckhlYWRpbmdIVHdvIiwiYWRkUHJvamVjdEZvcm1Vc2VyQm9keSIsImFkZFByb2plY3RGb3JtVXNlclVsIiwiYWRkUHJvamVjdEZvcm1Vc2VyTGlUaXRsZSIsImFkZFByb2plY3RGb3JtVXNlclRpdGxlTGFiZWwiLCJhZGRQcm9qZWN0Rm9ybVVzZXJUaXRsZUlucHV0IiwiYWRkUHJvamVjdEZvcm1Vc2VyQnV0dG9ucyIsImFkZFByb2plY3RGb3JtVXNlckNhbmNlbCIsImNhbmNlbFByb2plY3RGb3JtIiwiYWRkUHJvamVjdEZvcm1Vc2VyQWRkIiwicHJvamVjdEZvcm1TdWJtaXQiLCJhZGRUYXNrRm9ybSIsImFkZFRhc2tGb3JtVXNlciIsImFkZFRhc2tGb3JtVXNlckhlYWRpbmciLCJhZGRUYXNrRm9ybVVzZXJIZWFkaW5nSFR3byIsImFkZFRhc2tGb3JtVXNlckJvZHkiLCJhZGRUYXNrRm9ybVVzZXJVbCIsImFkZFRhc2tGb3JtVXNlckxpVGl0bGUiLCJhZGRUYXNrRm9ybVVzZXJUaXRsZUxhYmVsIiwiYWRkVGFza0Zvcm1Vc2VyVGl0bGVJbnB1dCIsImFkZFRhc2tGb3JtVXNlckxpRGVzY3JpcHRpb24iLCJhZGRUYXNrRm9ybVVzZXJEZXNjcmlwdGlvbkxhYmVsIiwiYWRkVGFza0Zvcm1Vc2VyRGVzY3JpcHRpb25JbnB1dCIsImFkZFRhc2tGb3JtVXNlckxpRHVlRGF0ZSIsImFkZFRhc2tGb3JtVXNlckR1ZURhdGVMYWJlbCIsImFkZFRhc2tGb3JtVXNlckR1ZURhdGVJbnB1dCIsInZhbHVlIiwiRGF0ZSIsImFkZFRhc2tGb3JtVXNlckJ1dHRvbnMiLCJhZGRUYXNrRm9ybVVzZXJQcmlvcml0eSIsImFkZFRhc2tGb3JtVXNlclByaW9yaXR5SGVhZGluZyIsImFkZFRhc2tGb3JtVXNlclByaW9yaXR5SGVhZGluZ0xhYmVsIiwiYWRkVGFza0Zvcm1Vc2VyUHJpb3JpdHlGbGFncyIsImZsYWdJbWdQTkciLCJzZWxlY3RQcmlvcml0eUNsaWNrIiwiYWRkVGFza0Zvcm1Vc2VyQ2FuY2VsIiwiY2FuY2VsVGFza0Zvcm0iLCJhZGRUYXNrRm9ybVVzZXJBZGQiLCJzdWJtaXRUYXNrRm9ybSIsInRhc2tCYXJDb250ZW50cyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJ0YXNrQmFyQ29udGVudCIsInN3aXRjaEFjdGl2ZVByb2plY3RDbGljayIsIk51bWJlciIsImRpc3BsYXkiLCJhZGRUYXNrRm9ybUlucHV0cyIsImFkZFRhc2tGb3JtSW5wdXQiLCJyZW1vdmVQcmlvcml0eUZsYWdTdHlsZSIsInNlbGVjdGVkVGFza1ByaW9yaXR5Iiwic2NyZWVuQ29udHJvbGxlciJdLCJzb3VyY2VSb290IjoiIn0=