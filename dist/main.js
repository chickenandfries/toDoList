(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),r=t.n(o),a=t(645),d=t.n(a)()(r());d.push([n.id,"body {\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 250px 1fr;\n    grid-template-rows: 120px 1fr 50px;\n    height: 100vh;\n    position:relative;\n\n}\n\nh2, h3 {\n    padding: 0;\n    margin: 0;\n}\n\nul {\n    list-style-type: none;\n    padding: 0;\n}\n\nli {\n    padding: 0;\n    margin: 0;\n}\n\nheader {\n    /* height: 120px; */\n    background-color: #323639;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    grid-column-start: 1;\n    grid-column-end: 3;\n  \n    \n}\n\n\nheader h1 {\n    margin-left: 3rem;\n    color: white;\n}\n\n\n.taskBar {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    background-color: #d1cfcf;\n    \n}\n\n\n.taskBarTop {\n    display: flex;\n    flex-direction: column;\n    border: 2px solid black;\n    \n}\n\n\n\n.taskBarContents {\n    display: flex;\n    border: 2px solid black;\n    padding: 0.3rem;\n    gap: 0.5rem;\n    margin: 0.5rem;\n   \n\n}\n\n.taskBarContents:hover{\n    background-color: red;\n}\n\n\n.activeProject {\n    background-color:red;\n}\n\n\n\n.projects {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    border: 2px solid black;\n\n\n    \n}\n\n.projectsContent {\n    display: flex;\n    border: 2px solid black;\n    padding: 0.3rem;\n    gap: 0.5rem;\n    margin: 0.5rem;\n   \n\n}\n\n.projects h2 {\n    margin: 1rem;\n    border: 1px solid red;\n\n\n}\n\n.taskView {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    background-color: #f2f0f0;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    padding-top: 1rem;\n    padding-left: 2rem;\n}\n\n.tasks {\n    display: flex;\n    flex-direction: column;\n    /* border: 2px solid black; */\n    gap: 1rem;\n\n}\n\n.task {\n    display: grid;\n    grid-template-columns: 50px 3fr 1fr;\n    grid-template-rows: 50px 1fr;\n    border-bottom: grey solid 1px;\n}\n\n.checkMarkImgPNG {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 1;\n    grid-row-end: 2;\n}\n\n.taskTitle {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 1;\n    grid-row-end: 2;\n\n}\n\n.taskDueDate {\n    grid-column-start: 3;\n    grid-column-end: 4;\n    grid-row-start: 1;\n    grid-row-end: 2;\n\n}\n\n.taskDescription {\n    grid-column-start: 1;\n    grid-column-end: 4;\n    grid-row-start: 2;\n    grid-row-end: 3;\n}\n\n\n.addTask {\n    height: 2rem;\n    display: flex;\n    align-items: center;\n\n}\n\n.addTask:hover {\n    background-color:#696868 ;\n\n}\n\n\n\n\n#addProjectForm {\n    display: none;\n    height:300px;\n    width:300px;\n    position:absolute;\n    top: 20%;\n    left: 50%;\n    margin-left: -150px;\n    background-color: #c9c8c7;\n\n}\n\n.addProjectFormUser {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addProjectFormUserHeading h2 {\n\n\n}\n\n\n.addProjectFormUserHeading {\n    background-color:#696868;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 3rem;\n    \n}\n\n.addProjectFormUserBody {\n    display: flex;\n    flex-direction: column;\n}\n\n.addProjectFormUserLiTitle {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addProjectFormUserButtons {\n    margin-top: 100px;\n    align-self: flex-end;\n}\n\n#addTaskForm {\n    display: none;\n    height:500px;\n    width:500px;\n    position:absolute;\n    top: 20%;\n    left: 50%;\n    margin-left: -250px;\n    background-color: #c9c8c7;\n\n}\n\n.addTaskFormUser {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addTaskFormUserHeading {\n    background-color:#696868;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 3rem;\n    \n}\n\n.addTaskFormUserBody {\n    display: flex;\n    flex-direction: column;\n}\n\n.addTaskFormUserLi {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addTaskFormUserUl input {\n    background-color: white;\n    border: none;\n    \n}\n\n.addTaskFormUserButtons {\n    \n\n}\n\n\n.flagImgPNG1 {\n    background-color: red;\n}\n.flagImgPNG2 {\n    background-color: orange;\n}\n\n.flagImgPNG3 {\n    background-color: skyblue;\n}\n\n\n/* .addProjectFormUserHeadingHTwo {\n    text-align: center;\n} */\n\nfooter {\n    background-color: red;\n    grid-row-start: 3;\n    grid-row-end: 4;\n    grid-column-start: 1;\n    grid-column-end: 3;\n}\n\n\n/*\nbackground-color: #ebe7e4;\n*/\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["body {\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 250px 1fr;\n    grid-template-rows: 120px 1fr 50px;\n    height: 100vh;\n    position:relative;\n\n}\n\nh2, h3 {\n    padding: 0;\n    margin: 0;\n}\n\nul {\n    list-style-type: none;\n    padding: 0;\n}\n\nli {\n    padding: 0;\n    margin: 0;\n}\n\nheader {\n    /* height: 120px; */\n    background-color: #323639;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    grid-column-start: 1;\n    grid-column-end: 3;\n  \n    \n}\n\n\nheader h1 {\n    margin-left: 3rem;\n    color: white;\n}\n\n\n.taskBar {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    background-color: #d1cfcf;\n    \n}\n\n\n.taskBarTop {\n    display: flex;\n    flex-direction: column;\n    border: 2px solid black;\n    \n}\n\n\n\n.taskBarContents {\n    display: flex;\n    border: 2px solid black;\n    padding: 0.3rem;\n    gap: 0.5rem;\n    margin: 0.5rem;\n   \n\n}\n\n.taskBarContents:hover{\n    background-color: red;\n}\n\n\n.activeProject {\n    background-color:red;\n}\n\n\n\n.projects {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    border: 2px solid black;\n\n\n    \n}\n\n.projectsContent {\n    display: flex;\n    border: 2px solid black;\n    padding: 0.3rem;\n    gap: 0.5rem;\n    margin: 0.5rem;\n   \n\n}\n\n.projects h2 {\n    margin: 1rem;\n    border: 1px solid red;\n\n\n}\n\n.taskView {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    background-color: #f2f0f0;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    padding-top: 1rem;\n    padding-left: 2rem;\n}\n\n.tasks {\n    display: flex;\n    flex-direction: column;\n    /* border: 2px solid black; */\n    gap: 1rem;\n\n}\n\n.task {\n    display: grid;\n    grid-template-columns: 50px 3fr 1fr;\n    grid-template-rows: 50px 1fr;\n    border-bottom: grey solid 1px;\n}\n\n.checkMarkImgPNG {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 1;\n    grid-row-end: 2;\n}\n\n.taskTitle {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 1;\n    grid-row-end: 2;\n\n}\n\n.taskDueDate {\n    grid-column-start: 3;\n    grid-column-end: 4;\n    grid-row-start: 1;\n    grid-row-end: 2;\n\n}\n\n.taskDescription {\n    grid-column-start: 1;\n    grid-column-end: 4;\n    grid-row-start: 2;\n    grid-row-end: 3;\n}\n\n\n.addTask {\n    height: 2rem;\n    display: flex;\n    align-items: center;\n\n}\n\n.addTask:hover {\n    background-color:#696868 ;\n\n}\n\n\n\n\n#addProjectForm {\n    display: none;\n    height:300px;\n    width:300px;\n    position:absolute;\n    top: 20%;\n    left: 50%;\n    margin-left: -150px;\n    background-color: #c9c8c7;\n\n}\n\n.addProjectFormUser {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addProjectFormUserHeading h2 {\n\n\n}\n\n\n.addProjectFormUserHeading {\n    background-color:#696868;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 3rem;\n    \n}\n\n.addProjectFormUserBody {\n    display: flex;\n    flex-direction: column;\n}\n\n.addProjectFormUserLiTitle {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addProjectFormUserButtons {\n    margin-top: 100px;\n    align-self: flex-end;\n}\n\n#addTaskForm {\n    display: none;\n    height:500px;\n    width:500px;\n    position:absolute;\n    top: 20%;\n    left: 50%;\n    margin-left: -250px;\n    background-color: #c9c8c7;\n\n}\n\n.addTaskFormUser {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addTaskFormUserHeading {\n    background-color:#696868;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 3rem;\n    \n}\n\n.addTaskFormUserBody {\n    display: flex;\n    flex-direction: column;\n}\n\n.addTaskFormUserLi {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addTaskFormUserUl input {\n    background-color: white;\n    border: none;\n    \n}\n\n.addTaskFormUserButtons {\n    \n\n}\n\n\n.flagImgPNG1 {\n    background-color: red;\n}\n.flagImgPNG2 {\n    background-color: orange;\n}\n\n.flagImgPNG3 {\n    background-color: skyblue;\n}\n\n\n/* .addProjectFormUserHeadingHTwo {\n    text-align: center;\n} */\n\nfooter {\n    background-color: red;\n    grid-row-start: 3;\n    grid-row-end: 4;\n    grid-column-start: 1;\n    grid-column-end: 3;\n}\n\n\n/*\nbackground-color: #ebe7e4;\n*/\n"],sourceRoot:""}]);const c=d},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var d={};if(o)for(var c=0;c<this.length;c++){var i=this[c][0];null!=i&&(d[i]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);o&&d[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),d=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(d).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},d=[],c=0;c<n.length;c++){var i=n[c],s=o.base?i[0]+o.base:i[0],l=a[s]||0,A="".concat(s," ").concat(l);a[s]=l+1;var p=t(A),m={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==p)e[p].references++,e[p].updater(m);else{var u=r(m,o);o.byIndex=c,e.splice(c,0,{identifier:A,updater:u,references:1})}d.push(A)}return d}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var d=0;d<a.length;d++){var c=t(a[d]);e[c].references--}for(var i=o(n,r),s=0;s<a.length;s++){var l=t(a[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=i}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),a=t(569),d=t.n(a),c=t(565),i=t.n(c),s=t(216),l=t.n(s),A=t(589),p=t.n(A),m=t(426),u={};u.styleTagTransform=p(),u.setAttributes=i(),u.insert=d().bind(null,"head"),u.domAPI=r(),u.insertStyleElement=l(),e()(m.Z,u),m.Z&&m.Z.locals&&m.Z.locals;const g=t.p+"f8ac04aeb3ff24b48be9.png",C=t.p+"28d090802088aff05717.png",B=t.p+"c5874428bc8b8ddbf14a.png",f=t.p+"e9af1827778de11ad1d9.png",I=t.p+"fbfd272aede7d884df15.png",h=t.p+"2546d2ce9bf2dc800b40.png";function k(n){return{title:n,tasks:[]}}function b(n,e,t=4,o){let r=["p1","p2","p3","p4"][t-1];return{title:n,dueDate:e,selectedPriority:r,description:o,getPriority:()=>r}}console.log("------------------"),function(){const n=function(){let n=function(){let n=[];return n.push(k("inbox")),n.push(k("today")),n.push(k("upcoming")),{getBoard:()=>n,addProject:e=>{n.push(k(e))},addTask:(e,...t)=>{console.log("taskInputs below"),console.log(...t);for(let o=0;o<n.length;o++)n[o].title===e&&n[o].tasks.push(b(...t));return n}}}(),e=n.getBoard(),t=n.getBoard()[0];console.log("boardBoard below"),console.log(e);let o=t.tasks[0],r=()=>t.title,a=()=>t.tasks;return n.addTask(r(),"asfed","06/05/25","1","this is an example of task description"),n.addTask(r(),"a","b","4","e"),{addTask:(e,t,o,a)=>{n.addTask(r(),e,t,o,a)},getBoard:()=>e,getActiveProjectTitle:r,getActiveProjectTasks:a,switchProjects:n=>{for(let o=0;o<e.length;o++)e[o].title===n&&(t=e[o])},addProject:e=>{n.addProject(e)},switchTasks:n=>{for(let e=0;e<a().length;e++)a()[e].title===n&&(o=a()[e])}}}(),e=document.querySelector("body"),t=()=>{e.innerHTML="";const t=n.getBoard();let s=n.getActiveProjectTitle();console.log(`this is activeProjectTitle: ${s}`);const p=document.createElement("header");e.appendChild(p);const m=document.createElement("h1");m.textContent="ToDoList",p.appendChild(m);const u=document.createElement("div");u.classList.add("taskBar"),e.appendChild(u);const k=document.createElement("nav");k.classList.add("taskBarTop"),u.appendChild(k);const b=document.createElement("div");b.classList.add("taskBarContents"),b.dataset.projectTitle="inbox",k.appendChild(b);const y=new Image;y.src=g,y.dataset.projectTitle="inbox",b.appendChild(y);const x=document.createElement("h3");x.textContent="Inbox",x.dataset.projectTitle="inbox",b.appendChild(x);const E=document.createElement("div");E.classList.add("taskBarContents"),E.dataset.projectTitle="today",k.appendChild(E);const v=new Image;v.src=C,v.classList.add("todayImgPNG"),E.appendChild(v);const T=document.createElement("h3");T.textContent="Today",E.appendChild(T);const j=document.createElement("div");j.classList.add("taskBarContents"),j.dataset.projectTitle="upcoming",k.appendChild(j);const w=new Image;w.src=B,w.classList.add("upcomingImgPNG"),j.appendChild(w);const P=document.createElement("h3");P.textContent="Upcoming",j.appendChild(P);const F=document.createElement("div");F.classList.add("projects"),u.appendChild(F);const L=document.createElement("h2");L.textContent="Projects",F.appendChild(L);const U=document.createElement("nav");F.appendChild(U);for(let n=3;n<t.length;n++){const e=document.createElement("div");e.classList.add("taskBarContents"),e.dataset.projectTitle=`${t[n].title}`,U.appendChild(e);const o=document.createElement("h3");o.textContent=`${t[n].title}`,e.appendChild(o)}const S=document.createElement("div");S.classList.add("projectsContent"),U.appendChild(S);const G=new Image;G.src=f,S.appendChild(G);const D=document.createElement("h3");D.textContent="Add Project",S.appendChild(D),S.addEventListener("click",r);const q=document.createElement("div");q.classList.add("taskView"),e.appendChild(q);const N=document.createElement("h2");N.classList.add("activeProjectHeading"),console.log(`this is activeProjectTitle: ${s}`),N.textContent=s,q.appendChild(N);const H=document.createElement("nav");H.classList.add("tasks"),q.appendChild(H),n.getActiveProjectTasks().forEach((n=>{const e=document.createElement("div");e.classList.add("task"),e.dataset.taskTitle=n.title,H.appendChild(e);const t=new Image;t.src=I,t.classList.add("checkMarkImgPNG"),"p1"===n.selectedPriority?t.style.backgroundColor="red":"p2"===n.selectedPriority?t.style.backgroundColor="orange":"p3"===n.selectedPriority?t.style.backgroundColor="skyblue":"p4"===n.selectedPriority&&(t.style.backgroundColor="none"),e.appendChild(t);const o=document.createElement("h3");o.classList.add("taskTitle"),o.textContent=n.title,e.appendChild(o);const r=document.createElement("div");r.classList.add("taskDueDate"),r.textContent=n.dueDate,e.appendChild(r),e.dataset.priority=n.priority;const a=document.createElement("p");a.classList.add("taskDescription"),a.textContent=n.description,e.appendChild(a)}));const Y=document.createElement("div");Y.classList.add("addTask"),Y.textContent="+ Add Task",H.appendChild(Y),Y.addEventListener("click",c);const M=document.createElement("footer");e.appendChild(M);const W=document.createElement("h3");W.textContent="this is a footer",M.appendChild(W);const R=document.createElement("div");R.id="addProjectForm",e.appendChild(R);const Z=document.createElement("form");Z.classList.add("addProjectFormUser"),R.appendChild(Z);const $=document.createElement("div");$.classList.add("addProjectFormUserHeading"),Z.appendChild($);const V=document.createElement("h2");V.textContent="Add Project",$.appendChild(V);const z=document.createElement("div");z.classList.add("addProjectFormUserBody"),Z.appendChild(z);const O=document.createElement("ul");O.classList.add("addProjectFormUserUl"),z.appendChild(O);const X=document.createElement("li");X.classList.add("addProjectFormUserLiTitle"),O.appendChild(X);const Q=document.createElement("label");Q.setAttribute("for","projectTitle"),Q.textContent="Project Title ",X.appendChild(Q);const J=document.createElement("input");J.classList.add("addProjectFormTitleInput"),J.setAttribute("type","text"),J.setAttribute("name","projectTitle"),X.appendChild(J);const _=document.createElement("div");_.classList.add("addProjectFormUserButtons"),R.appendChild(_);const K=document.createElement("button");K.textContent="Cancel",_.appendChild(K),K.addEventListener("click",a);const nn=document.createElement("button");nn.textContent="Add",_.appendChild(nn),nn.addEventListener("click",d);const en=document.createElement("div");en.id="addTaskForm",e.appendChild(en);const tn=document.createElement("form");tn.classList.add("addTaskFormUser"),en.appendChild(tn);const on=document.createElement("div");on.classList.add("addTaskFormUserHeading"),tn.appendChild(on);const rn=document.createElement("h2");rn.textContent="Task Info",on.appendChild(rn);const an=document.createElement("div");an.classList.add("addTaskFormUserBody"),tn.appendChild(an);const dn=document.createElement("ul");dn.classList.add("addTaskFormUserUl"),an.appendChild(dn);const cn=document.createElement("li");cn.classList.add("addTaskFormUserLi"),dn.appendChild(cn);const sn=document.createElement("label");sn.setAttribute("for","taskTitle"),sn.textContent="Task Title ",cn.appendChild(sn);const ln=document.createElement("input");ln.classList.add("addTaskFormInput"),ln.classList.add("addTaskFormTitleInput"),ln.setAttribute("type","text"),ln.setAttribute("name","taskTitle"),cn.appendChild(ln);const An=document.createElement("li");An.classList.add("addTaskFormUserLi"),dn.appendChild(An);const pn=document.createElement("label");pn.setAttribute("for","taskDescription"),pn.textContent="Task Description ",An.appendChild(pn);const mn=document.createElement("input");mn.classList.add("addTaskFormInput"),mn.classList.add("addTaskFormDescriptionInput"),mn.setAttribute("type","text"),mn.setAttribute("name","taskDescription"),An.appendChild(mn);const un=document.createElement("li");un.classList.add("addTaskFormUserLi"),dn.appendChild(un);const gn=document.createElement("label");gn.setAttribute("for","taskDueDate"),gn.textContent="Task DueDate ",un.appendChild(gn);const Cn=document.createElement("input");Cn.classList.add("addTaskFormInput"),Cn.classList.add("addTaskFormDueDateInput"),Cn.setAttribute("type","text"),Cn.setAttribute("name","taskDueDate"),un.appendChild(Cn);const Bn=document.createElement("div");Bn.classList.add("addTaskFormUserButtons"),en.appendChild(Bn);const fn=document.createElement("div");fn.classList.add("addTaskFormUserPriority"),Bn.appendChild(fn);const In=document.createElement("div");fn.appendChild(In);const hn=document.createElement("label");hn.textContent="Priority",In.appendChild(hn);const kn=document.createElement("div");fn.appendChild(kn);for(let n=1;n<5;n++){const e=new Image;e.src=h,e.classList.add(`flagImgPNG${n}`),e.dataset.priority=n,e.addEventListener("click",l),kn.appendChild(e)}const bn=document.createElement("button");bn.textContent="Cancel",Bn.appendChild(bn),bn.addEventListener("click",i);const yn=document.createElement("button");yn.textContent="Add",Bn.appendChild(yn),yn.addEventListener("click",A);const xn=document.querySelectorAll(".taskBarContents");xn.forEach((n=>{n.addEventListener("click",o)})),console.log("switchProjectsClick event has been added"),xn.forEach((n=>{n.dataset.projectTitle===s&&n.classList.add("activeProject")}))};function o(e){console.log("below is switchProjectsClick target"),console.log(e.target);const o=e.target.dataset.projectTitle;o&&(n.switchProjects(o),t())}const r=function(){document.querySelector("#addProjectForm").style.display="block"};function a(){document.querySelector(".addProjectFormTitleInput").value="",document.querySelector("#addProjectForm").style.display="none"}function d(){const e=document.querySelector(".addProjectFormTitleInput").value;n.addProject(e),t()}function c(){document.querySelector("#addTaskForm").style.display="block"}function i(){const n=document.querySelectorAll(".addTaskFormInput");for(let e of n)e.value="";document.querySelector("#addTaskForm").style.display="none"}let s="4";function l(n){s=n.target.dataset.priority,console.log("selectPriorityClick running")}function A(){const e=document.querySelector(".addTaskFormTitleInput").value,o=document.querySelector(".addTaskFormDescriptionInput").value,r=document.querySelector(".addTaskFormDueDateInput").value;console.log(`this is priority: ${s}`),n.addTask(e,r,s,o),i(),t()}console.log(n.getActiveProjectTasks()),t()}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,