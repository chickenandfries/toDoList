(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),r=t.n(o),d=t(645),a=t.n(d)()(r());a.push([n.id,"body {\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 250px 1fr;\n    grid-template-rows: 120px 1fr 50px;\n    height: 100vh;\n    position:relative;\n\n}\n\nh2, h3 {\n    padding: 0;\n    margin: 0;\n}\n\nul {\n    list-style-type: none;\n    padding: 0;\n}\n\nli {\n    padding: 0;\n    margin: 0;\n}\n\nheader {\n    /* height: 120px; */\n    background-color: #323639;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    grid-column-start: 1;\n    grid-column-end: 3;\n  \n    \n}\n\n\nheader h1 {\n    margin-left: 3rem;\n    color: white;\n}\n\n\n.taskBar {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    background-color: #d1cfcf;\n    \n}\n\n\n.taskBarTop {\n    display: flex;\n    flex-direction: column;\n    border: 2px solid black;\n    \n}\n\n\n\n.taskBarContents {\n    display: flex;\n    border: 2px solid black;\n    padding: 0.3rem;\n    gap: 0.5rem;\n    margin: 0.5rem;\n   \n\n}\n\n.projects {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    border: 2px solid black;\n\n\n    \n}\n\n.projectsContent {\n    display: flex;\n    border: 2px solid black;\n    padding: 0.3rem;\n    gap: 0.5rem;\n    margin: 0.5rem;\n   \n\n}\n\n.projects h2 {\n    margin: 1rem;\n    border: 1px solid red;\n\n\n}\n\n.taskView {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    background-color: #f2f0f0;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    padding-top: 1rem;\n    padding-left: 2rem;\n}\n\n.tasks {\n    display: flex;\n    flex-direction: column;\n    border: 2px solid black;\n\n}\n\n.task {\n    display: grid;\n    grid-template-columns: 50px 3fr 1fr;\n    grid-template-rows: 50px 1fr;\n    border: solid red;\n}\n\n.checkMarkImgPNG {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 1;\n    grid-row-end: 2;\n}\n\n.taskTitle {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 1;\n    grid-row-end: 2;\n\n}\n\n.taskDueDate {\n    grid-column-start: 3;\n    grid-column-end: 4;\n    grid-row-start: 1;\n    grid-row-end: 2;\n\n}\n\n.taskDescription {\n    grid-column-start: 1;\n    grid-column-end: 4;\n    grid-row-start: 2;\n    grid-row-end: 3;\n}\n\n\n.addTask {\n    height: 2rem;\n    display: flex;\n    align-items: center;\n}\n\n\n\n\n\n#addProjectForm {\n    display: none;\n    height:300px;\n    width:300px;\n    position:absolute;\n    top: 20%;\n    left: 50%;\n    margin-left: -150px;\n    background-color: #c9c8c7;\n\n}\n\n.addProjectFormUser {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addProjectFormUserHeading h2 {\n\n\n}\n\n\n.addProjectFormUserHeading {\n    background-color:#696868;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 3rem;\n    \n}\n\n.addProjectFormUserBody {\n    display: flex;\n    flex-direction: column;\n}\n\n.addProjectFormUserLiTitle {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addProjectFormUserButtons {\n    margin-top: 100px;\n    align-self: flex-end;\n}\n\n#addTaskForm {\n    display: none;\n    height:500px;\n    width:500px;\n    position:absolute;\n    top: 20%;\n    left: 50%;\n    margin-left: -250px;\n    background-color: #c9c8c7;\n\n}\n\n.addTaskFormUser {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addTaskFormUserHeading {\n    background-color:#696868;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 3rem;\n    \n}\n\n.addTaskFormUserBody {\n    display: flex;\n    flex-direction: column;\n}\n\n.addTaskFormUserLi {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addTaskFormUserUl input {\n    background-color: white;\n    border: none;\n    \n}\n\n.addTaskFormUserButtons {\n    \n\n}\n\n\n.flagImgPNG1 {\n    background-color: red;\n}\n.flagImgPNG2 {\n    background-color: orange;\n}\n\n.flagImgPNG3 {\n    background-color: skyblue;\n}\n\n\n/* .addProjectFormUserHeadingHTwo {\n    text-align: center;\n} */\n\nfooter {\n    background-color: red;\n    grid-row-start: 3;\n    grid-row-end: 4;\n    grid-column-start: 1;\n    grid-column-end: 3;\n}\n\n\n/*\nbackground-color: #ebe7e4;\n*/\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["body {\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 250px 1fr;\n    grid-template-rows: 120px 1fr 50px;\n    height: 100vh;\n    position:relative;\n\n}\n\nh2, h3 {\n    padding: 0;\n    margin: 0;\n}\n\nul {\n    list-style-type: none;\n    padding: 0;\n}\n\nli {\n    padding: 0;\n    margin: 0;\n}\n\nheader {\n    /* height: 120px; */\n    background-color: #323639;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    grid-column-start: 1;\n    grid-column-end: 3;\n  \n    \n}\n\n\nheader h1 {\n    margin-left: 3rem;\n    color: white;\n}\n\n\n.taskBar {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    background-color: #d1cfcf;\n    \n}\n\n\n.taskBarTop {\n    display: flex;\n    flex-direction: column;\n    border: 2px solid black;\n    \n}\n\n\n\n.taskBarContents {\n    display: flex;\n    border: 2px solid black;\n    padding: 0.3rem;\n    gap: 0.5rem;\n    margin: 0.5rem;\n   \n\n}\n\n.projects {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    border: 2px solid black;\n\n\n    \n}\n\n.projectsContent {\n    display: flex;\n    border: 2px solid black;\n    padding: 0.3rem;\n    gap: 0.5rem;\n    margin: 0.5rem;\n   \n\n}\n\n.projects h2 {\n    margin: 1rem;\n    border: 1px solid red;\n\n\n}\n\n.taskView {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    background-color: #f2f0f0;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    padding-top: 1rem;\n    padding-left: 2rem;\n}\n\n.tasks {\n    display: flex;\n    flex-direction: column;\n    border: 2px solid black;\n\n}\n\n.task {\n    display: grid;\n    grid-template-columns: 50px 3fr 1fr;\n    grid-template-rows: 50px 1fr;\n    border: solid red;\n}\n\n.checkMarkImgPNG {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 1;\n    grid-row-end: 2;\n}\n\n.taskTitle {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 1;\n    grid-row-end: 2;\n\n}\n\n.taskDueDate {\n    grid-column-start: 3;\n    grid-column-end: 4;\n    grid-row-start: 1;\n    grid-row-end: 2;\n\n}\n\n.taskDescription {\n    grid-column-start: 1;\n    grid-column-end: 4;\n    grid-row-start: 2;\n    grid-row-end: 3;\n}\n\n\n.addTask {\n    height: 2rem;\n    display: flex;\n    align-items: center;\n}\n\n\n\n\n\n#addProjectForm {\n    display: none;\n    height:300px;\n    width:300px;\n    position:absolute;\n    top: 20%;\n    left: 50%;\n    margin-left: -150px;\n    background-color: #c9c8c7;\n\n}\n\n.addProjectFormUser {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addProjectFormUserHeading h2 {\n\n\n}\n\n\n.addProjectFormUserHeading {\n    background-color:#696868;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 3rem;\n    \n}\n\n.addProjectFormUserBody {\n    display: flex;\n    flex-direction: column;\n}\n\n.addProjectFormUserLiTitle {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addProjectFormUserButtons {\n    margin-top: 100px;\n    align-self: flex-end;\n}\n\n#addTaskForm {\n    display: none;\n    height:500px;\n    width:500px;\n    position:absolute;\n    top: 20%;\n    left: 50%;\n    margin-left: -250px;\n    background-color: #c9c8c7;\n\n}\n\n.addTaskFormUser {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addTaskFormUserHeading {\n    background-color:#696868;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 3rem;\n    \n}\n\n.addTaskFormUserBody {\n    display: flex;\n    flex-direction: column;\n}\n\n.addTaskFormUserLi {\n    display: flex;\n    flex-direction: column;\n\n}\n\n.addTaskFormUserUl input {\n    background-color: white;\n    border: none;\n    \n}\n\n.addTaskFormUserButtons {\n    \n\n}\n\n\n.flagImgPNG1 {\n    background-color: red;\n}\n.flagImgPNG2 {\n    background-color: orange;\n}\n\n.flagImgPNG3 {\n    background-color: skyblue;\n}\n\n\n/* .addProjectFormUserHeadingHTwo {\n    text-align: center;\n} */\n\nfooter {\n    background-color: red;\n    grid-row-start: 3;\n    grid-row-end: 4;\n    grid-column-start: 1;\n    grid-column-end: 3;\n}\n\n\n/*\nbackground-color: #ebe7e4;\n*/\n"],sourceRoot:""}]);const c=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,d){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var c=0;c<this.length;c++){var i=this[c][0];null!=i&&(a[i]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);o&&a[l[0]]||(void 0!==d&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=d),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),d="/*# ".concat(r," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([d]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var d={},a=[],c=0;c<n.length;c++){var i=n[c],s=o.base?i[0]+o.base:i[0],l=d[s]||0,A="".concat(s," ").concat(l);d[s]=l+1;var p=t(A),m={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==p)e[p].references++,e[p].updater(m);else{var u=r(m,o);o.byIndex=c,e.splice(c,0,{identifier:A,updater:u,references:1})}a.push(A)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var d=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<d.length;a++){var c=t(d[a]);e[c].references--}for(var i=o(n,r),s=0;s<d.length;s++){var l=t(d[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}d=i}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var d=t.sourceMap;d&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(d))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var d=e[o]={id:o,exports:{}};return n[o](d,d.exports,t),d.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),d=t(569),a=t.n(d),c=t(565),i=t.n(c),s=t(216),l=t.n(s),A=t(589),p=t.n(A),m=t(426),u={};u.styleTagTransform=p(),u.setAttributes=i(),u.insert=a().bind(null,"head"),u.domAPI=r(),u.insertStyleElement=l(),e()(m.Z,u),m.Z&&m.Z.locals&&m.Z.locals;const g=t.p+"f8ac04aeb3ff24b48be9.png",C=t.p+"28d090802088aff05717.png",B=t.p+"c5874428bc8b8ddbf14a.png",f=t.p+"e9af1827778de11ad1d9.png",h=t.p+"fbfd272aede7d884df15.png",I=t.p+"2546d2ce9bf2dc800b40.png";function k(n){return{title:n,tasks:[]}}function b(n,e,t=4,o){const r=["p1","p2","p3","p4"];let d=r[3];return{title:n,dueDate:e,selectedPriority:d,description:o,inputPriority:n=>{d=r[n-1]},getPriority:()=>d}}console.log("------------------"),function(){const n=function(){let n=function(){let n=[];return n.push(k("inbox")),n.push(k("today")),n.push(k("upcoming")),{getBoard:()=>n,addProject:e=>{n.push(k(e))},addTask:(e,...t)=>{for(let o=0;o<n.length;o++)n[o].title===e&&n[o].tasks.push(b(...t));return n}}}(),e=n.getBoard(),t=n.getBoard()[0];console.log(e);let o=t.tasks;console.log(o);let r=()=>t.title,d=()=>t.tasks;return console.log(d()),n.addTask(r(),"asfed","06/05/25",3,"this is an example of task description"),n.addTask(r(),"a","b","c","d","e"),console.log(t),console.log(t.tasks),console.log(t.tasks[0]),{addTask:(e,t,o,d)=>{n.addTask(r(),e,t,o,d)},getBoard:()=>n.getBoard(),getActiveProjectTitle:r,getActiveProjectTasks:d,switchProjects:n=>{for(let o=0;o<e.length;o++)e[o].title===n&&(t=e[o]);console.log(t),console.log(d())},addProject:e=>{n.addProject(e)}}}(),e=document.querySelector("body"),t=()=>{e.innerHTML="";const t=n.getBoard();console.log(t);let A=n.getActiveProjectTitle();console.log(`this is activeProjectTitle: ${A}`);const p=document.createElement("header");e.appendChild(p);const m=document.createElement("h1");m.textContent="ToDoList",p.appendChild(m);const u=document.createElement("div");u.classList.add("taskBar"),e.appendChild(u);const k=document.createElement("nav");k.classList.add("taskBarTop"),u.appendChild(k);const b=document.createElement("div");b.classList.add("taskBarContents"),b.dataset.projectTitle="inbox",k.appendChild(b);const x=new Image;x.src=g,x.dataset.projectTitle="inbox",b.appendChild(x);const y=document.createElement("h3");y.textContent="Inbox",y.dataset.projectTitle="inbox",b.appendChild(y);const E=document.createElement("div");E.classList.add("taskBarContents"),E.dataset.projectTitle="today",k.appendChild(E);const v=new Image;v.src=C,v.classList.add("todayImgPNG"),E.appendChild(v);const T=document.createElement("h3");T.textContent="Today",E.appendChild(T);const j=document.createElement("div");j.classList.add("taskBarContents"),j.dataset.projectTitle="upcoming",k.appendChild(j);const w=new Image;w.src=B,w.classList.add("upcomingImgPNG"),j.appendChild(w);const P=document.createElement("h3");P.textContent="Upcoming",j.appendChild(P);const F=document.createElement("div");F.classList.add("projects"),u.appendChild(F);const L=document.createElement("h2");L.textContent="Projects",F.appendChild(L);const U=document.createElement("nav");F.appendChild(U);for(let n=3;n<t.length;n++){console.log(t.length);const e=document.createElement("div");e.classList.add("taskBarContents"),e.dataset.projectTitle=`${t[n].title}`,U.appendChild(e);const o=document.createElement("h3");o.textContent=`${t[n].title}`,e.appendChild(o)}const S=document.createElement("div");S.classList.add("projectsContent"),U.appendChild(S);const D=new Image;D.src=f,S.appendChild(D);const G=document.createElement("h3");G.textContent="Add Project",S.appendChild(G),S.addEventListener("click",r);const q=document.createElement("div");q.classList.add("taskView"),e.appendChild(q);const N=document.createElement("h2");N.classList.add("activeProject"),console.log(`this is activeProjectTitle: ${A}`),N.textContent=A,q.appendChild(N);const H=document.createElement("nav");H.classList.add("tasks"),q.appendChild(H),console.log(n.getActiveProjectTitle()),n.getActiveProjectTasks().forEach((n=>{const e=document.createElement("div");e.classList.add("task"),H.appendChild(e);const t=new Image;t.src=h,t.classList.add("checkMarkImgPNG"),e.appendChild(t);const o=document.createElement("h3");o.classList.add("taskTitle"),o.textContent=n.title,e.appendChild(o);const r=document.createElement("div");r.classList.add("taskDueDate"),r.textContent=n.dueDate,e.appendChild(r),e.dataset.priority=n.priority;const d=document.createElement("p");d.classList.add("taskDescription"),d.textContent=n.description,e.appendChild(d)}));const Y=document.createElement("div");Y.classList.add("addTask"),Y.textContent="+ Add Task",H.appendChild(Y),Y.addEventListener("click",c);const M=document.createElement("footer");e.appendChild(M);const W=document.createElement("h3");W.textContent="this is a footer",M.appendChild(W);const R=document.createElement("div");R.id="addProjectForm",e.appendChild(R);const Z=document.createElement("form");Z.classList.add("addProjectFormUser"),R.appendChild(Z);const $=document.createElement("div");$.classList.add("addProjectFormUserHeading"),Z.appendChild($);const V=document.createElement("h2");V.textContent="Add Project",$.appendChild(V);const O=document.createElement("div");O.classList.add("addProjectFormUserBody"),Z.appendChild(O);const X=document.createElement("ul");X.classList.add("addProjectFormUserUl"),O.appendChild(X);const z=document.createElement("li");z.classList.add("addProjectFormUserLiTitle"),X.appendChild(z);const Q=document.createElement("label");Q.setAttribute("for","projectTitle"),Q.textContent="Project Title ",z.appendChild(Q);const J=document.createElement("input");J.classList.add("addProjectFormTitleInput"),J.setAttribute("type","text"),J.setAttribute("name","projectTitle"),z.appendChild(J);const _=document.createElement("div");_.classList.add("addProjectFormUserButtons"),R.appendChild(_);const K=document.createElement("button");K.textContent="Cancel",_.appendChild(K),K.addEventListener("click",d);const nn=document.createElement("button");nn.textContent="Add",_.appendChild(nn),nn.addEventListener("click",a);const en=document.createElement("div");en.id="addTaskForm",e.appendChild(en);const tn=document.createElement("form");tn.classList.add("addTaskFormUser"),en.appendChild(tn);const on=document.createElement("div");on.classList.add("addTaskFormUserHeading"),tn.appendChild(on);const rn=document.createElement("h2");rn.textContent="Add Task",on.appendChild(rn);const dn=document.createElement("div");dn.classList.add("addTaskFormUserBody"),tn.appendChild(dn);const an=document.createElement("ul");an.classList.add("addTaskFormUserUl"),dn.appendChild(an);const cn=document.createElement("li");cn.classList.add("addTaskFormUserLi"),an.appendChild(cn);const sn=document.createElement("label");sn.setAttribute("for","taskTitle"),sn.textContent="Task Title ",cn.appendChild(sn);const ln=document.createElement("input");ln.classList.add("addTaskFormInput"),ln.classList.add("addTaskFormTitleInput"),ln.setAttribute("type","text"),ln.setAttribute("name","taskTitle"),cn.appendChild(ln);const An=document.createElement("li");An.classList.add("addTaskFormUserLi"),an.appendChild(An);const pn=document.createElement("label");pn.setAttribute("for","taskDescription"),pn.textContent="Task Description ",An.appendChild(pn);const mn=document.createElement("input");mn.classList.add("addTaskFormInput"),mn.classList.add("addTaskFormDescriptionInput"),mn.setAttribute("type","text"),mn.setAttribute("name","taskDescription"),An.appendChild(mn);const un=document.createElement("li");un.classList.add("addTaskFormUserLi"),an.appendChild(un);const gn=document.createElement("label");gn.setAttribute("for","taskDueDate"),gn.textContent="Task DueDate ",un.appendChild(gn);const Cn=document.createElement("input");Cn.classList.add("addTaskFormInput"),Cn.classList.add("addTaskFormDueDateInput"),Cn.setAttribute("type","text"),Cn.setAttribute("name","taskDueDate"),un.appendChild(Cn);const Bn=document.createElement("div");Bn.classList.add("addTaskFormUserButtons"),en.appendChild(Bn);const fn=document.createElement("div");fn.classList.add("addTaskFormUserPriority"),Bn.appendChild(fn);const hn=document.createElement("div");fn.appendChild(hn);const In=document.createElement("label");In.textContent="Priority",hn.appendChild(In);const kn=document.createElement("div");fn.appendChild(kn);for(let n=1;n<5;n++){const e=new Image;e.src=I,e.classList.add(`flagImgPNG${n}`),e.dataset.priority=n,e.addEventListener("click",l),kn.appendChild(e)}const bn=document.createElement("button");bn.textContent="Cancel",Bn.appendChild(bn),bn.addEventListener("click",i);const xn=document.createElement("button");xn.textContent="Add",Bn.appendChild(xn),xn.addEventListener("click",s),document.querySelectorAll(".taskBarContents").forEach((n=>{n.addEventListener("click",o)})),console.log("switchProjectClick event has been added")};function o(e){console.log("running switchProjectClick");const o=e.target.dataset.projectTitle;console.log(`${o} has run`),console.log(typeof o),o&&(console.log("did not return "),n.switchProjects(o),t())}const r=function(){document.querySelector("#addProjectForm").style.display="block"};function d(){document.querySelector(".addProjectFormTitleInput").value="",document.querySelector("#addProjectForm").style.display="none"}function a(){const e=document.querySelector(".addProjectFormTitleInput").value;n.addProject(e),t()}function c(){document.querySelector("#addTaskForm").style.display="block"}function i(){const n=document.querySelectorAll(".addTaskFormInput");for(let e of n)e.value="";document.querySelector("#addTaskForm").style.display="none"}function s(){document.querySelector(".addTaskFormTitleInput").value,document.querySelector(".addTaskFormDescriptionInput").value,document.querySelector(".addTaskFormDueDateInput").value,n.addTask()}function l(n){const e=n.target.dataset.priority;if(console.log("selectPriorityClick running"),e)return e}t(),console.log("updateScreen has run")}(),console.log("checking")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QkFFWkMsRUFBU2EsZUFBZUMsR0FFeEJHLElBRUosQ0FHQSxNQUFNNkIsRUFBa0IsV0FDR3hILFNBQVNDLGNBQWMsbUJBQy9CSixNQUFNaUwsUUFBVSxPQUVuQyxFQVFBLFNBQVNoQyxJQUdnQzlJLFNBQVNDLGNBQWMsNkJBQy9COEssTUFBTSxHQUVaL0ssU0FBU0MsY0FBYyxtQkFDL0JKLE1BQU1pTCxRQUFVLE1BQ25DLENBR0EsU0FBUzlCLElBQ0wsTUFDTWpFLEVBRCtCL0UsU0FBU0MsY0FBYyw2QkFDVjhLLE1BRWxEckcsRUFBU0csV0FBV0UsR0FDcEJZLEdBQ0osQ0FFQSxTQUFTcUMsSUFDZWhJLFNBQVNDLGNBQWMsZ0JBQy9CSixNQUFNaUwsUUFBVSxPQUVoQyxDQUdBLFNBQVNOLElBQ0wsTUFBTVEsRUFBb0JoTCxTQUFTMkssaUJBQWlCLHFCQUVwRCxJQUFLLElBQUlNLEtBQW9CRCxFQUN6QkMsRUFBaUJGLE1BQVEsR0FHVC9LLFNBQVNDLGNBQWMsZ0JBQy9CSixNQUFNaUwsUUFBVSxNQUVoQyxDQUdBLFNBQVNKLElBQ2ExSyxTQUFTQyxjQUFjLDBCQUEwQjhLLE1BQzNDL0ssU0FBU0MsY0FBYyxnQ0FBZ0M4SyxNQUMzRC9LLFNBQVNDLGNBQWMsNEJBQTRCOEssTUFHdkVyRyxFQUFTSSxTQUViLENBRUEsU0FBU3dGLEVBQW9CaEssR0FDekIsTUFBTTRLLEVBQWtCNUssRUFBRVIsT0FBT3dHLFFBQVFwQyxTQUd6QyxHQUZBTSxRQUFRQyxJQUFJLCtCQUVQeUcsRUFFTCxPQUFPQSxDQUVYLENBWUF2RixJQUVBbkIsUUFBUUMsSUFBSSx1QkFNaEIsQ0FNQTBHLEdBRUEzRyxRQUFRQyxJQUFJLFciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvbGlzdC8uL3NyYy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90b2RvbGlzdC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly90b2RvbGlzdC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3Qvd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly90b2RvbGlzdC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3RvZG9saXN0L3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL3RvZG9saXN0L3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL3NyYy9zdHlsZS5jc3M/NzE2MyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcImJvZHkge1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMjUwcHggMWZyO1xcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDEyMHB4IDFmciA1MHB4O1xcbiAgICBoZWlnaHQ6IDEwMHZoO1xcbiAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcXG5cXG59XFxuXFxuaDIsIGgzIHtcXG4gICAgcGFkZGluZzogMDtcXG4gICAgbWFyZ2luOiAwO1xcbn1cXG5cXG51bCB7XFxuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcXG4gICAgcGFkZGluZzogMDtcXG59XFxuXFxubGkge1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBtYXJnaW46IDA7XFxufVxcblxcbmhlYWRlciB7XFxuICAgIC8qIGhlaWdodDogMTIwcHg7ICovXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMjM2Mzk7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBncmlkLWNvbHVtbi1zdGFydDogMTtcXG4gICAgZ3JpZC1jb2x1bW4tZW5kOiAzO1xcbiAgXFxuICAgIFxcbn1cXG5cXG5cXG5oZWFkZXIgaDEge1xcbiAgICBtYXJnaW4tbGVmdDogM3JlbTtcXG4gICAgY29sb3I6IHdoaXRlO1xcbn1cXG5cXG5cXG4udGFza0JhciB7XFxuICAgIGdyaWQtY29sdW1uLXN0YXJ0OiAxO1xcbiAgICBncmlkLWNvbHVtbi1lbmQ6IDI7XFxuICAgIGdyaWQtcm93LXN0YXJ0OiAyO1xcbiAgICBncmlkLXJvdy1lbmQ6IDM7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNkMWNmY2Y7XFxuICAgIFxcbn1cXG5cXG5cXG4udGFza0JhclRvcCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrO1xcbiAgICBcXG59XFxuXFxuXFxuXFxuLnRhc2tCYXJDb250ZW50cyB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrO1xcbiAgICBwYWRkaW5nOiAwLjNyZW07XFxuICAgIGdhcDogMC41cmVtO1xcbiAgICBtYXJnaW46IDAuNXJlbTtcXG4gICBcXG5cXG59XFxuXFxuLnByb2plY3RzIHtcXG4gICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDE7XFxuICAgIGdyaWQtY29sdW1uLWVuZDogMjtcXG4gICAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XFxuXFxuXFxuICAgIFxcbn1cXG5cXG4ucHJvamVjdHNDb250ZW50IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XFxuICAgIHBhZGRpbmc6IDAuM3JlbTtcXG4gICAgZ2FwOiAwLjVyZW07XFxuICAgIG1hcmdpbjogMC41cmVtO1xcbiAgIFxcblxcbn1cXG5cXG4ucHJvamVjdHMgaDIge1xcbiAgICBtYXJnaW46IDFyZW07XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJlZDtcXG5cXG5cXG59XFxuXFxuLnRhc2tWaWV3IHtcXG4gICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDI7XFxuICAgIGdyaWQtY29sdW1uLWVuZDogMztcXG4gICAgZ3JpZC1yb3ctc3RhcnQ6IDI7XFxuICAgIGdyaWQtcm93LWVuZDogMztcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjBmMDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiAycmVtO1xcbiAgICBwYWRkaW5nLXRvcDogMXJlbTtcXG4gICAgcGFkZGluZy1sZWZ0OiAycmVtO1xcbn1cXG5cXG4udGFza3Mge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcXG5cXG59XFxuXFxuLnRhc2sge1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDUwcHggM2ZyIDFmcjtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiA1MHB4IDFmcjtcXG4gICAgYm9yZGVyOiBzb2xpZCByZWQ7XFxufVxcblxcbi5jaGVja01hcmtJbWdQTkcge1xcbiAgICBncmlkLWNvbHVtbi1zdGFydDogMTtcXG4gICAgZ3JpZC1jb2x1bW4tZW5kOiAyO1xcbiAgICBncmlkLXJvdy1zdGFydDogMTtcXG4gICAgZ3JpZC1yb3ctZW5kOiAyO1xcbn1cXG5cXG4udGFza1RpdGxlIHtcXG4gICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDI7XFxuICAgIGdyaWQtY29sdW1uLWVuZDogMztcXG4gICAgZ3JpZC1yb3ctc3RhcnQ6IDE7XFxuICAgIGdyaWQtcm93LWVuZDogMjtcXG5cXG59XFxuXFxuLnRhc2tEdWVEYXRlIHtcXG4gICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDM7XFxuICAgIGdyaWQtY29sdW1uLWVuZDogNDtcXG4gICAgZ3JpZC1yb3ctc3RhcnQ6IDE7XFxuICAgIGdyaWQtcm93LWVuZDogMjtcXG5cXG59XFxuXFxuLnRhc2tEZXNjcmlwdGlvbiB7XFxuICAgIGdyaWQtY29sdW1uLXN0YXJ0OiAxO1xcbiAgICBncmlkLWNvbHVtbi1lbmQ6IDQ7XFxuICAgIGdyaWQtcm93LXN0YXJ0OiAyO1xcbiAgICBncmlkLXJvdy1lbmQ6IDM7XFxufVxcblxcblxcbi5hZGRUYXNrIHtcXG4gICAgaGVpZ2h0OiAycmVtO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG5cXG5cXG5cXG5cXG4jYWRkUHJvamVjdEZvcm0ge1xcbiAgICBkaXNwbGF5OiBub25lO1xcbiAgICBoZWlnaHQ6MzAwcHg7XFxuICAgIHdpZHRoOjMwMHB4O1xcbiAgICBwb3NpdGlvbjphYnNvbHV0ZTtcXG4gICAgdG9wOiAyMCU7XFxuICAgIGxlZnQ6IDUwJTtcXG4gICAgbWFyZ2luLWxlZnQ6IC0xNTBweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2M5YzhjNztcXG5cXG59XFxuXFxuLmFkZFByb2plY3RGb3JtVXNlciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuXFxufVxcblxcbi5hZGRQcm9qZWN0Rm9ybVVzZXJIZWFkaW5nIGgyIHtcXG5cXG5cXG59XFxuXFxuXFxuLmFkZFByb2plY3RGb3JtVXNlckhlYWRpbmcge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiM2OTY4Njg7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBoZWlnaHQ6IDNyZW07XFxuICAgIFxcbn1cXG5cXG4uYWRkUHJvamVjdEZvcm1Vc2VyQm9keSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxufVxcblxcbi5hZGRQcm9qZWN0Rm9ybVVzZXJMaVRpdGxlIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG5cXG59XFxuXFxuLmFkZFByb2plY3RGb3JtVXNlckJ1dHRvbnMge1xcbiAgICBtYXJnaW4tdG9wOiAxMDBweDtcXG4gICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XFxufVxcblxcbiNhZGRUYXNrRm9ybSB7XFxuICAgIGRpc3BsYXk6IG5vbmU7XFxuICAgIGhlaWdodDo1MDBweDtcXG4gICAgd2lkdGg6NTAwcHg7XFxuICAgIHBvc2l0aW9uOmFic29sdXRlO1xcbiAgICB0b3A6IDIwJTtcXG4gICAgbGVmdDogNTAlO1xcbiAgICBtYXJnaW4tbGVmdDogLTI1MHB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzljOGM3O1xcblxcbn1cXG5cXG4uYWRkVGFza0Zvcm1Vc2VyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG5cXG59XFxuXFxuLmFkZFRhc2tGb3JtVXNlckhlYWRpbmcge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiM2OTY4Njg7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBoZWlnaHQ6IDNyZW07XFxuICAgIFxcbn1cXG5cXG4uYWRkVGFza0Zvcm1Vc2VyQm9keSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxufVxcblxcbi5hZGRUYXNrRm9ybVVzZXJMaSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuXFxufVxcblxcbi5hZGRUYXNrRm9ybVVzZXJVbCBpbnB1dCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIFxcbn1cXG5cXG4uYWRkVGFza0Zvcm1Vc2VyQnV0dG9ucyB7XFxuICAgIFxcblxcbn1cXG5cXG5cXG4uZmxhZ0ltZ1BORzEge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XFxufVxcbi5mbGFnSW1nUE5HMiB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IG9yYW5nZTtcXG59XFxuXFxuLmZsYWdJbWdQTkczIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogc2t5Ymx1ZTtcXG59XFxuXFxuXFxuLyogLmFkZFByb2plY3RGb3JtVXNlckhlYWRpbmdIVHdvIHtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn0gKi9cXG5cXG5mb290ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XFxuICAgIGdyaWQtcm93LXN0YXJ0OiAzO1xcbiAgICBncmlkLXJvdy1lbmQ6IDQ7XFxuICAgIGdyaWQtY29sdW1uLXN0YXJ0OiAxO1xcbiAgICBncmlkLWNvbHVtbi1lbmQ6IDM7XFxufVxcblxcblxcbi8qXFxuYmFja2dyb3VuZC1jb2xvcjogI2ViZTdlNDtcXG4qL1xcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxTQUFTO0lBQ1QsVUFBVTtJQUNWLGFBQWE7SUFDYixnQ0FBZ0M7SUFDaEMsa0NBQWtDO0lBQ2xDLGFBQWE7SUFDYixpQkFBaUI7O0FBRXJCOztBQUVBO0lBQ0ksVUFBVTtJQUNWLFNBQVM7QUFDYjs7QUFFQTtJQUNJLHFCQUFxQjtJQUNyQixVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxVQUFVO0lBQ1YsU0FBUztBQUNiOztBQUVBO0lBQ0ksbUJBQW1CO0lBQ25CLHlCQUF5QjtJQUN6QixXQUFXO0lBQ1gsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixvQkFBb0I7SUFDcEIsa0JBQWtCOzs7QUFH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ICBwYWRkaW5nOiAwO1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDI1MHB4IDFmcjtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxMjBweCAxZnIgNTBweDtcXG4gICAgaGVpZ2h0OiAxMDB2aDtcXG4gICAgcG9zaXRpb246cmVsYXRpdmU7XFxuXFxufVxcblxcbmgyLCBoMyB7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIG1hcmdpbjogMDtcXG59XFxuXFxudWwge1xcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XFxuICAgIHBhZGRpbmc6IDA7XFxufVxcblxcbmxpIHtcXG4gICAgcGFkZGluZzogMDtcXG4gICAgbWFyZ2luOiAwO1xcbn1cXG5cXG5oZWFkZXIge1xcbiAgICAvKiBoZWlnaHQ6IDEyMHB4OyAqL1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzIzNjM5O1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDE7XFxuICAgIGdyaWQtY29sdW1uLWVuZDogMztcXG4gIFxcbiAgICBcXG59XFxuXFxuXFxuaGVhZGVyIGgxIHtcXG4gICAgbWFyZ2luLWxlZnQ6IDNyZW07XFxuICAgIGNvbG9yOiB3aGl0ZTtcXG59XFxuXFxuXFxuLnRhc2tCYXIge1xcbiAgICBncmlkLWNvbHVtbi1zdGFydDogMTtcXG4gICAgZ3JpZC1jb2x1bW4tZW5kOiAyO1xcbiAgICBncmlkLXJvdy1zdGFydDogMjtcXG4gICAgZ3JpZC1yb3ctZW5kOiAzO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDFjZmNmO1xcbiAgICBcXG59XFxuXFxuXFxuLnRhc2tCYXJUb3Age1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcXG4gICAgXFxufVxcblxcblxcblxcbi50YXNrQmFyQ29udGVudHMge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcXG4gICAgcGFkZGluZzogMC4zcmVtO1xcbiAgICBnYXA6IDAuNXJlbTtcXG4gICAgbWFyZ2luOiAwLjVyZW07XFxuICAgXFxuXFxufVxcblxcbi5wcm9qZWN0cyB7XFxuICAgIGdyaWQtY29sdW1uLXN0YXJ0OiAxO1xcbiAgICBncmlkLWNvbHVtbi1lbmQ6IDI7XFxuICAgIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrO1xcblxcblxcbiAgICBcXG59XFxuXFxuLnByb2plY3RzQ29udGVudCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrO1xcbiAgICBwYWRkaW5nOiAwLjNyZW07XFxuICAgIGdhcDogMC41cmVtO1xcbiAgICBtYXJnaW46IDAuNXJlbTtcXG4gICBcXG5cXG59XFxuXFxuLnByb2plY3RzIGgyIHtcXG4gICAgbWFyZ2luOiAxcmVtO1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZWQ7XFxuXFxuXFxufVxcblxcbi50YXNrVmlldyB7XFxuICAgIGdyaWQtY29sdW1uLXN0YXJ0OiAyO1xcbiAgICBncmlkLWNvbHVtbi1lbmQ6IDM7XFxuICAgIGdyaWQtcm93LXN0YXJ0OiAyO1xcbiAgICBncmlkLXJvdy1lbmQ6IDM7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmMmYwZjA7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGdhcDogMnJlbTtcXG4gICAgcGFkZGluZy10b3A6IDFyZW07XFxuICAgIHBhZGRpbmctbGVmdDogMnJlbTtcXG59XFxuXFxuLnRhc2tzIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XFxuXFxufVxcblxcbi50YXNrIHtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA1MHB4IDNmciAxZnI7XFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogNTBweCAxZnI7XFxuICAgIGJvcmRlcjogc29saWQgcmVkO1xcbn1cXG5cXG4uY2hlY2tNYXJrSW1nUE5HIHtcXG4gICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDE7XFxuICAgIGdyaWQtY29sdW1uLWVuZDogMjtcXG4gICAgZ3JpZC1yb3ctc3RhcnQ6IDE7XFxuICAgIGdyaWQtcm93LWVuZDogMjtcXG59XFxuXFxuLnRhc2tUaXRsZSB7XFxuICAgIGdyaWQtY29sdW1uLXN0YXJ0OiAyO1xcbiAgICBncmlkLWNvbHVtbi1lbmQ6IDM7XFxuICAgIGdyaWQtcm93LXN0YXJ0OiAxO1xcbiAgICBncmlkLXJvdy1lbmQ6IDI7XFxuXFxufVxcblxcbi50YXNrRHVlRGF0ZSB7XFxuICAgIGdyaWQtY29sdW1uLXN0YXJ0OiAzO1xcbiAgICBncmlkLWNvbHVtbi1lbmQ6IDQ7XFxuICAgIGdyaWQtcm93LXN0YXJ0OiAxO1xcbiAgICBncmlkLXJvdy1lbmQ6IDI7XFxuXFxufVxcblxcbi50YXNrRGVzY3JpcHRpb24ge1xcbiAgICBncmlkLWNvbHVtbi1zdGFydDogMTtcXG4gICAgZ3JpZC1jb2x1bW4tZW5kOiA0O1xcbiAgICBncmlkLXJvdy1zdGFydDogMjtcXG4gICAgZ3JpZC1yb3ctZW5kOiAzO1xcbn1cXG5cXG5cXG4uYWRkVGFzayB7XFxuICAgIGhlaWdodDogMnJlbTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuXFxuXFxuXFxuXFxuI2FkZFByb2plY3RGb3JtIHtcXG4gICAgZGlzcGxheTogbm9uZTtcXG4gICAgaGVpZ2h0OjMwMHB4O1xcbiAgICB3aWR0aDozMDBweDtcXG4gICAgcG9zaXRpb246YWJzb2x1dGU7XFxuICAgIHRvcDogMjAlO1xcbiAgICBsZWZ0OiA1MCU7XFxuICAgIG1hcmdpbi1sZWZ0OiAtMTUwcHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNjOWM4Yzc7XFxuXFxufVxcblxcbi5hZGRQcm9qZWN0Rm9ybVVzZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcblxcbn1cXG5cXG4uYWRkUHJvamVjdEZvcm1Vc2VySGVhZGluZyBoMiB7XFxuXFxuXFxufVxcblxcblxcbi5hZGRQcm9qZWN0Rm9ybVVzZXJIZWFkaW5nIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjojNjk2ODY4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgaGVpZ2h0OiAzcmVtO1xcbiAgICBcXG59XFxuXFxuLmFkZFByb2plY3RGb3JtVXNlckJvZHkge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbn1cXG5cXG4uYWRkUHJvamVjdEZvcm1Vc2VyTGlUaXRsZSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuXFxufVxcblxcbi5hZGRQcm9qZWN0Rm9ybVVzZXJCdXR0b25zIHtcXG4gICAgbWFyZ2luLXRvcDogMTAwcHg7XFxuICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xcbn1cXG5cXG4jYWRkVGFza0Zvcm0ge1xcbiAgICBkaXNwbGF5OiBub25lO1xcbiAgICBoZWlnaHQ6NTAwcHg7XFxuICAgIHdpZHRoOjUwMHB4O1xcbiAgICBwb3NpdGlvbjphYnNvbHV0ZTtcXG4gICAgdG9wOiAyMCU7XFxuICAgIGxlZnQ6IDUwJTtcXG4gICAgbWFyZ2luLWxlZnQ6IC0yNTBweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2M5YzhjNztcXG5cXG59XFxuXFxuLmFkZFRhc2tGb3JtVXNlciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuXFxufVxcblxcbi5hZGRUYXNrRm9ybVVzZXJIZWFkaW5nIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjojNjk2ODY4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgaGVpZ2h0OiAzcmVtO1xcbiAgICBcXG59XFxuXFxuLmFkZFRhc2tGb3JtVXNlckJvZHkge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbn1cXG5cXG4uYWRkVGFza0Zvcm1Vc2VyTGkge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcblxcbn1cXG5cXG4uYWRkVGFza0Zvcm1Vc2VyVWwgaW5wdXQge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBcXG59XFxuXFxuLmFkZFRhc2tGb3JtVXNlckJ1dHRvbnMge1xcbiAgICBcXG5cXG59XFxuXFxuXFxuLmZsYWdJbWdQTkcxIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xcbn1cXG4uZmxhZ0ltZ1BORzIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBvcmFuZ2U7XFxufVxcblxcbi5mbGFnSW1nUE5HMyB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHNreWJsdWU7XFxufVxcblxcblxcbi8qIC5hZGRQcm9qZWN0Rm9ybVVzZXJIZWFkaW5nSFR3byB7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG59ICovXFxuXFxuZm9vdGVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xcbiAgICBncmlkLXJvdy1zdGFydDogMztcXG4gICAgZ3JpZC1yb3ctZW5kOiA0O1xcbiAgICBncmlkLWNvbHVtbi1zdGFydDogMTtcXG4gICAgZ3JpZC1jb2x1bW4tZW5kOiAzO1xcbn1cXG5cXG5cXG4vKlxcbmJhY2tncm91bmQtY29sb3I6ICNlYmU3ZTQ7XFxuKi9cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgXCJcIikuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcblxuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG5cbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpOyAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cblxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG5cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG5cbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG5cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cblxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG5cbiAgY3NzICs9IG9iai5jc3M7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyY1xuXHRpZiAoIXNjcmlwdFVybCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0aWYoc2NyaXB0cy5sZW5ndGgpIHNjcmlwdFVybCA9IHNjcmlwdHNbc2NyaXB0cy5sZW5ndGggLSAxXS5zcmNcblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCIndXNlIHN0cmljdCdcblxuaW1wb3J0ICcuL3N0eWxlLmNzcyc7XG5pbXBvcnQgaW5ib3hJbWcgZnJvbSAnLi9pbWcvaW5ib3gucG5nJztcbmltcG9ydCB0b2RheUltZyBmcm9tICcuL2ltZy90b2RheS5wbmcnO1xuaW1wb3J0IHVwY29taW5nSW1nIGZyb20gJy4vaW1nL3VwY29taW5nLnBuZyc7XG5pbXBvcnQgYWRkUHJvamVjdEltZyBmcm9tICcuL2ltZy9hZGRQcm9qZWN0LnBuZyc7XG5pbXBvcnQgY2hlY2tNYXJrSW1nIGZyb20gJy4vaW1nL2NoZWNrTWFyay5wbmcnO1xuaW1wb3J0IGZsYWdJbWcgZnJvbSAnLi9pbWcvZmxhZy5wbmcnO1xuXG5cblxuXG4vLy8vc3RhdGUgb2YgdGhlIGJvYXJkLi4uLiBcbmZ1bmN0aW9uIEJvYXJkKCkge1xuXG4gICAgLy8vL2luaXRpYWwgc2V0IHVwIFxuICAgIGxldCBib2FyZCA9IFtdO1xuICAgIGJvYXJkLnB1c2goUHJvamVjdCgnaW5ib3gnLCAwKSk7XG4gICAgYm9hcmQucHVzaChQcm9qZWN0KCd0b2RheScsIDEpKTtcbiAgICBib2FyZC5wdXNoKFByb2plY3QoJ3VwY29taW5nJywgMikpO1xuIFxuXG4gICAgLy8gY29uc3QgYWRkUHJvamVjdCA9ICgpID0+IHtcbiAgICAvLyB9XG5cbiAgICBjb25zdCBhZGRQcm9qZWN0ID0gKHRpdGxlKSA9PiB7XG4gICAgICAgIGJvYXJkLnB1c2goUHJvamVjdCh0aXRsZSkpXG4gICAgfVxuXG4gICAgY29uc3QgZ2V0UHJvamVjdCA9IChwcm9qZWN0VGl0bGUpID0+IHtcbiAgICAgICAgY29uc3QgYWN0aXZlUHJvamVjdCA9IGJvYXJkLmZpbHRlcigocHJvamVjdCkgPT4gcHJvamVjdC50aXRsZSA9PT0gcHJvamVjdFRpdGxlKTtcbiAgICAgICAgcmV0dXJuIGFjdGl2ZVByb2plY3QgXG4gICAgfVxuXG4gICAgY29uc3QgYWRkVGFzayA9IChwcm9qZWN0VGl0bGUsIC4uLnRhc2tJbnB1dHMpID0+IHtcbiAgICAgICAgLy8gY29uc3QgcHJvamVjdFRpdGxlID0gcHJvamVjdFRpdGxlO1xuXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpPCBib2FyZC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKGJvYXJkW2ldLnRpdGxlID09PSBwcm9qZWN0VGl0bGUpIHtcbiAgICAgICAgICAgICAgICBib2FyZFtpXS50YXNrcy5wdXNoKFRhc2soLi4udGFza0lucHV0cykpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuXG5cbiAgICAgICAgcmV0dXJuIGJvYXJkICAgXG4gICAgfVxuXG4gICAgLy8gY29uc3QgaW5wdXRUYXNrUHJpb3JpdHkgPSAocHJvamVjdFRpdGxlLCB0YXNrVGl0bGUsIHByaW9yaXR5KSA9PiB7XG4gICAgLy8gICAgIC8qXG4gICAgLy8gICAgIDEuIHNlbGVjdCBjb3JyZWN0IHRhc2tcbiAgICAvLyAgICAgMi4gaW5wdXQgaW5kZXggdG8gcHV0IGludG8gdGFzay5DaGFuZ2VQcmlvcml0eShpKTtcbiAgICAvLyAgICAgKi9cbiAgICAgICAgXG5cbiAgICAvLyAgICAgZm9yIChsZXQgaSA9IDA7IGk8IGJvYXJkLmxlbmd0aDsgaSsrKSB7XG4gICAgLy8gICAgICAgICBpZiAoYm9hcmRbaV0udGl0bGUgPT09IHByb2plY3RUaXRsZSkge1xuICAgIC8vICAgICAgICAgICAgIGZvciAobGV0IGo9MDsgaiA8IGJvYXJkW2ldLnRhc2tzLmxlbmd0aDsgaisrKSB7XG4gICAgLy8gICAgICAgICAgICAgICAgIGlmIChib2FyZFtpXS50aXRsZSA9PT0gdGFza1RpdGxlKSB7XG4gICAgLy8gICAgICAgICAgICAgICAgICAgICBib2FyZFxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgLy8gICAgICAgICAgICAgICAgIH1cbiAgICAvLyAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgLy8gICAgICAgICB9XG4gICAgLy8gICAgIH1cbiAgICAgICAgXG4gICAgLy8gfVxuXG4gICAgLy8gY29uc3QgYWRkVGFzayA9IChwcm9qZWN0VGl0bGUpID0+IHtcbiAgICAvLyAgICAgLy8gY29uc3QgcGlja2VkUHJvamVjdCA9IGJvYXJkLmZpbHRlcigocHJvamVjdCkgPT4gcHJvamVjdC50aXRsZSA9PT0gcHJvamVjdFRpdGxlKVxuICAgICAgICBcbiAgICAvLyAgICAgZm9yIChjb25zdCBwcm9qZWN0IG9mIGJvYXJkKSB7XG4gICAgLy8gICAgICAgICBpZiAocHJvamVjdC50aXRsZSA9PT0gcHJvamVjdFRpdGxlKSB7XG4gICAgLy8gICAgICAgICAgICAgcHJvamVjdC5wdXNoKHRhc2spXG4gICAgLy8gICAgICAgICB9XG4gICAgLy8gICAgIH1cbiAgICAgICAgXG4gICAgICAgIFxuICAgIC8vIH1cblxuICAgIGNvbnN0IGdldEJvYXJkID0gKCkgPT4gYm9hcmQ7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICBnZXRCb2FyZCwgXG4gICAgICAgIGFkZFByb2plY3QsXG4gICAgICAgIGFkZFRhc2tcbiAgICB9XG5cbn1cblxuXG5cbmZ1bmN0aW9uIFByb2plY3QodGl0bGUpIHtcbiAgICBsZXQgdGFza3MgPSBbXTtcblxuICAgIC8vIGNvbnN0IGFkZFRhc2tUb1Byb2plY3QgPSBwcm9qZWN0cy5wdXNoKFRhc2sodGl0bGUsIGRlc2NyaXB0aW9uLCBkdWVkYXRlLCBwcmlvcml0eSwgZGVzY3JpcHRpb24pKTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIHRpdGxlOiB0aXRsZSxcbiAgICAgICAgLy8gcHJvamVjdElEOiBwcm9qZWN0SUQsXG4gICAgICAgIHRhc2tzXG4gICAgfVxufVxuXG5cblxuZnVuY3Rpb24gVGFzayh0aXRsZSwgZHVlRGF0ZSwgcHJpb3JpdHkgPSA0LCBkZXNjcmlwdGlvbikge1xuXG4gICAgY29uc3QgcHJpb3JpdHlMaXN0ID0gW1xuICAgICAgICAncDEnLFxuICAgICAgICAncDInLFxuICAgICAgICAncDMnLFxuICAgICAgICAncDQnXG4gICAgXVxuXG4gICAgbGV0IHNlbGVjdGVkUHJpb3JpdHkgPSBwcmlvcml0eUxpc3RbM107XG5cbiAgICBjb25zdCBpbnB1dFByaW9yaXR5ID0gKHByaW9yaXR5KSA9PiB7XG4gICAgICAgIHNlbGVjdGVkUHJpb3JpdHkgPSBwcmlvcml0eUxpc3RbcHJpb3JpdHktMV1cbiAgICB9XG5cblxuICAgIGNvbnN0IGdldFByaW9yaXR5ID0gKCkgPT4gc2VsZWN0ZWRQcmlvcml0eTtcblxuICBcblxuICAgIHJldHVybiB7XG4gICAgICAgIHRpdGxlOiB0aXRsZSxcbiAgICAgICAgZHVlRGF0ZTogZHVlRGF0ZSxcbiAgICAgICAgc2VsZWN0ZWRQcmlvcml0eSxcbiAgICAgICAgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uLFxuICAgICAgICBpbnB1dFByaW9yaXR5LFxuICAgICAgICBnZXRQcmlvcml0eSxcbiAgICB9XG5cblxuXG59XG5cblxuXG5mdW5jdGlvbiBDb250cm9sbGVyKCkge1xuICAgIC8vLy9pbml0aWFsIHNldCB1cFxuICAgIGxldCBib2FyZCA9IEJvYXJkKCk7XG5cbiAgICBsZXQgYm9hcmRCb2FyZCA9IGJvYXJkLmdldEJvYXJkKCk7XG4gICAgbGV0IGFjdGl2ZVByb2plY3QgPSBib2FyZC5nZXRCb2FyZCgpWzBdO1xuXG5cblxuICAgIGNvbnNvbGUubG9nKGJvYXJkQm9hcmQpO1xuICAgIFxuICAgICAgIFxuXG4gICAgbGV0IGFjdGl2ZVRhc2sgPSBhY3RpdmVQcm9qZWN0LnRhc2tzO1xuICAgIGNvbnNvbGUubG9nKGFjdGl2ZVRhc2spO1xuICAgICAgICBcbiAgICBsZXQgZ2V0QWN0aXZlUHJvamVjdFRpdGxlID0gKCkgPT4gYWN0aXZlUHJvamVjdC50aXRsZTsgXG5cbiAgICBsZXQgZ2V0QWN0aXZlUHJvamVjdFRhc2tzID0gKCkgPT4gYWN0aXZlUHJvamVjdC50YXNrcztcbiAgICBjb25zb2xlLmxvZyhnZXRBY3RpdmVQcm9qZWN0VGFza3MoKSk7XG5cbiAgICBib2FyZC5hZGRUYXNrKGdldEFjdGl2ZVByb2plY3RUaXRsZSgpLCAnYXNmZWQnLCcwNi8wNS8yNScsMywgJ3RoaXMgaXMgYW4gZXhhbXBsZSBvZiB0YXNrIGRlc2NyaXB0aW9uJyk7XG4gICAgYm9hcmQuYWRkVGFzayhnZXRBY3RpdmVQcm9qZWN0VGl0bGUoKSwgJ2EnLCdiJywnYycsJ2QnLCdlJyk7XG5cbiAgICBjb25zb2xlLmxvZyhhY3RpdmVQcm9qZWN0KTtcblxuICAgIC8vIGZvciAobGV0IHRhc2sgb2YgYWN0aXZlUHJvamVjdC50YXNrcykge1xuICAgIC8vICAgICBjb25zb2xlLmxvZyh0YXNrLnRpdGxlKTtcbiAgICAgICAgXG4gICAgLy8gfVxuXG4gICAgY29uc29sZS5sb2coYWN0aXZlUHJvamVjdC50YXNrcyk7XG4gICAgY29uc29sZS5sb2coYWN0aXZlUHJvamVjdC50YXNrc1swXSk7XG5cblxuXG4gICAgY29uc3Qgc3dpdGNoUHJvamVjdHMgPSAoc2VsZWN0ZWRQcm9qZWN0VGl0bGUpID0+IHtcbiAgICAgICAgXG4gICAgICAgIGZvciAobGV0IGk9MDsgaSA8IGJvYXJkQm9hcmQubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChib2FyZEJvYXJkW2ldLnRpdGxlID09PSBzZWxlY3RlZFByb2plY3RUaXRsZSkge1xuICAgICAgIFxuICAgICAgICAgICAgICAgIGFjdGl2ZVByb2plY3QgPSBib2FyZEJvYXJkW2ldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNvbnNvbGUubG9nKGFjdGl2ZVByb2plY3QpO1xuICAgICAgICBjb25zb2xlLmxvZyhnZXRBY3RpdmVQcm9qZWN0VGFza3MoKSk7XG4gICAgfVxuXG5cbiAgICBjb25zdCBzd2l0Y2hUYXNrcyA9IChzZWxlY3RlZFRhc2tUaXRsZSkgPT4ge1xuICAgICAgICBmb3IgKGxldCBpPTA7IGkgPCBnZXRBY3RpdmVQcm9qZWN0VGFza3MoKS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKGdldEFjdGl2ZVByb2plY3RUYXNrcygpW2ldLnRpdGxlID09PSBzZWxlY3RlZFRhc2tUaXRsZSkge1xuXG4gICAgICAgICAgICAgICAgYWN0aXZlVGFzayA9IGdldEFjdGl2ZVByb2plY3RUYXNrcygpW2ldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG5cbiAgICBjb25zdCBhZGRUYXNrID0gKHRpdGxlLCBkdWVEYXRlLCBwcmlvcml0eSwgZGVzY3JpcHRpb24pID0+IHtcbiAgICAgICAgYm9hcmQuYWRkVGFzayhnZXRBY3RpdmVQcm9qZWN0VGl0bGUoKSwgdGl0bGUsIGR1ZURhdGUsIHByaW9yaXR5LCBkZXNjcmlwdGlvbilcbiAgICAgICAgXG4gICAgfTtcblxuICAgIGNvbnN0IGFkZFByb2plY3QgPSAocHJvamVjdFRpdGxlKSA9PiB7XG4gICAgICAgIGJvYXJkLmFkZFByb2plY3QocHJvamVjdFRpdGxlKVxuICAgIH1cblxuXG4gICAgY29uc3QgZ2V0Qm9hcmQgPSAoKSA9PiBib2FyZC5nZXRCb2FyZCgpO1xuXG5cblxuICAgIHJldHVybiB7XG4gICAgICAgIGFkZFRhc2ssXG4gICAgICAgIGdldEJvYXJkLFxuICAgICAgICBnZXRBY3RpdmVQcm9qZWN0VGl0bGUsXG4gICAgICAgIGdldEFjdGl2ZVByb2plY3RUYXNrcyxcbiAgICAgICAgc3dpdGNoUHJvamVjdHMsXG4gICAgICAgIGFkZFByb2plY3RcbiAgICB9XG4gICAgIFxufVxuXG5cbi8vIGNvbnN0IGJ1dHQgPSBUYXNrKCdhJywgJ2InLCAnZCcsIDEsICdhc2RmJylcbi8vIGNvbnNvbGUubG9nKGJ1dHQpO1xuXG4vLyBjb25zdCBib2FyZCA9IEJvYXJkKCk7XG4vLyBjb25zb2xlLmxvZyhib2FyZC5nZXRCb2FyZCgpKTtcblxuXG5mdW5jdGlvbiBzY3JlZW5Db250cm9sbGVyKCkge1xuXG4gICAgY29uc3QgdG9Eb0xpc3QgPSBDb250cm9sbGVyKCk7XG5cblxuICAgIC8vLy9zZWxlY3RpbmdcbiAgICBjb25zdCBib2R5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYm9keScpICBcblxuICAgIC8vIGNvbnN0IGJvYXJkID0gdG9Eb0xpc3QuZ2V0Qm9hcmQoKTtcbiAgICAvLyBjb25zb2xlLmxvZyhib2FyZCk7XG4gICAgXG5cbiAgICBjb25zdCB1cGRhdGVTY3JlZW4gPSAoKSA9PiB7XG4gICAgICAgIC8vLy9DTEVBUi8vLy9cbiAgICAgICAgYm9keS5pbm5lckhUTUwgPVwiXCI7XG5cbiAgICAgICAgLy8vL0dFVCBTVFVGRiBGUk9NIEJPQVJELy8vL1xuICAgICAgICBjb25zdCBib2FyZCA9IHRvRG9MaXN0LmdldEJvYXJkKCk7XG4gICAgICAgIGNvbnNvbGUubG9nKGJvYXJkKTtcbiAgICAgICAgICAgXG5cbiAgICAgICAgbGV0IGFjdGl2ZVByb2plY3RUaXRsZSA9IHRvRG9MaXN0LmdldEFjdGl2ZVByb2plY3RUaXRsZSgpO1xuICAgICAgICBjb25zb2xlLmxvZyhgdGhpcyBpcyBhY3RpdmVQcm9qZWN0VGl0bGU6ICR7YWN0aXZlUHJvamVjdFRpdGxlfWApO1xuICAgICAgICBcbiAgIFxuICAgIFxuICAgICAgICAvLy8vY3JlYXRlIGhlYWRlclxuICAgICAgICBjb25zdCBoZWFkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoZWFkZXInKTtcbiAgICAgICAgYm9keS5hcHBlbmRDaGlsZChoZWFkZXIpO1xuICAgIFxuICAgICAgICBjb25zdCBoZWFkZXJUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gxJyk7XG4gICAgICAgIGhlYWRlclRpdGxlLnRleHRDb250ZW50ID0gJ1RvRG9MaXN0J1xuICAgICAgICBoZWFkZXIuYXBwZW5kQ2hpbGQoaGVhZGVyVGl0bGUpO1xuICAgIFxuICAgICAgICAvLyBjb25zdCBoZWFkZXJUaXRsZUhPbmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMScpO1xuICAgICAgICAvLyBoZWFkZXJUaXRsZUhPbmUudGV4dENvbnRlbnQgPSAnVG9Eb0xpc3QnXG4gICAgICAgIC8vIGhlYWRlclRpdGxlLmFwcGVuZENoaWxkKGhlYWRlclRpdGxlSE9uZSk7XG4gICAgXG4gICAgXG4gICAgICAgIC8vLy9jcmVhdGUgdGFza2JhciBcbiAgICAgICAgY29uc3QgdGFza0JhciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICB0YXNrQmFyLmNsYXNzTGlzdC5hZGQoJ3Rhc2tCYXInKTtcbiAgICAgICAgYm9keS5hcHBlbmRDaGlsZCh0YXNrQmFyKTtcbiAgICBcbiAgICBcbiAgICAgICAgLy8vL3Rhc2tCYXJUb3BcbiAgICAgICAgY29uc3QgdGFza0JhclRvcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ25hdicpO1xuICAgICAgICB0YXNrQmFyVG9wLmNsYXNzTGlzdC5hZGQoJ3Rhc2tCYXJUb3AnKTtcbiAgICAgICAgdGFza0Jhci5hcHBlbmRDaGlsZCh0YXNrQmFyVG9wKTtcbiAgICBcbiAgICAgICAgY29uc3QgaW5ib3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgaW5ib3guY2xhc3NMaXN0LmFkZCgndGFza0JhckNvbnRlbnRzJyk7XG4gICAgICAgIGluYm94LmRhdGFzZXQucHJvamVjdFRpdGxlID0gJ2luYm94JztcbiAgICBcbiAgICAgICAgdGFza0JhclRvcC5hcHBlbmRDaGlsZChpbmJveCk7XG4gICAgXG4gICAgICAgIGNvbnN0IGluYm94SW1nUE5HID0gbmV3IEltYWdlKCk7XG4gICAgICAgIGluYm94SW1nUE5HLnNyYyA9IGluYm94SW1nO1xuICAgICAgICBpbmJveEltZ1BORy5kYXRhc2V0LnByb2plY3RUaXRsZSA9ICdpbmJveCc7XG4gICAgICAgIGluYm94LmFwcGVuZENoaWxkKGluYm94SW1nUE5HKTtcbiAgICBcbiAgICAgICAgY29uc3QgaW5ib3hIVGhyZWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMycpO1xuICAgICAgICBpbmJveEhUaHJlZS50ZXh0Q29udGVudCA9ICdJbmJveCdcbiAgICAgICAgaW5ib3hIVGhyZWUuZGF0YXNldC5wcm9qZWN0VGl0bGUgPSAnaW5ib3gnO1xuICAgICAgICBpbmJveC5hcHBlbmRDaGlsZChpbmJveEhUaHJlZSk7XG4gICAgXG4gICAgXG4gICAgICAgIGNvbnN0IHRvZGF5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHRvZGF5LmNsYXNzTGlzdC5hZGQoJ3Rhc2tCYXJDb250ZW50cycpO1xuICAgICAgICB0b2RheS5kYXRhc2V0LnByb2plY3RUaXRsZSA9ICd0b2RheSc7XG4gICAgICAgIHRhc2tCYXJUb3AuYXBwZW5kQ2hpbGQodG9kYXkpO1xuICAgIFxuICAgICAgICBjb25zdCB0b2RheUltZ1BORyA9IG5ldyBJbWFnZSgpO1xuICAgICAgICB0b2RheUltZ1BORy5zcmMgPSB0b2RheUltZztcbiAgICAgICAgdG9kYXlJbWdQTkcuY2xhc3NMaXN0LmFkZCgndG9kYXlJbWdQTkcnKVxuICAgICAgICB0b2RheS5hcHBlbmRDaGlsZCh0b2RheUltZ1BORyk7XG4gICAgXG4gICAgXG4gICAgICAgIGNvbnN0IHRvZGF5SFRocmVlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDMnKTtcbiAgICAgICAgdG9kYXlIVGhyZWUudGV4dENvbnRlbnQgPSAnVG9kYXknXG4gICAgICAgIHRvZGF5LmFwcGVuZENoaWxkKHRvZGF5SFRocmVlKTtcbiAgICBcbiAgICBcbiAgICAgICAgY29uc3QgdXBjb21pbmcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgdXBjb21pbmcuY2xhc3NMaXN0LmFkZCgndGFza0JhckNvbnRlbnRzJyk7XG4gICAgICAgIHVwY29taW5nLmRhdGFzZXQucHJvamVjdFRpdGxlID0gJ3VwY29taW5nJztcbiAgICAgICAgdGFza0JhclRvcC5hcHBlbmRDaGlsZCh1cGNvbWluZyk7XG4gICAgXG4gICAgXG4gICAgICAgIGNvbnN0IHVwY29taW5nSW1nUE5HID0gbmV3IEltYWdlKCk7XG4gICAgICAgIHVwY29taW5nSW1nUE5HLnNyYyA9IHVwY29taW5nSW1nO1xuICAgICAgICB1cGNvbWluZ0ltZ1BORy5jbGFzc0xpc3QuYWRkKCd1cGNvbWluZ0ltZ1BORycpO1xuICAgICAgICB1cGNvbWluZy5hcHBlbmRDaGlsZCh1cGNvbWluZ0ltZ1BORyk7XG4gICAgXG4gICAgXG4gICAgICAgIGNvbnN0IHVwY29taW5nSFRocmVlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDMnKTtcbiAgICAgICAgdXBjb21pbmdIVGhyZWUudGV4dENvbnRlbnQgPSAnVXBjb21pbmcnXG4gICAgICAgIHVwY29taW5nLmFwcGVuZENoaWxkKHVwY29taW5nSFRocmVlKTtcbiAgICBcbiAgICBcbiAgICAgICAgLy8vL2NyZWF0ZSBQcm9qZWN0c1xuICAgICAgICBjb25zdCBwcm9qZWN0cyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBwcm9qZWN0cy5jbGFzc0xpc3QuYWRkKCdwcm9qZWN0cycpO1xuICAgICAgICB0YXNrQmFyLmFwcGVuZENoaWxkKHByb2plY3RzKTtcbiAgICBcbiAgICAgICAgY29uc3QgcHJvamVjdHNIVHdvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDInKTtcbiAgICAgICAgLy8gcHJvamVjdHNIVHdvLmNsYXNzTGlzdC5hZGQoJ3Byb2plY3RzQ29udGVudCcpXG4gICAgICAgIHByb2plY3RzSFR3by50ZXh0Q29udGVudCA9IFwiUHJvamVjdHNcIlxuICAgICAgICBwcm9qZWN0cy5hcHBlbmRDaGlsZChwcm9qZWN0c0hUd28pO1xuICAgIFxuICAgICAgICBjb25zdCBwcm9qZWN0c05hdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ25hdicpO1xuICAgICAgICBwcm9qZWN0cy5hcHBlbmRDaGlsZChwcm9qZWN0c05hdik7XG5cbiAgICAgICAgLy8vL2NyZWF0ZSBET00gZWxlbWVudHMgZm9yIHByb2plY3RzIFxuICAgICAgICBmb3IgKGxldCBpPTM7IGkgPCBib2FyZC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgY29uc29sZS5sb2coYm9hcmQubGVuZ3RoKTtcbiAgICAgICAgICAgIGNvbnN0IHByb2plY3RzTmF2UHJvamVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgcHJvamVjdHNOYXZQcm9qZWN0LmNsYXNzTGlzdC5hZGQoJ3Rhc2tCYXJDb250ZW50cycpO1xuXG4gICAgICAgICAgICAvLy8vdXNlciBpbnB1dCB0aXRsZSBuZWVkZWQgaGVyZS4uLi4gdXNlIHRpdGxlIHRvIHN3aXRjaCBiZXR3ZWVuIHRhc2tzIFxuICAgICAgICAgICAgcHJvamVjdHNOYXZQcm9qZWN0LmRhdGFzZXQucHJvamVjdFRpdGxlID0gYCR7Ym9hcmRbaV0udGl0bGV9YFxuICAgICAgICAgXG4gICAgICAgICAgICAvLyAvLy8vcHJvamVjdFRhcmdldElEIGlzIHdoYXQgd2lsbCBiZSB1c2VkIHRvIHN3aXRjaCBiZXR3ZWVuIHRhc2tWaWV3IFxuICAgICAgICAgICAgLy8gcHJvamVjdHNOYXZQcm9qZWN0LmRhdGFzZXQucHJvamVjdFRhcmdldElEID0gYCR7aX1gO1xuXG5cbiAgICAgICAgICAgIHByb2plY3RzTmF2LmFwcGVuZENoaWxkKHByb2plY3RzTmF2UHJvamVjdCk7XG5cblxuICAgICAgICAgICAgY29uc3QgcHJvamVjdE5hdlByb2plY3RIVGhyZWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMycpO1xuICAgICAgICAgICAgcHJvamVjdE5hdlByb2plY3RIVGhyZWUudGV4dENvbnRlbnQgPSBgJHtib2FyZFtpXS50aXRsZX1gO1xuICAgICAgICAgICAgcHJvamVjdHNOYXZQcm9qZWN0LmFwcGVuZENoaWxkKHByb2plY3ROYXZQcm9qZWN0SFRocmVlKTtcblxuXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICB9XG4gICAgICAgIFxuICAgIFxuICAgICAgICBjb25zdCBhZGRQcm9qZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGFkZFByb2plY3QuY2xhc3NMaXN0LmFkZCgncHJvamVjdHNDb250ZW50Jyk7XG4gICAgICAgIHByb2plY3RzTmF2LmFwcGVuZENoaWxkKGFkZFByb2plY3QpO1xuICAgIFxuICAgICAgICBjb25zdCBhZGRQcm9qZWN0SW1nUE5HID0gbmV3IEltYWdlKCk7XG4gICAgICAgIGFkZFByb2plY3RJbWdQTkcuc3JjID0gYWRkUHJvamVjdEltZztcbiAgICAgICAgYWRkUHJvamVjdC5hcHBlbmRDaGlsZChhZGRQcm9qZWN0SW1nUE5HKTtcbiAgICBcbiAgICAgICAgY29uc3QgYWRkUHJvamVjdEhUaHJlZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gzJyk7XG4gICAgICAgIGFkZFByb2plY3RIVGhyZWUudGV4dENvbnRlbnQgPSAnQWRkIFByb2plY3QnO1xuICAgICAgICBhZGRQcm9qZWN0LmFwcGVuZENoaWxkKGFkZFByb2plY3RIVGhyZWUpO1xuXG4gICAgICAgIGFkZFByb2plY3QuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBvcGVuUHJvamVjdEZvcm0pO1xuICAgICAgICBcblxuXG4gICAgICAgIC8vLy9jcmVhdGUgVEFTS1ZJRVcvLy8vXG4gICAgICAgIGNvbnN0IHRhc2tWaWV3ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHRhc2tWaWV3LmNsYXNzTGlzdC5hZGQoJ3Rhc2tWaWV3Jyk7XG4gICAgICAgIGJvZHkuYXBwZW5kQ2hpbGQodGFza1ZpZXcpO1xuXG4gICAgICAgIC8vLy9zaG93aW5nIHdoaWNoIHByb2plY3QgaXMgYWN0aXZlXG4gICAgICAgIGNvbnN0IGFjdGl2ZVByb2plY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMicpO1xuICAgICAgICBhY3RpdmVQcm9qZWN0LmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZVByb2plY3QnKTtcbiAgICAgICAgY29uc29sZS5sb2coYHRoaXMgaXMgYWN0aXZlUHJvamVjdFRpdGxlOiAke2FjdGl2ZVByb2plY3RUaXRsZX1gKTtcbiAgICAgICAgXG4gICAgICAgIGFjdGl2ZVByb2plY3QudGV4dENvbnRlbnQgPSBhY3RpdmVQcm9qZWN0VGl0bGU7XG4gICAgICAgIHRhc2tWaWV3LmFwcGVuZENoaWxkKGFjdGl2ZVByb2plY3QpO1xuXG5cbiAgICAgICAgLy8vL3Rhc2tzIFxuICAgICAgICBjb25zdCB0YXNrcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ25hdicpOyBcbiAgICAgICAgdGFza3MuY2xhc3NMaXN0LmFkZCgndGFza3MnKTtcbiAgICAgICAgdGFza1ZpZXcuYXBwZW5kQ2hpbGQodGFza3MpO1xuXG4gICAgICAgIGNvbnNvbGUubG9nKHRvRG9MaXN0LmdldEFjdGl2ZVByb2plY3RUaXRsZSgpKTtcbiAgICAgICAgXG5cbiAgICAgICAgLy8vL2NyZWF0ZSB0YXNrcyBsaXN0IFxuICAgICAgICB0b0RvTGlzdC5nZXRBY3RpdmVQcm9qZWN0VGFza3MoKS5mb3JFYWNoKChhY3RpdmVUYXNrKSA9PiB7XG5cbiAgICAgICAgICAgIC8vLy9jcmVhdGUgdGFzayBcbiAgICAgICAgICAgIGNvbnN0IHRhc2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgIHRhc2suY2xhc3NMaXN0LmFkZCgndGFzaycpO1xuICAgICAgICAgICAgdGFza3MuYXBwZW5kQ2hpbGQodGFzayk7XG5cbiAgICAgICAgICAgIGNvbnN0IGNoZWNrTWFya0ltZ1BORyA9IG5ldyBJbWFnZSgpOyAgICAgICAgICAgIFxuICAgICAgICAgICAgY2hlY2tNYXJrSW1nUE5HLnNyYyA9IGNoZWNrTWFya0ltZztcbiAgICAgICAgICAgIGNoZWNrTWFya0ltZ1BORy5jbGFzc0xpc3QuYWRkKCdjaGVja01hcmtJbWdQTkcnKVxuICAgICAgICAgICAgdGFzay5hcHBlbmRDaGlsZChjaGVja01hcmtJbWdQTkcpO1xuXG4gICAgICAgICAgICBjb25zdCB0YXNrVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMycpO1xuICAgICAgICAgICAgdGFza1RpdGxlLmNsYXNzTGlzdC5hZGQoJ3Rhc2tUaXRsZScpO1xuICAgICAgICAgICAgdGFza1RpdGxlLnRleHRDb250ZW50ID0gYWN0aXZlVGFzay50aXRsZTtcbiAgICAgICAgICAgIHRhc2suYXBwZW5kQ2hpbGQodGFza1RpdGxlKTtcblxuICAgICAgICAgICAgY29uc3QgdGFza0R1ZURhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgIHRhc2tEdWVEYXRlLmNsYXNzTGlzdC5hZGQoJ3Rhc2tEdWVEYXRlJyk7XG4gICAgICAgICAgICB0YXNrRHVlRGF0ZS50ZXh0Q29udGVudCA9IGFjdGl2ZVRhc2suZHVlRGF0ZTtcbiAgICAgICAgICAgIHRhc2suYXBwZW5kQ2hpbGQodGFza0R1ZURhdGUpO1xuXG4gICAgICAgICAgICB0YXNrLmRhdGFzZXQucHJpb3JpdHkgPSBhY3RpdmVUYXNrLnByaW9yaXR5O1xuXG4gICAgICAgICAgICBjb25zdCB0YXNrRGVzY3JpcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gICAgICAgICAgICB0YXNrRGVzY3JpcHRpb24uY2xhc3NMaXN0LmFkZCgndGFza0Rlc2NyaXB0aW9uJyk7XG4gICAgICAgICAgICB0YXNrRGVzY3JpcHRpb24udGV4dENvbnRlbnQgPSBhY3RpdmVUYXNrLmRlc2NyaXB0aW9uO1xuICAgICAgICAgICAgdGFzay5hcHBlbmRDaGlsZCh0YXNrRGVzY3JpcHRpb24pO1xuICAgICAgICAgICAgXG5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gY29uc3QgcHJpb3JpdHkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgIC8vIHByaW9yaXR5LmNsYXNzTGlzdC5hZGQoJ3ByaW9yaXR5Jyk7XG4gICAgICAgICAgICAvLyBwcmlvcml0eS50ZXh0Q29udGVudCA9IGFjdGl2ZVRhc2sucHJpb3JpdHk7IFxuICAgICAgICAgICAgLy8gdGFzay5hcHBlbmRDaGlsZChwcmlvcml0eSk7XG5cbiAgICAgICAgICAgIC8vIGNvbnN0IGRlc2NyaXB0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICAvLyBkZXNjcmlwdGlvbi5jbGFzc0xpc3QuYWRkKCdkZXNjcmlwdGlvbicpO1xuICAgICAgICAgICAgLy8gZGVzY3JpcHRpb24udGV4dENvbnRlbnQgPSBhY3RpdmVUYXNrLmRlc2NyaXB0aW9uO1xuICAgICAgICAgICAgLy8gdGFzay5hcHBlbmRDaGlsZChkZXNjcmlwdGlvbik7XG5cblxuXG4gICAgICAgIH0pXG5cbiAgICAgICBcbiAgICAgICAgLy8vL2NyZWF0ZSBhZGRUYXNrIGRpdlxuXG4gICAgICAgIGNvbnN0IGFkZFRhc2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgYWRkVGFzay5jbGFzc0xpc3QuYWRkKCdhZGRUYXNrJyk7XG4gICAgICAgIGFkZFRhc2sudGV4dENvbnRlbnQgPSAnKyBBZGQgVGFzayc7XG4gICAgICAgIHRhc2tzLmFwcGVuZENoaWxkKGFkZFRhc2spO1xuXG4gICAgICAgIGFkZFRhc2suYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBvcGVuVGFza0Zvcm0pO1xuXG5cblxuICAgICAgICAvLy8vY3JlYXRlIGZvb3RlclxuICAgICAgICBjb25zdCBmb290ZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmb290ZXInKTtcbiAgICAgICAgYm9keS5hcHBlbmRDaGlsZChmb290ZXIpO1xuICAgIFxuICAgICAgICBjb25zdCBmb290ZXJIVGhyZWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMycpO1xuICAgICAgICBmb290ZXJIVGhyZWUudGV4dENvbnRlbnQgPSAndGhpcyBpcyBhIGZvb3Rlcic7XG4gICAgICAgIGZvb3Rlci5hcHBlbmRDaGlsZChmb290ZXJIVGhyZWUpO1xuXG5cbiAgICAgICAgLy8vL2NyZWF0ZSB1c2VyRm9ybSAtIGFkZHByb2plY3RcbiAgICAgICAgY29uc3QgYWRkUHJvamVjdEZvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgYWRkUHJvamVjdEZvcm0uaWQgPSAnYWRkUHJvamVjdEZvcm0nO1xuICAgICAgICBib2R5LmFwcGVuZENoaWxkKGFkZFByb2plY3RGb3JtKTtcblxuICAgICAgICBjb25zdCBhZGRQcm9qZWN0Rm9ybVVzZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmb3JtJyk7XG4gICAgICAgIGFkZFByb2plY3RGb3JtVXNlci5jbGFzc0xpc3QuYWRkKCdhZGRQcm9qZWN0Rm9ybVVzZXInKTtcbiAgICAgICAgLy8gYWRkUHJvamVjdEZvcm1Vc2VyLnN0eWxlLmhlaWdodCA9ICcxMDAlJztcbiAgICAgICAgYWRkUHJvamVjdEZvcm0uYXBwZW5kQ2hpbGQoYWRkUHJvamVjdEZvcm1Vc2VyKTtcblxuICAgICAgICBjb25zdCBhZGRQcm9qZWN0Rm9ybVVzZXJIZWFkaW5nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGFkZFByb2plY3RGb3JtVXNlckhlYWRpbmcuY2xhc3NMaXN0LmFkZCgnYWRkUHJvamVjdEZvcm1Vc2VySGVhZGluZycpO1xuICAgICAgICBhZGRQcm9qZWN0Rm9ybVVzZXIuYXBwZW5kQ2hpbGQoYWRkUHJvamVjdEZvcm1Vc2VySGVhZGluZyk7XG4gICAgICAgIFxuICAgICAgICBjb25zdCBhZGRQcm9qZWN0Rm9ybVVzZXJIZWFkaW5nSFR3byA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gyJyk7XG4gICAgICAgIGFkZFByb2plY3RGb3JtVXNlckhlYWRpbmdIVHdvLnRleHRDb250ZW50ID0gJ0FkZCBQcm9qZWN0JztcbiAgICAgICAgYWRkUHJvamVjdEZvcm1Vc2VySGVhZGluZy5hcHBlbmRDaGlsZChhZGRQcm9qZWN0Rm9ybVVzZXJIZWFkaW5nSFR3byk7XG5cbiAgICAgICAgY29uc3QgYWRkUHJvamVjdEZvcm1Vc2VyQm9keSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBhZGRQcm9qZWN0Rm9ybVVzZXJCb2R5LmNsYXNzTGlzdC5hZGQoJ2FkZFByb2plY3RGb3JtVXNlckJvZHknKTtcbiAgICAgICAgYWRkUHJvamVjdEZvcm1Vc2VyLmFwcGVuZENoaWxkKGFkZFByb2plY3RGb3JtVXNlckJvZHkpO1xuXG4gICAgICAgIGNvbnN0IGFkZFByb2plY3RGb3JtVXNlclVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndWwnKTtcbiAgICAgICAgYWRkUHJvamVjdEZvcm1Vc2VyVWwuY2xhc3NMaXN0LmFkZCgnYWRkUHJvamVjdEZvcm1Vc2VyVWwnKTtcbiAgICAgICAgYWRkUHJvamVjdEZvcm1Vc2VyQm9keS5hcHBlbmRDaGlsZChhZGRQcm9qZWN0Rm9ybVVzZXJVbCk7XG5cbiAgICAgICAgY29uc3QgYWRkUHJvamVjdEZvcm1Vc2VyTGlUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gICAgICAgIGFkZFByb2plY3RGb3JtVXNlckxpVGl0bGUuY2xhc3NMaXN0LmFkZCgnYWRkUHJvamVjdEZvcm1Vc2VyTGlUaXRsZScpXG4gICAgICAgIGFkZFByb2plY3RGb3JtVXNlclVsLmFwcGVuZENoaWxkKGFkZFByb2plY3RGb3JtVXNlckxpVGl0bGUpO1xuXG4gICAgICAgIGNvbnN0IGFkZFByb2plY3RGb3JtVXNlclRpdGxlTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgICAgICBhZGRQcm9qZWN0Rm9ybVVzZXJUaXRsZUxhYmVsLnNldEF0dHJpYnV0ZSgnZm9yJywgJ3Byb2plY3RUaXRsZScpO1xuICAgICAgICBhZGRQcm9qZWN0Rm9ybVVzZXJUaXRsZUxhYmVsLnRleHRDb250ZW50ID0gJ1Byb2plY3QgVGl0bGUgJztcbiAgICAgICAgYWRkUHJvamVjdEZvcm1Vc2VyTGlUaXRsZS5hcHBlbmRDaGlsZChhZGRQcm9qZWN0Rm9ybVVzZXJUaXRsZUxhYmVsKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgY29uc3QgYWRkUHJvamVjdEZvcm1Vc2VyVGl0bGVJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgICAgIGFkZFByb2plY3RGb3JtVXNlclRpdGxlSW5wdXQuY2xhc3NMaXN0LmFkZCgnYWRkUHJvamVjdEZvcm1UaXRsZUlucHV0Jyk7XG4gICAgICAgIGFkZFByb2plY3RGb3JtVXNlclRpdGxlSW5wdXQuc2V0QXR0cmlidXRlKCd0eXBlJywgJ3RleHQnKTsgIFxuICAgICAgICBhZGRQcm9qZWN0Rm9ybVVzZXJUaXRsZUlucHV0LnNldEF0dHJpYnV0ZSgnbmFtZScsICdwcm9qZWN0VGl0bGUnKTtcbiAgIFxuICAgICAgICBhZGRQcm9qZWN0Rm9ybVVzZXJMaVRpdGxlLmFwcGVuZENoaWxkKGFkZFByb2plY3RGb3JtVXNlclRpdGxlSW5wdXQpO1xuXG5cbiAgICAgICAgY29uc3QgYWRkUHJvamVjdEZvcm1Vc2VyQnV0dG9ucyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBhZGRQcm9qZWN0Rm9ybVVzZXJCdXR0b25zLmNsYXNzTGlzdC5hZGQoJ2FkZFByb2plY3RGb3JtVXNlckJ1dHRvbnMnKTtcbiAgICAgICAgYWRkUHJvamVjdEZvcm0uYXBwZW5kQ2hpbGQoYWRkUHJvamVjdEZvcm1Vc2VyQnV0dG9ucyk7XG5cbiAgICAgICAgY29uc3QgYWRkUHJvamVjdEZvcm1Vc2VyQ2FuY2VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgICAgIGFkZFByb2plY3RGb3JtVXNlckNhbmNlbC50ZXh0Q29udGVudCA9ICdDYW5jZWwnO1xuICAgICAgICBhZGRQcm9qZWN0Rm9ybVVzZXJCdXR0b25zLmFwcGVuZENoaWxkKGFkZFByb2plY3RGb3JtVXNlckNhbmNlbCk7XG4gICAgICAgIGFkZFByb2plY3RGb3JtVXNlckNhbmNlbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGNhbmNlbFByb2plY3RGb3JtKTtcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBjb25zdCBhZGRQcm9qZWN0Rm9ybVVzZXJBZGQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICAgICAgYWRkUHJvamVjdEZvcm1Vc2VyQWRkLnRleHRDb250ZW50ID0gJ0FkZCc7XG4gICAgICAgIGFkZFByb2plY3RGb3JtVXNlckJ1dHRvbnMuYXBwZW5kQ2hpbGQoYWRkUHJvamVjdEZvcm1Vc2VyQWRkKTtcbiAgICAgICAgYWRkUHJvamVjdEZvcm1Vc2VyQWRkLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgcHJvamVjdEZvcm1TdWJtaXQpO1xuXG5cblxuICAgICAgICAvLy8vY3JlYXRlIHVzZXJGb3JtIC0gYWRkVGFza1xuICAgICAgICBjb25zdCBhZGRUYXNrRm9ybSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBhZGRUYXNrRm9ybS5pZCA9ICdhZGRUYXNrRm9ybSc7XG4gICAgICAgIGJvZHkuYXBwZW5kQ2hpbGQoYWRkVGFza0Zvcm0pO1xuXG4gICAgICAgIGNvbnN0IGFkZFRhc2tGb3JtVXNlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2Zvcm0nKTtcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyLmNsYXNzTGlzdC5hZGQoJ2FkZFRhc2tGb3JtVXNlcicpO1xuICAgICAgICAvLyBhZGRUYXNrRm9ybVVzZXIuc3R5bGUuaGVpZ2h0ID0gJzEwMCUnO1xuICAgICAgICBhZGRUYXNrRm9ybS5hcHBlbmRDaGlsZChhZGRUYXNrRm9ybVVzZXIpO1xuXG4gICAgICAgIGNvbnN0IGFkZFRhc2tGb3JtVXNlckhlYWRpbmcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VySGVhZGluZy5jbGFzc0xpc3QuYWRkKCdhZGRUYXNrRm9ybVVzZXJIZWFkaW5nJyk7XG4gICAgICAgIGFkZFRhc2tGb3JtVXNlci5hcHBlbmRDaGlsZChhZGRUYXNrRm9ybVVzZXJIZWFkaW5nKTtcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IGFkZFRhc2tGb3JtVXNlckhlYWRpbmdIVHdvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDInKTtcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VySGVhZGluZ0hUd28udGV4dENvbnRlbnQgPSAnQWRkIFRhc2snO1xuICAgICAgICBhZGRUYXNrRm9ybVVzZXJIZWFkaW5nLmFwcGVuZENoaWxkKGFkZFRhc2tGb3JtVXNlckhlYWRpbmdIVHdvKTtcblxuICAgICAgICBjb25zdCBhZGRUYXNrRm9ybVVzZXJCb2R5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGFkZFRhc2tGb3JtVXNlckJvZHkuY2xhc3NMaXN0LmFkZCgnYWRkVGFza0Zvcm1Vc2VyQm9keScpO1xuICAgICAgICBhZGRUYXNrRm9ybVVzZXIuYXBwZW5kQ2hpbGQoYWRkVGFza0Zvcm1Vc2VyQm9keSk7XG5cbiAgICAgICAgY29uc3QgYWRkVGFza0Zvcm1Vc2VyVWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd1bCcpO1xuICAgICAgICBhZGRUYXNrRm9ybVVzZXJVbC5jbGFzc0xpc3QuYWRkKCdhZGRUYXNrRm9ybVVzZXJVbCcpO1xuICAgICAgICBhZGRUYXNrRm9ybVVzZXJCb2R5LmFwcGVuZENoaWxkKGFkZFRhc2tGb3JtVXNlclVsKTtcblxuICAgICAgICBjb25zdCBhZGRUYXNrRm9ybVVzZXJMaVRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKTtcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyTGlUaXRsZS5jbGFzc0xpc3QuYWRkKCdhZGRUYXNrRm9ybVVzZXJMaScpXG4gICAgICAgIGFkZFRhc2tGb3JtVXNlclVsLmFwcGVuZENoaWxkKGFkZFRhc2tGb3JtVXNlckxpVGl0bGUpO1xuXG4gICAgICAgIGNvbnN0IGFkZFRhc2tGb3JtVXNlclRpdGxlTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgICAgICBhZGRUYXNrRm9ybVVzZXJUaXRsZUxhYmVsLnNldEF0dHJpYnV0ZSgnZm9yJywgJ3Rhc2tUaXRsZScpO1xuICAgICAgICBhZGRUYXNrRm9ybVVzZXJUaXRsZUxhYmVsLnRleHRDb250ZW50ID0gJ1Rhc2sgVGl0bGUgJztcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyTGlUaXRsZS5hcHBlbmRDaGlsZChhZGRUYXNrRm9ybVVzZXJUaXRsZUxhYmVsKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgY29uc3QgYWRkVGFza0Zvcm1Vc2VyVGl0bGVJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgICAgIGFkZFRhc2tGb3JtVXNlclRpdGxlSW5wdXQuY2xhc3NMaXN0LmFkZCgnYWRkVGFza0Zvcm1JbnB1dCcpO1xuICAgICAgICBhZGRUYXNrRm9ybVVzZXJUaXRsZUlucHV0LmNsYXNzTGlzdC5hZGQoJ2FkZFRhc2tGb3JtVGl0bGVJbnB1dCcpO1xuICAgICAgICBhZGRUYXNrRm9ybVVzZXJUaXRsZUlucHV0LnNldEF0dHJpYnV0ZSgndHlwZScsICd0ZXh0Jyk7ICBcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyVGl0bGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ25hbWUnLCAndGFza1RpdGxlJyk7XG4gICAgICAgIGFkZFRhc2tGb3JtVXNlckxpVGl0bGUuYXBwZW5kQ2hpbGQoYWRkVGFza0Zvcm1Vc2VyVGl0bGVJbnB1dCk7XG5cbiAgICAgICAgY29uc3QgYWRkVGFza0Zvcm1Vc2VyTGlEZXNjcmlwdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gICAgICAgIGFkZFRhc2tGb3JtVXNlckxpRGVzY3JpcHRpb24uY2xhc3NMaXN0LmFkZCgnYWRkVGFza0Zvcm1Vc2VyTGknKVxuICAgICAgICBhZGRUYXNrRm9ybVVzZXJVbC5hcHBlbmRDaGlsZChhZGRUYXNrRm9ybVVzZXJMaURlc2NyaXB0aW9uKTtcblxuICAgICAgICBjb25zdCBhZGRUYXNrRm9ybVVzZXJEZXNjcmlwdGlvbkxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyRGVzY3JpcHRpb25MYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsICd0YXNrRGVzY3JpcHRpb24nKTtcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyRGVzY3JpcHRpb25MYWJlbC50ZXh0Q29udGVudCA9ICdUYXNrIERlc2NyaXB0aW9uICc7XG4gICAgICAgIGFkZFRhc2tGb3JtVXNlckxpRGVzY3JpcHRpb24uYXBwZW5kQ2hpbGQoYWRkVGFza0Zvcm1Vc2VyRGVzY3JpcHRpb25MYWJlbCk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgIGNvbnN0IGFkZFRhc2tGb3JtVXNlckRlc2NyaXB0aW9uSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgICAgICBhZGRUYXNrRm9ybVVzZXJEZXNjcmlwdGlvbklucHV0LmNsYXNzTGlzdC5hZGQoJ2FkZFRhc2tGb3JtSW5wdXQnKTtcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyRGVzY3JpcHRpb25JbnB1dC5jbGFzc0xpc3QuYWRkKCdhZGRUYXNrRm9ybURlc2NyaXB0aW9uSW5wdXQnKTtcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyRGVzY3JpcHRpb25JbnB1dC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAndGV4dCcpOyAgXG4gICAgICAgIGFkZFRhc2tGb3JtVXNlckRlc2NyaXB0aW9uSW5wdXQuc2V0QXR0cmlidXRlKCduYW1lJywgJ3Rhc2tEZXNjcmlwdGlvbicpO1xuICAgICAgICBhZGRUYXNrRm9ybVVzZXJMaURlc2NyaXB0aW9uLmFwcGVuZENoaWxkKGFkZFRhc2tGb3JtVXNlckRlc2NyaXB0aW9uSW5wdXQpO1xuXG4gICAgICAgIGNvbnN0IGFkZFRhc2tGb3JtVXNlckxpRHVlRGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gICAgICAgIGFkZFRhc2tGb3JtVXNlckxpRHVlRGF0ZS5jbGFzc0xpc3QuYWRkKCdhZGRUYXNrRm9ybVVzZXJMaScpXG4gICAgICAgIGFkZFRhc2tGb3JtVXNlclVsLmFwcGVuZENoaWxkKGFkZFRhc2tGb3JtVXNlckxpRHVlRGF0ZSk7XG5cbiAgICAgICAgY29uc3QgYWRkVGFza0Zvcm1Vc2VyRHVlRGF0ZUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyRHVlRGF0ZUxhYmVsLnNldEF0dHJpYnV0ZSgnZm9yJywgJ3Rhc2tEdWVEYXRlJyk7XG4gICAgICAgIGFkZFRhc2tGb3JtVXNlckR1ZURhdGVMYWJlbC50ZXh0Q29udGVudCA9ICdUYXNrIER1ZURhdGUgJztcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyTGlEdWVEYXRlLmFwcGVuZENoaWxkKGFkZFRhc2tGb3JtVXNlckR1ZURhdGVMYWJlbCk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgIGNvbnN0IGFkZFRhc2tGb3JtVXNlckR1ZURhdGVJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgICAgIGFkZFRhc2tGb3JtVXNlckR1ZURhdGVJbnB1dC5jbGFzc0xpc3QuYWRkKCdhZGRUYXNrRm9ybUlucHV0Jyk7XG4gICAgICAgIGFkZFRhc2tGb3JtVXNlckR1ZURhdGVJbnB1dC5jbGFzc0xpc3QuYWRkKCdhZGRUYXNrRm9ybUR1ZURhdGVJbnB1dCcpO1xuICAgICAgICBhZGRUYXNrRm9ybVVzZXJEdWVEYXRlSW5wdXQuc2V0QXR0cmlidXRlKCd0eXBlJywgJ3RleHQnKTsgIFxuICAgICAgICBhZGRUYXNrRm9ybVVzZXJEdWVEYXRlSW5wdXQuc2V0QXR0cmlidXRlKCduYW1lJywgJ3Rhc2tEdWVEYXRlJyk7XG4gICAgICAgIGFkZFRhc2tGb3JtVXNlckxpRHVlRGF0ZS5hcHBlbmRDaGlsZChhZGRUYXNrRm9ybVVzZXJEdWVEYXRlSW5wdXQpO1xuXG5cbiAgICAgICAgXG4gICAgICAgIGNvbnN0IGFkZFRhc2tGb3JtVXNlckJ1dHRvbnMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyQnV0dG9ucy5jbGFzc0xpc3QuYWRkKCdhZGRUYXNrRm9ybVVzZXJCdXR0b25zJyk7XG4gICAgICAgIGFkZFRhc2tGb3JtLmFwcGVuZENoaWxkKGFkZFRhc2tGb3JtVXNlckJ1dHRvbnMpO1xuXG4gICAgICAgIGNvbnN0IGFkZFRhc2tGb3JtVXNlclByaW9yaXR5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGFkZFRhc2tGb3JtVXNlclByaW9yaXR5LmNsYXNzTGlzdC5hZGQoJ2FkZFRhc2tGb3JtVXNlclByaW9yaXR5JylcbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyQnV0dG9ucy5hcHBlbmRDaGlsZChhZGRUYXNrRm9ybVVzZXJQcmlvcml0eSk7XG5cbiAgICAgICAgY29uc3QgYWRkVGFza0Zvcm1Vc2VyUHJpb3JpdHlIZWFkaW5nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGFkZFRhc2tGb3JtVXNlclByaW9yaXR5LmFwcGVuZENoaWxkKGFkZFRhc2tGb3JtVXNlclByaW9yaXR5SGVhZGluZyk7XG5cbiAgICAgICAgY29uc3QgYWRkVGFza0Zvcm1Vc2VyUHJpb3JpdHlIZWFkaW5nTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgICAgICBhZGRUYXNrRm9ybVVzZXJQcmlvcml0eUhlYWRpbmdMYWJlbC50ZXh0Q29udGVudCA9ICdQcmlvcml0eSc7XG4gICAgICAgIGFkZFRhc2tGb3JtVXNlclByaW9yaXR5SGVhZGluZy5hcHBlbmRDaGlsZChhZGRUYXNrRm9ybVVzZXJQcmlvcml0eUhlYWRpbmdMYWJlbCk7XG5cbiAgICAgICAgY29uc3QgYWRkVGFza0Zvcm1Vc2VyUHJpb3JpdHlGbGFncyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBhZGRUYXNrRm9ybVVzZXJQcmlvcml0eS5hcHBlbmRDaGlsZChhZGRUYXNrRm9ybVVzZXJQcmlvcml0eUZsYWdzKTtcblxuICAgICAgICBcbiAgICAgICAgZm9yIChsZXQgaT0xOyBpPDU7IGkrKykge1xuICAgICAgICAgICAgY29uc3QgZmxhZ0ltZ1BORyA9IG5ldyBJbWFnZSgpO1xuICAgICAgICAgICAgZmxhZ0ltZ1BORy5zcmMgPSBmbGFnSW1nO1xuICAgICAgICAgICAgZmxhZ0ltZ1BORy5jbGFzc0xpc3QuYWRkKGBmbGFnSW1nUE5HJHtpfWApO1xuICAgICAgICAgICAgZmxhZ0ltZ1BORy5kYXRhc2V0LnByaW9yaXR5ID0gaTtcbiAgICAgICAgICAgIGZsYWdJbWdQTkcuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBzZWxlY3RQcmlvcml0eUNsaWNrKTtcbiAgICAgICAgICAgIGFkZFRhc2tGb3JtVXNlclByaW9yaXR5RmxhZ3MuYXBwZW5kQ2hpbGQoZmxhZ0ltZ1BORyk7XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgcHJpb3JpdHlJbnB1dCA9ICdwNCc7XG5cbiBcbiAgXG5cbiAgICAgICAgY29uc3QgYWRkVGFza0Zvcm1Vc2VyQ2FuY2VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgICAgIGFkZFRhc2tGb3JtVXNlckNhbmNlbC50ZXh0Q29udGVudCA9ICdDYW5jZWwnO1xuICAgICAgICBhZGRUYXNrRm9ybVVzZXJCdXR0b25zLmFwcGVuZENoaWxkKGFkZFRhc2tGb3JtVXNlckNhbmNlbCk7XG5cbiAgICAgICAgYWRkVGFza0Zvcm1Vc2VyQ2FuY2VsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgY2FuY2VsVGFza0Zvcm0pO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgY29uc3QgYWRkVGFza0Zvcm1Vc2VyQWRkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgICAgIGFkZFRhc2tGb3JtVXNlckFkZC50ZXh0Q29udGVudCA9ICdBZGQnO1xuICAgICAgICBhZGRUYXNrRm9ybVVzZXJCdXR0b25zLmFwcGVuZENoaWxkKGFkZFRhc2tGb3JtVXNlckFkZCk7XG4gICAgICAgIFxuICAgICAgICBhZGRUYXNrRm9ybVVzZXJBZGQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0YXNrRm9ybVN1Ym1pdCk7XG5cblxuXG5cblxuICAgICAgICAvLy8vYWRkaW5nIHN3aXRjaFByb2plY3QgZnVuY3Rpb24gdG8gZWFjaCBsaW5lIGl0ZW0gXG4gICAgICAgIGNvbnN0IHRhc2tCYXJDb250ZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy50YXNrQmFyQ29udGVudHMnKTtcbiAgICAgICAgdGFza0JhckNvbnRlbnRzLmZvckVhY2goKHRhc2tCYXJDb250ZW50KSA9PiB7XG4gICAgICAgICAgICB0YXNrQmFyQ29udGVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHN3aXRjaFByb2plY3RDbGljaylcbiAgICAgICAgfSlcbiAgICAgICAgY29uc29sZS5sb2coJ3N3aXRjaFByb2plY3RDbGljayBldmVudCBoYXMgYmVlbiBhZGRlZCcpXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICB9XG5cblxuICAgIGZ1bmN0aW9uIHN3aXRjaFByb2plY3RDbGljayhlKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdydW5uaW5nIHN3aXRjaFByb2plY3RDbGljaycpO1xuXG4gICAgICAgIGNvbnN0IHNlbGVjdGVkUHJvamVjdFRpdGxlID0gZS50YXJnZXQuZGF0YXNldC5wcm9qZWN0VGl0bGU7XG4gICAgICAgIGNvbnNvbGUubG9nKGAke3NlbGVjdGVkUHJvamVjdFRpdGxlfSBoYXMgcnVuYCk7XG4gICAgICAgIGNvbnNvbGUubG9nKHR5cGVvZiBzZWxlY3RlZFByb2plY3RUaXRsZSk7XG5cbiAgICAgICAgLy8vL2lmIHdoYXQgd2FzIGNsaWNrZWQgb24gZG9lc24ndCBoYXZlIHByb2plY3RUaXRsZSwgcmV0dXJuIFxuICAgICAgICBpZiAoIXNlbGVjdGVkUHJvamVjdFRpdGxlKSByZXR1cm47XG4gICAgICAgIGNvbnNvbGUubG9nKGBkaWQgbm90IHJldHVybiBgKTtcblxuICAgICAgICB0b0RvTGlzdC5zd2l0Y2hQcm9qZWN0cyhzZWxlY3RlZFByb2plY3RUaXRsZSk7XG5cbiAgICAgICAgdXBkYXRlU2NyZWVuKCk7XG5cbiAgICB9XG5cblxuICAgIGNvbnN0IG9wZW5Qcm9qZWN0Rm9ybSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBjb25zdCBhZGRQcm9qZWN0Rm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNhZGRQcm9qZWN0Rm9ybScpO1xuICAgICAgICBhZGRQcm9qZWN0Rm9ybS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcblxuICAgIH1cblxuICAgIC8vIGZ1bmN0aW9uIG9wZW5Qcm9qZWN0Rm9ybSgpIHtcbiAgICAvLyAgICAgY29uc3QgYWRkUHJvamVjdEZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYWRkUHJvamVjdEZvcm0nKTtcbiAgICAvLyAgICAgYWRkUHJvamVjdEZvcm0uc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgLy8gfVxuXG5cbiAgICBmdW5jdGlvbiBjYW5jZWxQcm9qZWN0Rm9ybSgpIHtcbiAgICAgICAgXG4gICAgICAgIC8vLy9jbGVhcmluZyBhbnkgaW5wdXQgbWFkZSBcbiAgICAgICAgY29uc3QgYWRkUHJvamVjdEZvcm1Vc2VyVGl0bGVJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGRQcm9qZWN0Rm9ybVRpdGxlSW5wdXQnKVxuICAgICAgICBhZGRQcm9qZWN0Rm9ybVVzZXJUaXRsZUlucHV0LnZhbHVlPScnO1xuXG4gICAgICAgIGNvbnN0IGFkZFByb2plY3RGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2FkZFByb2plY3RGb3JtJyk7XG4gICAgICAgIGFkZFByb2plY3RGb3JtLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgfVxuXG5cbiAgICBmdW5jdGlvbiBwcm9qZWN0Rm9ybVN1Ym1pdCgpIHtcbiAgICAgICAgY29uc3QgYWRkUHJvamVjdEZvcm1Vc2VyVGl0bGVJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGRQcm9qZWN0Rm9ybVRpdGxlSW5wdXQnKTtcbiAgICAgICAgY29uc3QgcHJvamVjdFRpdGxlID0gYWRkUHJvamVjdEZvcm1Vc2VyVGl0bGVJbnB1dC52YWx1ZTtcblxuICAgICAgICB0b0RvTGlzdC5hZGRQcm9qZWN0KHByb2plY3RUaXRsZSk7XG4gICAgICAgIHVwZGF0ZVNjcmVlbigpOyAgICAgICAgXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gb3BlblRhc2tGb3JtKCkge1xuICAgICAgICBjb25zdCBhZGRUYXNrRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNhZGRUYXNrRm9ybScpO1xuICAgICAgICBhZGRUYXNrRm9ybS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICAgICAgXG4gICAgfVxuXG5cbiAgICBmdW5jdGlvbiBjYW5jZWxUYXNrRm9ybSgpIHtcbiAgICAgICAgY29uc3QgYWRkVGFza0Zvcm1JbnB1dHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYWRkVGFza0Zvcm1JbnB1dCcpO1xuXG4gICAgICAgIGZvciAobGV0IGFkZFRhc2tGb3JtSW5wdXQgb2YgYWRkVGFza0Zvcm1JbnB1dHMpIHtcbiAgICAgICAgICAgIGFkZFRhc2tGb3JtSW5wdXQudmFsdWUgPSAnJztcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGFkZFRhc2tGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2FkZFRhc2tGb3JtJyk7XG4gICAgICAgIGFkZFRhc2tGb3JtLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG5cbiAgICB9XG5cblxuICAgIGZ1bmN0aW9uIHRhc2tGb3JtU3VibWl0KCkge1xuICAgICAgICBjb25zdCB0YXNrVGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkVGFza0Zvcm1UaXRsZUlucHV0JykudmFsdWU7XG4gICAgICAgIGNvbnN0IHRhc2tEZXNjcmlwdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGRUYXNrRm9ybURlc2NyaXB0aW9uSW5wdXQnKS52YWx1ZTtcbiAgICAgICAgY29uc3QgdGFza0R1ZURhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkVGFza0Zvcm1EdWVEYXRlSW5wdXQnKS52YWx1ZTtcbiAgICAgICAgY29uc3QgdGFza1ByaW9yaXR5ID0gXG5cbiAgICAgICAgdG9Eb0xpc3QuYWRkVGFzaygpXG5cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBzZWxlY3RQcmlvcml0eUNsaWNrKGUpIHtcbiAgICAgICAgY29uc3QgcHJpb3JpdHlEYXRhc2V0ID0gZS50YXJnZXQuZGF0YXNldC5wcmlvcml0eTtcbiAgICAgICAgY29uc29sZS5sb2coJ3NlbGVjdFByaW9yaXR5Q2xpY2sgcnVubmluZycpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICBpZiAoIXByaW9yaXR5RGF0YXNldCkgcmV0dXJuO1xuXG4gICAgICAgIHJldHVybiBwcmlvcml0eURhdGFzZXRcblxuICAgIH1cblxuIFxuXG5cblxuXG5cbiAgICBcblxuXG4gICAgLy9pbml0aWFsIHJlbmRlciBcbiAgICB1cGRhdGVTY3JlZW4oKTtcblxuICAgIGNvbnNvbGUubG9nKCd1cGRhdGVTY3JlZW4gaGFzIHJ1bicpO1xuXG5cblxuXG5cbn1cblxuXG5jb25zb2xlLmxvZygnLS0tLS0tLS0tLS0tLS0tLS0tJyk7XG5cblxuc2NyZWVuQ29udHJvbGxlcigpO1xuXG5jb25zb2xlLmxvZyhgY2hlY2tpbmdgKTtcblxuXG5cblxuXG4vKlxuXG5cbmZ1bmN0aW9uIEJvYXJkKCkge1xuICAgIC8vc3RhdGUgb2YgdG9kb2xpc3RcblxuICAgIGJvYXJkID0gW11cbiAgICBib2FyZC5wdXNoKHByb2plY3QoJ2luYm94JykpOyAgICBcblxuICAgIGNvbnN0IGdldEJvYXJkID0gKCkgPT4gYm9hcmQ7XG5cbiAgICBcblxuXG59XG5cblxuZnVuY3Rpb24gcHJvamVjdChuYW1lKSB7XG5cbiAgICBwcm9qZWN0ID0gW107XG5cbiAgICBjb25zdCBhZGRUYXNrID0gcHJvamVjdC5wdXNoKHRhc2soKSk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBuYW1lO1xuICAgIH1cbiAgICBcbn1cblxuXG5mdW5jdGlvbiB0YXNrKCkge1xuXG4gICAgcHJpb3JpdHkgPSBbXG4gICAgICAgIDEsXG4gICAgICAgIDIsXG4gICAgICAgIDNcbiAgICBdO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgdGl0bGU6IHRpdGxlLFxuICAgICAgICB0aXRsZTogdGl0bGUsXG4gICAgICAgIGR1ZWRhdGUsXG4gICAgICAgIHByaW9yaXR5LFxuICAgICAgICBkZXNjcmlwdGlvblxuICAgICAgICBjaGVja2xpc3RcbiAgICB9XG5cbn1cblxuc2NyZWVuQ29udHJvbGxlcigpIHtcbiAgICBjb25zdCBjb250cm9sbGVyID0gQ29udHJvbGxlcigpO1xuXG4gICAgY3JlYXRlIGh0bWwgZWxlbWVudHNcbiAgICBcbiAgICBjb25zdCB1cGRhdGVTY3JlZW4gPSAoKSA9PiB7XG5cbiAgICB9XG5cblxuICAgIGZ1bmN0aW9uIGNsaWNrSGFuZGxlckJvYXJkKGUpIHtcbiAgICAgICAgLy9hZGRpbmcgdGFzay4uLi4gXG4gICAgICAgIGNvbnN0IHRpdGxlXG4gICAgICAgIGNvbnN0IHRpdGxlXG4gICAgICAgIGNvbnN0IGR1ZWRhdGVcbiAgICAgICAgY29uc3QgcHJpb3JpdHlcbiAgICAgICAgY29uc3QgZGVzY3JpcHRpb25cbiAgICAgICAgY29uc3QgY2hlY2tsaXN0XG5cbiAgICAgICAgY29udHJvbGxlci5hZGRUYXNrKGlucHV0KTtcbiAgICAgICAgdXBkYXRlU2NyZWVuKCk7XG5cblxuICAgIH1cblxuICAgIC8vLy9pbml0aWFsIHJlbmRlclxuICAgIHVwZGF0ZVNjcmVlbigpO1xuXG5cblxuICAgIFxufVxuXG5BRERJTkcgVEFTS1xuMS4gc2NyZWVuIGNvbnRyb2xsZXIgYXNrIHVzZXIgZm9yIGluZm9cbjIuIHVzZSBpbmZvIHRvIGNyZWF0ZVRhc2soKSBpbiBDb250cm9sbGVyXG4gICAgMSl0YXNrKGlucHV0IGluZm8gaGVyZSlcbiAgICAyKXB1c2ggdGFzayB0byBhY3RpdmUgcHJvamVjdCBcbiAgICAzKWlmIHByb2plY3QgYWxyZWFkeSBleGlzdHMgaW4gYm9hcmRcbiAgICAgICAgcmVwbGFjZSBwcm9qZWN0IGluIGJvYXJkKCkgd2l0aCBjaGFuZ2VkIHByb2plY3RcbiAgICAgIGlmIHByb2plY3QgZG9lcyBub3QgZXhpc3QgaW4gYm9hcmRcbiAgICAgICAgcHVzaCBwcm9qZWN0IHRvIGJvYXJkIFxuICAgICAgICAgICAgZ2l2ZSBpdCBpZCBudW1iZXIuLi4gXG4gICAgXG4gICAgNCkgXG4zLiAgXG4zLiBwdXNoIHRhc2sgdG8gcHJvamVjdCBcbjQuIHB1c2ggcHJvamVjdCB0byBib2FyZFxuNS4gdXBkYXRlU2NyZWVuXG5cblVQREFURVNDUkVFTlxuMS4gY2xlYXIgYm9hcmRcbjIuIGdldEJvYXJkXG4zLiBjcmVhdGUgZWxlbWVudHMuLiBzZXQgdXAgZGlzcGxheSAgXG5cblxuU1dJVENIIEJFVFdFRU4gUFJPSkVDVFMuLi4gXG5cblxuXG4qL1xuIl0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlIiwic291cmNlUm9vdCIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImciLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInJlcGxhY2UiLCJwIiwibmMiLCJQcm9qZWN0IiwidGl0bGUiLCJ0YXNrcyIsIlRhc2siLCJkdWVEYXRlIiwicHJpb3JpdHkiLCJkZXNjcmlwdGlvbiIsInByaW9yaXR5TGlzdCIsInNlbGVjdGVkUHJpb3JpdHkiLCJpbnB1dFByaW9yaXR5IiwiZ2V0UHJpb3JpdHkiLCJjb25zb2xlIiwibG9nIiwidG9Eb0xpc3QiLCJib2FyZCIsImdldEJvYXJkIiwiYWRkUHJvamVjdCIsImFkZFRhc2siLCJwcm9qZWN0VGl0bGUiLCJ0YXNrSW5wdXRzIiwiQm9hcmQiLCJib2FyZEJvYXJkIiwiYWN0aXZlUHJvamVjdCIsImFjdGl2ZVRhc2siLCJnZXRBY3RpdmVQcm9qZWN0VGl0bGUiLCJnZXRBY3RpdmVQcm9qZWN0VGFza3MiLCJzd2l0Y2hQcm9qZWN0cyIsInNlbGVjdGVkUHJvamVjdFRpdGxlIiwiQ29udHJvbGxlciIsImJvZHkiLCJ1cGRhdGVTY3JlZW4iLCJpbm5lckhUTUwiLCJhY3RpdmVQcm9qZWN0VGl0bGUiLCJoZWFkZXIiLCJoZWFkZXJUaXRsZSIsInRleHRDb250ZW50IiwidGFza0JhciIsImNsYXNzTGlzdCIsImFkZCIsInRhc2tCYXJUb3AiLCJpbmJveCIsImRhdGFzZXQiLCJpbmJveEltZ1BORyIsIkltYWdlIiwiaW5ib3hIVGhyZWUiLCJ0b2RheSIsInRvZGF5SW1nUE5HIiwidG9kYXlIVGhyZWUiLCJ1cGNvbWluZyIsInVwY29taW5nSW1nUE5HIiwidXBjb21pbmdIVGhyZWUiLCJwcm9qZWN0cyIsInByb2plY3RzSFR3byIsInByb2plY3RzTmF2IiwicHJvamVjdHNOYXZQcm9qZWN0IiwicHJvamVjdE5hdlByb2plY3RIVGhyZWUiLCJhZGRQcm9qZWN0SW1nUE5HIiwiYWRkUHJvamVjdEhUaHJlZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJvcGVuUHJvamVjdEZvcm0iLCJ0YXNrVmlldyIsImZvckVhY2giLCJ0YXNrIiwiY2hlY2tNYXJrSW1nUE5HIiwidGFza1RpdGxlIiwidGFza0R1ZURhdGUiLCJ0YXNrRGVzY3JpcHRpb24iLCJvcGVuVGFza0Zvcm0iLCJmb290ZXIiLCJmb290ZXJIVGhyZWUiLCJhZGRQcm9qZWN0Rm9ybSIsImFkZFByb2plY3RGb3JtVXNlciIsImFkZFByb2plY3RGb3JtVXNlckhlYWRpbmciLCJhZGRQcm9qZWN0Rm9ybVVzZXJIZWFkaW5nSFR3byIsImFkZFByb2plY3RGb3JtVXNlckJvZHkiLCJhZGRQcm9qZWN0Rm9ybVVzZXJVbCIsImFkZFByb2plY3RGb3JtVXNlckxpVGl0bGUiLCJhZGRQcm9qZWN0Rm9ybVVzZXJUaXRsZUxhYmVsIiwiYWRkUHJvamVjdEZvcm1Vc2VyVGl0bGVJbnB1dCIsImFkZFByb2plY3RGb3JtVXNlckJ1dHRvbnMiLCJhZGRQcm9qZWN0Rm9ybVVzZXJDYW5jZWwiLCJjYW5jZWxQcm9qZWN0Rm9ybSIsImFkZFByb2plY3RGb3JtVXNlckFkZCIsInByb2plY3RGb3JtU3VibWl0IiwiYWRkVGFza0Zvcm0iLCJhZGRUYXNrRm9ybVVzZXIiLCJhZGRUYXNrRm9ybVVzZXJIZWFkaW5nIiwiYWRkVGFza0Zvcm1Vc2VySGVhZGluZ0hUd28iLCJhZGRUYXNrRm9ybVVzZXJCb2R5IiwiYWRkVGFza0Zvcm1Vc2VyVWwiLCJhZGRUYXNrRm9ybVVzZXJMaVRpdGxlIiwiYWRkVGFza0Zvcm1Vc2VyVGl0bGVMYWJlbCIsImFkZFRhc2tGb3JtVXNlclRpdGxlSW5wdXQiLCJhZGRUYXNrRm9ybVVzZXJMaURlc2NyaXB0aW9uIiwiYWRkVGFza0Zvcm1Vc2VyRGVzY3JpcHRpb25MYWJlbCIsImFkZFRhc2tGb3JtVXNlckRlc2NyaXB0aW9uSW5wdXQiLCJhZGRUYXNrRm9ybVVzZXJMaUR1ZURhdGUiLCJhZGRUYXNrRm9ybVVzZXJEdWVEYXRlTGFiZWwiLCJhZGRUYXNrRm9ybVVzZXJEdWVEYXRlSW5wdXQiLCJhZGRUYXNrRm9ybVVzZXJCdXR0b25zIiwiYWRkVGFza0Zvcm1Vc2VyUHJpb3JpdHkiLCJhZGRUYXNrRm9ybVVzZXJQcmlvcml0eUhlYWRpbmciLCJhZGRUYXNrRm9ybVVzZXJQcmlvcml0eUhlYWRpbmdMYWJlbCIsImFkZFRhc2tGb3JtVXNlclByaW9yaXR5RmxhZ3MiLCJmbGFnSW1nUE5HIiwic2VsZWN0UHJpb3JpdHlDbGljayIsImFkZFRhc2tGb3JtVXNlckNhbmNlbCIsImNhbmNlbFRhc2tGb3JtIiwiYWRkVGFza0Zvcm1Vc2VyQWRkIiwidGFza0Zvcm1TdWJtaXQiLCJxdWVyeVNlbGVjdG9yQWxsIiwidGFza0JhckNvbnRlbnQiLCJzd2l0Y2hQcm9qZWN0Q2xpY2siLCJkaXNwbGF5IiwidmFsdWUiLCJhZGRUYXNrRm9ybUlucHV0cyIsImFkZFRhc2tGb3JtSW5wdXQiLCJwcmlvcml0eURhdGFzZXQiLCJzY3JlZW5Db250cm9sbGVyIl0sInNvdXJjZVJvb3QiOiIifQ==